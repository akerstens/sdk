{
    "vs_runtime": {
        "VipSeAssigned": {
            "name": "VipSeAssigned", 
            "properties": {
                "admin_down_requested": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "admin_down_requested", 
                    "required": "False", 
                    "description": []
                }, 
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "snat_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "snat_ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "scalein_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "scalein_in_progress", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VsSeAssigned": {
            "name": "VsSeAssigned", 
            "properties": {
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "snat_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "snat_ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "scalein_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "scalein_in_progress", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VsScaleoutSe": {
            "name": "VsScaleoutSe", 
            "properties": {
                "recommended": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "recommended", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VirtualServiceStateDBCacheSummary": {
            "name": "VirtualServiceStateDBCacheSummary", 
            "properties": {
                "last_state": {
                    "default_value": "OPER_DISABLED", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "last_state", 
                    "required": "False", 
                    "option_values": [
                        "OPER_UP", 
                        "OPER_DOWN", 
                        "OPER_CREATING", 
                        "OPER_RESOURCES", 
                        "OPER_INACTIVE", 
                        "OPER_DISABLED", 
                        "OPER_UNUSED", 
                        "OPER_UNKNOWN", 
                        "OPER_PROCESSING", 
                        "OPER_INITIALIZING", 
                        "OPER_ERROR_DISABLED", 
                        "OPER_AWAIT_MANUAL_PLACEMENT", 
                        "OPER_UPGRADING", 
                        "OPER_SE_PROCESSING", 
                        "OPER_PARTITIONED", 
                        "OPER_DISABLING", 
                        "OPER_FAILED", 
                        "OPER_UNAVAIL"
                    ], 
                    "description": [
                        "Enum options - OPER_UP, OPER_DOWN, OPER_CREATING, OPER_RESOURCES, OPER_INACTIVE, OPER_DISABLED, OPER_UNUSED, OPER_UNKNOWN, OPER_PROCESSING,", 
                        "OPER_INITIALIZING, OPER_ERROR_DISABLED, OPER_AWAIT_MANUAL_PLACEMENT, OPER_UPGRADING, OPER_SE_PROCESSING, OPER_PARTITIONED, OPER_DISABLING,", 
                        "OPER_FAILED, OPER_UNAVAIL."
                    ]
                }, 
                "enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enabled", 
                    "required": "False", 
                    "description": []
                }, 
                "is_invalid": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_invalid", 
                    "required": "False", 
                    "description": []
                }, 
                "num_old_events": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_old_events", 
                    "required": "False", 
                    "description": []
                }, 
                "num_events": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_events", 
                    "required": "False", 
                    "description": []
                }, 
                "summary": {
                    "doc_type": "VirtualServiceRuntimeSummary", 
                    "py_type": "VirtualServiceRuntimeSummary", 
                    "name": "summary", 
                    "required": "False", 
                    "ref_type": "VirtualServiceRuntimeSummary", 
                    "description": []
                }, 
                "vip_last_states": {
                    "doc_type": "VirtualServiceVipMetaData", 
                    "py_type": "list", 
                    "name": "vip_last_states", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VirtualServiceVipMetaData", 
                    "description": []
                }, 
                "ew": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "ew", 
                    "required": "False", 
                    "description": []
                }, 
                "se": {
                    "doc_type": "SeVsRuntimeSummary", 
                    "py_type": "list", 
                    "name": "se", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeVsRuntimeSummary", 
                    "description": []
                }
            }
        }, 
        "VsCandidateSe": {
            "name": "VsCandidateSe", 
            "properties": {
                "recommended": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "recommended", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VsScaleoutList": {
            "name": "VsScaleoutList", 
            "properties": {
                "host": {
                    "doc_type": "VsScaleoutHost", 
                    "py_type": "list", 
                    "name": "host", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VsScaleoutHost", 
                    "description": []
                }, 
                "se": {
                    "doc_type": "VsScaleoutSe", 
                    "py_type": "list", 
                    "name": "se", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VsScaleoutSe", 
                    "description": []
                }
            }
        }, 
        "VirtualServiceRuntime": {
            "name": "VirtualServiceRuntime", 
            "properties": {
                "num_additional_se": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_additional_se", 
                    "required": "False", 
                    "description": []
                }, 
                "datapath_debug": {
                    "doc_type": "DebugVirtualService", 
                    "py_type": "DebugVirtualService", 
                    "name": "datapath_debug", 
                    "required": "False", 
                    "ref_type": "DebugVirtualService", 
                    "description": []
                }, 
                "is_dns_vs": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_dns_vs", 
                    "required": "False", 
                    "description": []
                }, 
                "version": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "version", 
                    "required": "False", 
                    "description": [
                        "Version number of the se list update."
                    ]
                }, 
                "tls_ticket_key": {
                    "doc_type": "TLSTicket", 
                    "py_type": "list", 
                    "name": "tls_ticket_key", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "TLSTicket", 
                    "description": []
                }, 
                "gslb_dns_geo_update": {
                    "doc_type": "GslbDnsGeoUpdate", 
                    "py_type": "GslbDnsGeoUpdate", 
                    "name": "gslb_dns_geo_update", 
                    "required": "False", 
                    "ref_type": "GslbDnsGeoUpdate", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "gslb_dns_update": {
                    "doc_type": "GslbDnsUpdate", 
                    "py_type": "GslbDnsUpdate", 
                    "name": "gslb_dns_update", 
                    "required": "False", 
                    "ref_type": "GslbDnsUpdate", 
                    "description": []
                }, 
                "vip_runtime": {
                    "doc_type": "VipRuntime", 
                    "py_type": "list", 
                    "name": "vip_runtime", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VipRuntime", 
                    "description": []
                }, 
                "east_west": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "east_west", 
                    "required": "False", 
                    "description": []
                }, 
                "apic_extension": {
                    "doc_type": "VsApicExtension", 
                    "py_type": "VsApicExtension", 
                    "name": "apic_extension", 
                    "required": "False", 
                    "ref_type": "VsApicExtension", 
                    "description": []
                }, 
                "one_plus_one_ha": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "one_plus_one_ha", 
                    "required": "False", 
                    "description": []
                }, 
                "ipam_dns_records": {
                    "doc_type": "DnsRecord", 
                    "py_type": "list", 
                    "name": "ipam_dns_records", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsRecord", 
                    "description": []
                }, 
                "last_changed_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_changed_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "marked_for_delete": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "marked_for_delete", 
                    "required": "False", 
                    "description": []
                }, 
                "rules_configured": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "rules_configured", 
                    "required": "False", 
                    "description": []
                }, 
                "type": {
                    "default_value": "VS_TYPE_NORMAL", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "type", 
                    "required": "False", 
                    "option_values": [
                        "VS_TYPE_NORMAL", 
                        "VS_TYPE_VH_PARENT", 
                        "VS_TYPE_VH_CHILD"
                    ], 
                    "description": [
                        "Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD."
                    ]
                }, 
                "servers_configured": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "servers_configured", 
                    "required": "False", 
                    "description": []
                }, 
                "manual_placement": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "manual_placement", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SeParamsFilter": {
            "name": "SeParamsFilter", 
            "properties": {
                "all_se": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "all_se", 
                    "required": "False", 
                    "description": [
                        "Report from all ses overriding disable_aggregate field.", 
                        "If there are more than max scale out ses, then this filter pops an error message to use a specific se."
                    ]
                }
            }
        }, 
        "VirtualServiceRuntimeSummary": {
            "name": "VirtualServiceRuntimeSummary", 
            "properties": {
                "one_plus_one_ha": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "one_plus_one_ha", 
                    "required": "False", 
                    "description": []
                }, 
                "service_engine": {
                    "doc_type": "VipSeAssigned", 
                    "py_type": "list", 
                    "name": "service_engine", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VipSeAssigned", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "last_scale_status": {
                    "doc_type": "ScaleStatus", 
                    "py_type": "ScaleStatus", 
                    "name": "last_scale_status", 
                    "required": "False", 
                    "ref_type": "ScaleStatus", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "scaleout_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "scaleout_in_progress", 
                    "required": "False", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "scale_status": {
                    "doc_type": "ScaleStatus", 
                    "py_type": "ScaleStatus", 
                    "name": "scale_status", 
                    "required": "False", 
                    "ref_type": "ScaleStatus", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "first_se_assigned_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "first_se_assigned_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "migrate_scaleout_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "migrate_scaleout_pending", 
                    "required": "False", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "config_status": {
                    "doc_type": "ConfigurationStatus", 
                    "py_type": "ConfigurationStatus", 
                    "name": "config_status", 
                    "required": "False", 
                    "ref_type": "ConfigurationStatus", 
                    "description": []
                }, 
                "migrate_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "migrate_in_progress", 
                    "required": "False", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "east_west": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "east_west", 
                    "required": "False", 
                    "description": []
                }, 
                "progress_percent": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "progress_percent", 
                    "required": "False", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "vs_placement_resolution_info": {
                    "doc_type": "VsPlacementResolutionInfo", 
                    "py_type": "VsPlacementResolutionInfo", 
                    "name": "vs_placement_resolution_info", 
                    "required": "False", 
                    "ref_type": "VsPlacementResolutionInfo", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "upgrade_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "upgrade_in_progress", 
                    "required": "False", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "percent_ses_up": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "percent_ses_up", 
                    "required": "False", 
                    "description": []
                }, 
                "type": {
                    "default_value": "VS_TYPE_NORMAL", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "type", 
                    "required": "False", 
                    "option_values": [
                        "VS_TYPE_NORMAL", 
                        "VS_TYPE_VH_PARENT", 
                        "VS_TYPE_VH_CHILD"
                    ], 
                    "description": [
                        "Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD."
                    ]
                }, 
                "user_scaleout_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "user_scaleout_pending", 
                    "required": "False", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "vip_summary": {
                    "doc_type": "VipRuntimeSummary", 
                    "py_type": "list", 
                    "name": "vip_summary", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VipRuntimeSummary", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "scalein_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "scalein_in_progress", 
                    "required": "False", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "migrate_scalein_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "migrate_scalein_pending", 
                    "required": "False", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "se_create_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "se_create_in_progress", 
                    "required": "False", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }
            }
        }, 
        "VipRuntimeDetail": {
            "name": "VipRuntimeDetail", 
            "properties": {
                "virtual_service_auth_stats": {
                    "doc_type": "VirtualServiceAuthStats", 
                    "py_type": "list", 
                    "name": "virtual_service_auth_stats", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VirtualServiceAuthStats", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "migrate_scaleout_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "migrate_scaleout_pending", 
                    "required": "False", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "service_engine": {
                    "doc_type": "VipSeAssigned", 
                    "py_type": "list", 
                    "name": "service_engine", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VipSeAssigned", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "fel4stats": {
                    "doc_type": "VserverL4Stats", 
                    "py_type": "list", 
                    "name": "fel4stats", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VserverL4Stats", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "l7_virtual_service_stats_runtime": {
                    "doc_type": "L7VirtualServiceStatsRuntime", 
                    "py_type": "list", 
                    "name": "l7_virtual_service_stats_runtime", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "L7VirtualServiceStatsRuntime", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "scale_status": {
                    "doc_type": "ScaleStatus", 
                    "py_type": "ScaleStatus", 
                    "name": "scale_status", 
                    "required": "False", 
                    "ref_type": "ScaleStatus", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "first_se_assigned_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "first_se_assigned_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "scalein_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "scalein_in_progress", 
                    "required": "False", 
                    "description": [
                        "When true, it indicates vip is in process of scalein.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "config_status": {
                    "doc_type": "ConfigurationStatus", 
                    "py_type": "ConfigurationStatus", 
                    "name": "config_status", 
                    "required": "False", 
                    "ref_type": "ConfigurationStatus", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "migrate_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "migrate_in_progress", 
                    "required": "False", 
                    "description": [
                        "When true, it indicates vip is in process of migrate.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "scaleout_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "scaleout_in_progress", 
                    "required": "False", 
                    "description": [
                        "When true, it indicates vip is in process of scaleout.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "progress_percent": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "progress_percent", 
                    "required": "False", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "vip_placement_resolution_info": {
                    "doc_type": "VipPlacementResolutionInfo", 
                    "py_type": "VipPlacementResolutionInfo", 
                    "name": "vip_placement_resolution_info", 
                    "required": "False", 
                    "ref_type": "VipPlacementResolutionInfo", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "user_scaleout_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "user_scaleout_pending", 
                    "required": "False", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "fel7stats": {
                    "doc_type": "VserverL7Stats", 
                    "py_type": "list", 
                    "name": "fel7stats", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VserverL7Stats", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "migrate_scalein_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "migrate_scalein_pending", 
                    "required": "False", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "last_scale_status": {
                    "doc_type": "ScaleStatus", 
                    "py_type": "ScaleStatus", 
                    "name": "last_scale_status", 
                    "required": "False", 
                    "ref_type": "ScaleStatus", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "VsCandidateHost": {
            "name": "VsCandidateHost", 
            "properties": {
                "recommended": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "recommended", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VipRuntime": {
            "name": "VipRuntime", 
            "properties": {
                "num_additional_se": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_additional_se", 
                    "required": "False", 
                    "description": []
                }, 
                "scaleout_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "scaleout_in_progress", 
                    "required": "False", 
                    "description": []
                }, 
                "migrate_scalein_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "migrate_scalein_pending", 
                    "required": "False", 
                    "description": []
                }, 
                "supp_runtime_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "supp_runtime_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "last_changed_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_changed_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "marked_for_delete": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "marked_for_delete", 
                    "required": "False", 
                    "description": []
                }, 
                "servers_configured": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "servers_configured", 
                    "required": "False", 
                    "description": []
                }, 
                "fsm_state_id": {
                    "default_value": "0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "fsm_state_id", 
                    "required": "False", 
                    "description": []
                }, 
                "migrate_request": {
                    "doc_type": "VsMigrateParams", 
                    "py_type": "VsMigrateParams", 
                    "name": "migrate_request", 
                    "required": "False", 
                    "ref_type": "VsMigrateParams", 
                    "description": []
                }, 
                "migrate_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "migrate_in_progress", 
                    "required": "False", 
                    "description": []
                }, 
                "scalein_request": {
                    "doc_type": "VsScaleinParams", 
                    "py_type": "VsScaleinParams", 
                    "name": "scalein_request", 
                    "required": "False", 
                    "ref_type": "VsScaleinParams", 
                    "description": []
                }, 
                "user_scaleout_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "user_scaleout_pending", 
                    "required": "False", 
                    "description": []
                }, 
                "ev_status": {
                    "doc_type": "VsEvStatus", 
                    "py_type": "VsEvStatus", 
                    "name": "ev_status", 
                    "required": "False", 
                    "ref_type": "VsEvStatus", 
                    "description": []
                }, 
                "last_scale_status": {
                    "doc_type": "ScaleStatus", 
                    "py_type": "ScaleStatus", 
                    "name": "last_scale_status", 
                    "required": "False", 
                    "ref_type": "ScaleStatus", 
                    "description": []
                }, 
                "first_se_assigned_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "first_se_assigned_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "fsm_state_name": {
                    "default_value": "VipFsmMap::Inactive", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "fsm_state_name", 
                    "required": "False", 
                    "description": []
                }, 
                "se_list": {
                    "doc_type": "SeList", 
                    "py_type": "list", 
                    "name": "se_list", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeList", 
                    "description": []
                }, 
                "scalein_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "scalein_in_progress", 
                    "required": "False", 
                    "description": []
                }, 
                "scale_status": {
                    "doc_type": "ScaleStatus", 
                    "py_type": "ScaleStatus", 
                    "name": "scale_status", 
                    "required": "False", 
                    "ref_type": "ScaleStatus", 
                    "description": []
                }, 
                "migrate_scaleout_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "migrate_scaleout_pending", 
                    "required": "False", 
                    "description": []
                }, 
                "first_time_placement": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "first_time_placement", 
                    "required": "False", 
                    "description": []
                }, 
                "progress_percent": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "progress_percent", 
                    "required": "False", 
                    "description": []
                }, 
                "requested_resource": {
                    "doc_type": "VirtualServiceResource", 
                    "py_type": "VirtualServiceResource", 
                    "name": "requested_resource", 
                    "required": "False", 
                    "ref_type": "VirtualServiceResource", 
                    "description": []
                }
            }
        }, 
        "ScaleStatus": {
            "name": "ScaleStatus", 
            "properties": {
                "vip_placement_resolution_info": {
                    "doc_type": "VipPlacementResolutionInfo", 
                    "py_type": "VipPlacementResolutionInfo", 
                    "name": "vip_placement_resolution_info", 
                    "required": "False", 
                    "ref_type": "VipPlacementResolutionInfo", 
                    "description": []
                }
            }
        }, 
        "VipRuntimeSummary": {
            "name": "VipRuntimeSummary", 
            "properties": {
                "service_engine": {
                    "doc_type": "VipSeAssigned", 
                    "py_type": "list", 
                    "name": "service_engine", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VipSeAssigned", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "last_scale_status": {
                    "doc_type": "ScaleStatus", 
                    "py_type": "ScaleStatus", 
                    "name": "last_scale_status", 
                    "required": "False", 
                    "ref_type": "ScaleStatus", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "scaleout_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "scaleout_in_progress", 
                    "required": "False", 
                    "description": [
                        "When true, it indicates vip is in process of scaleout.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "scale_status": {
                    "doc_type": "ScaleStatus", 
                    "py_type": "ScaleStatus", 
                    "name": "scale_status", 
                    "required": "False", 
                    "ref_type": "ScaleStatus", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "first_se_assigned_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "first_se_assigned_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "migrate_scaleout_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "migrate_scaleout_pending", 
                    "required": "False", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "config_status": {
                    "doc_type": "ConfigurationStatus", 
                    "py_type": "ConfigurationStatus", 
                    "name": "config_status", 
                    "required": "False", 
                    "ref_type": "ConfigurationStatus", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "migrate_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "migrate_in_progress", 
                    "required": "False", 
                    "description": [
                        "When true, it indicates vip is in process of migrate.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "progress_percent": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "progress_percent", 
                    "required": "False", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "vip_placement_resolution_info": {
                    "doc_type": "VipPlacementResolutionInfo", 
                    "py_type": "VipPlacementResolutionInfo", 
                    "name": "vip_placement_resolution_info", 
                    "required": "False", 
                    "ref_type": "VipPlacementResolutionInfo", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "percent_ses_up": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "percent_ses_up", 
                    "required": "False", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "user_scaleout_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "user_scaleout_pending", 
                    "required": "False", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "scalein_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "scalein_in_progress", 
                    "required": "False", 
                    "description": [
                        "When true, it indicates vip is in process of scalein.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "migrate_scalein_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "migrate_scalein_pending", 
                    "required": "False", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "VsScaleoutHost": {
            "name": "VsScaleoutHost", 
            "properties": {
                "recommended": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "recommended", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VirtualServiceRuntimeDetail": {
            "name": "VirtualServiceRuntimeDetail", 
            "properties": {
                "one_plus_one_ha": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "one_plus_one_ha", 
                    "required": "False", 
                    "description": []
                }, 
                "scaleout_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "scaleout_in_progress", 
                    "required": "False", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "migrate_scalein_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "migrate_scalein_pending", 
                    "required": "False", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "virtual_service_auth_stats": {
                    "doc_type": "VirtualServiceAuthStats", 
                    "py_type": "list", 
                    "name": "virtual_service_auth_stats", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VirtualServiceAuthStats", 
                    "description": []
                }, 
                "service_engine": {
                    "doc_type": "VipSeAssigned", 
                    "py_type": "list", 
                    "name": "service_engine", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VipSeAssigned", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "l7_virtual_service_stats_runtime": {
                    "doc_type": "L7VirtualServiceStatsRuntime", 
                    "py_type": "list", 
                    "name": "l7_virtual_service_stats_runtime", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "L7VirtualServiceStatsRuntime", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "dns_stats": {
                    "doc_type": "VserverDNSStats", 
                    "py_type": "list", 
                    "name": "dns_stats", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VserverDNSStats", 
                    "description": []
                }, 
                "fel7stats": {
                    "doc_type": "VserverL7Stats", 
                    "py_type": "list", 
                    "name": "fel7stats", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VserverL7Stats", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "config_status": {
                    "doc_type": "ConfigurationStatus", 
                    "py_type": "ConfigurationStatus", 
                    "name": "config_status", 
                    "required": "False", 
                    "ref_type": "ConfigurationStatus", 
                    "description": []
                }, 
                "migrate_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "migrate_in_progress", 
                    "required": "False", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "east_west": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "east_west", 
                    "required": "False", 
                    "description": []
                }, 
                "user_scaleout_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "user_scaleout_pending", 
                    "required": "False", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "type": {
                    "default_value": "VS_TYPE_NORMAL", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "type", 
                    "required": "False", 
                    "option_values": [
                        "VS_TYPE_NORMAL", 
                        "VS_TYPE_VH_PARENT", 
                        "VS_TYPE_VH_CHILD"
                    ], 
                    "description": [
                        "Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD."
                    ]
                }, 
                "last_scale_status": {
                    "doc_type": "ScaleStatus", 
                    "py_type": "ScaleStatus", 
                    "name": "last_scale_status", 
                    "required": "False", 
                    "ref_type": "ScaleStatus", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "first_se_assigned_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "first_se_assigned_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "vs_placement_resolution_info": {
                    "doc_type": "VsPlacementResolutionInfo", 
                    "py_type": "VsPlacementResolutionInfo", 
                    "name": "vs_placement_resolution_info", 
                    "required": "False", 
                    "ref_type": "VsPlacementResolutionInfo", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "upgrade_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "upgrade_in_progress", 
                    "required": "False", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "scalein_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "scalein_in_progress", 
                    "required": "False", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "se_create_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "se_create_in_progress", 
                    "required": "False", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "fel4stats": {
                    "doc_type": "VserverL4Stats", 
                    "py_type": "list", 
                    "name": "fel4stats", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VserverL4Stats", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "scale_status": {
                    "doc_type": "ScaleStatus", 
                    "py_type": "ScaleStatus", 
                    "name": "scale_status", 
                    "required": "False", 
                    "ref_type": "ScaleStatus", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "migrate_scaleout_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "migrate_scaleout_pending", 
                    "required": "False", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "vip_detail": {
                    "doc_type": "VipRuntimeDetail", 
                    "py_type": "list", 
                    "name": "vip_detail", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VipRuntimeDetail", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "progress_percent": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "progress_percent", 
                    "required": "False", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }
            }
        }, 
        "SeVsRuntimeSummary": {
            "name": "SeVsRuntimeSummary", 
            "properties": {
                "last_se_event_timestamp": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_se_event_timestamp", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "last_ctrl_event_timestamp": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_ctrl_event_timestamp", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "summary": {
                    "doc_type": "VirtualServiceRuntimeSummary", 
                    "py_type": "VirtualServiceRuntimeSummary", 
                    "name": "summary", 
                    "required": "False", 
                    "ref_type": "VirtualServiceRuntimeSummary", 
                    "description": []
                }
            }
        }, 
        "VsCandidateSeHostList": {
            "name": "VsCandidateSeHostList", 
            "properties": {
                "host": {
                    "doc_type": "VsCandidateHost", 
                    "py_type": "list", 
                    "name": "host", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VsCandidateHost", 
                    "description": []
                }, 
                "se": {
                    "doc_type": "VsCandidateSe", 
                    "py_type": "list", 
                    "name": "se", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VsCandidateSe", 
                    "description": []
                }
            }
        }, 
        "VirtualServiceVipMetaData": {
            "name": "VirtualServiceVipMetaData", 
            "properties": {
                "last_state": {
                    "default_value": "OPER_DISABLED", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "last_state", 
                    "required": "False", 
                    "option_values": [
                        "OPER_UP", 
                        "OPER_DOWN", 
                        "OPER_CREATING", 
                        "OPER_RESOURCES", 
                        "OPER_INACTIVE", 
                        "OPER_DISABLED", 
                        "OPER_UNUSED", 
                        "OPER_UNKNOWN", 
                        "OPER_PROCESSING", 
                        "OPER_INITIALIZING", 
                        "OPER_ERROR_DISABLED", 
                        "OPER_AWAIT_MANUAL_PLACEMENT", 
                        "OPER_UPGRADING", 
                        "OPER_SE_PROCESSING", 
                        "OPER_PARTITIONED", 
                        "OPER_DISABLING", 
                        "OPER_FAILED", 
                        "OPER_UNAVAIL"
                    ], 
                    "description": [
                        "Enum options - OPER_UP, OPER_DOWN, OPER_CREATING, OPER_RESOURCES, OPER_INACTIVE, OPER_DISABLED, OPER_UNUSED, OPER_UNKNOWN, OPER_PROCESSING,", 
                        "OPER_INITIALIZING, OPER_ERROR_DISABLED, OPER_AWAIT_MANUAL_PLACEMENT, OPER_UPGRADING, OPER_SE_PROCESSING, OPER_PARTITIONED, OPER_DISABLING,", 
                        "OPER_FAILED, OPER_UNAVAIL."
                    ]
                }
            }
        }, 
        "VipPlacementResolutionInfo": {
            "name": "VipPlacementResolutionInfo", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "networks": {
                    "doc_type": "DiscoveredNetwork", 
                    "py_type": "list", 
                    "name": "networks", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DiscoveredNetwork", 
                    "description": []
                }
            }
        }, 
        "VsPlacementResolutionInfo": {
            "name": "VsPlacementResolutionInfo", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "networks": {
                    "doc_type": "DiscoveredNetwork", 
                    "py_type": "list", 
                    "name": "networks", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DiscoveredNetwork", 
                    "description": [
                        "Field deprecated in 17.1.1."
                    ]
                }
            }
        }
    }, 
    "django_internal": {
        "UserActivity": {
            "name": "UserActivity", 
            "properties": {
                "failed_login_attempts": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "failed_login_attempts", 
                    "required": "False", 
                    "description": [
                        "Number of failed login attempts before a successful login."
                    ]
                }, 
                "concurrent_sessions": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "concurrent_sessions", 
                    "required": "False", 
                    "description": [
                        "Number of concurrent user sessions open."
                    ]
                }
            }
        }, 
        "UserAccountProfile": {
            "name": "UserAccountProfile", 
            "properties": {
                "max_password_history_count": {
                    "default_value": 4, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_password_history_count", 
                    "required": "False", 
                    "description": [
                        "Maximum number of passwords to be maintained in the password history.", 
                        "Default is 4 passwords."
                    ]
                }, 
                "credentials_timeout_threshold": {
                    "default_value": 180, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "credentials_timeout_threshold", 
                    "required": "False", 
                    "description": [
                        "The time period after which credentials expire.", 
                        "Default is 180 days."
                    ]
                }, 
                "max_login_failure_count": {
                    "default_value": 3, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_login_failure_count", 
                    "required": "False", 
                    "description": [
                        "Number of login attempts before lockout.", 
                        "Default is 3 attempts."
                    ]
                }, 
                "account_lock_timeout": {
                    "default_value": 30, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "account_lock_timeout", 
                    "required": "False", 
                    "description": [
                        "Lock timeout period (in minutes).", 
                        "Default is 30 minutes."
                    ]
                }, 
                "max_concurrent_sessions": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_concurrent_sessions", 
                    "required": "False", 
                    "description": [
                        "Maximum number of concurrent sessions allowed.", 
                        "There are unlimited sessions by default."
                    ]
                }
            }
        }, 
        "Role": {
            "name": "Role", 
            "properties": {
                "privileges": {
                    "doc_type": "Permission", 
                    "py_type": "list", 
                    "name": "privileges", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Permission", 
                    "description": []
                }
            }
        }, 
        "User": {
            "name": "User", 
            "properties": {
                "access": {
                    "doc_type": "UserRole", 
                    "py_type": "list", 
                    "name": "access", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "UserRole", 
                    "description": []
                }, 
                "is_superuser": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_superuser", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "UserRole": {
            "name": "UserRole", 
            "properties": {
                "all_tenants": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "all_tenants", 
                    "required": "False", 
                    "description": []
                }
            }
        }
    }, 
    "vi_mgr_runtime": {
        "VIMgrHostRuntime": {
            "name": "VIMgrHostRuntime", 
            "properties": {
                "pnics": {
                    "doc_type": "CdpLldpInfo", 
                    "py_type": "list", 
                    "name": "pnics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CdpLldpInfo", 
                    "description": []
                }, 
                "quarantined_periods": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "quarantined_periods", 
                    "required": "False", 
                    "description": []
                }, 
                "connection_state": {
                    "default_value": "connected", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "connection_state", 
                    "required": "False", 
                    "description": []
                }, 
                "cntlr_accessible": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "cntlr_accessible", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VIDatastoreContents": {
            "name": "VIDatastoreContents", 
            "properties": {
                "host_info": {
                    "doc_type": "VIMgrHostRuntime", 
                    "py_type": "list", 
                    "name": "host_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIMgrHostRuntime", 
                    "description": []
                }, 
                "cluster_info": {
                    "doc_type": "VIMgrClusterRuntime", 
                    "py_type": "list", 
                    "name": "cluster_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIMgrClusterRuntime", 
                    "description": []
                }, 
                "sevm_info": {
                    "doc_type": "VIMgrSEVMRuntime", 
                    "py_type": "list", 
                    "name": "sevm_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIMgrSEVMRuntime", 
                    "description": []
                }, 
                "vcenter_info": {
                    "doc_type": "VIMgrVcenterRuntime", 
                    "py_type": "list", 
                    "name": "vcenter_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIMgrVcenterRuntime", 
                    "description": []
                }, 
                "vm_info": {
                    "doc_type": "VIMgrVMRuntime", 
                    "py_type": "list", 
                    "name": "vm_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIMgrVMRuntime", 
                    "description": []
                }, 
                "nw_info": {
                    "doc_type": "VIMgrNWRuntime", 
                    "py_type": "list", 
                    "name": "nw_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIMgrNWRuntime", 
                    "description": []
                }, 
                "dc_info": {
                    "doc_type": "VIMgrDCRuntime", 
                    "py_type": "list", 
                    "name": "dc_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIMgrDCRuntime", 
                    "description": []
                }
            }
        }, 
        "VIMgrNWRuntime": {
            "name": "VIMgrNWRuntime", 
            "properties": {
                "ip_subnet": {
                    "doc_type": "VIMgrIPSubnetRuntime", 
                    "py_type": "list", 
                    "name": "ip_subnet", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIMgrIPSubnetRuntime", 
                    "description": []
                }, 
                "vlan_range": {
                    "doc_type": "VlanRange", 
                    "py_type": "list", 
                    "name": "vlan_range", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VlanRange", 
                    "description": []
                }
            }
        }, 
        "VIMgrControllerRuntime": {
            "name": "VIMgrControllerRuntime", 
            "properties": {
                "vnics": {
                    "doc_type": "VIControllerVnicInfo", 
                    "py_type": "list", 
                    "name": "vnics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIControllerVnicInfo", 
                    "description": []
                }
            }
        }, 
        "SeVmPowerState": {
            "name": "SeVmPowerState", 
            "properties": {
                "power_on": {
                    "default_value": "poweredOn", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "power_on", 
                    "required": "False", 
                    "description": []
                }, 
                "power_off": {
                    "default_value": "poweredOff", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "power_off", 
                    "required": "False", 
                    "description": []
                }, 
                "suspended": {
                    "default_value": "suspended", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "suspended", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VIMgrDCRuntime": {
            "name": "VIMgrDCRuntime", 
            "properties": {
                "interested_vms": {
                    "doc_type": "VIMgrInterestedEntity", 
                    "py_type": "list", 
                    "name": "interested_vms", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIMgrInterestedEntity", 
                    "description": []
                }, 
                "interested_hosts": {
                    "doc_type": "VIMgrInterestedEntity", 
                    "py_type": "list", 
                    "name": "interested_hosts", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIMgrInterestedEntity", 
                    "description": []
                }, 
                "interested_nws": {
                    "doc_type": "VIMgrInterestedEntity", 
                    "py_type": "list", 
                    "name": "interested_nws", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIMgrInterestedEntity", 
                    "description": []
                }
            }
        }, 
        "VIMgrVMRuntime": {
            "name": "VIMgrVMRuntime", 
            "properties": {
                "guest_nic": {
                    "doc_type": "VIMgrGuestNicRuntime", 
                    "py_type": "list", 
                    "name": "guest_nic", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIMgrGuestNicRuntime", 
                    "description": []
                }, 
                "se_ver": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_ver", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VIMgrVcenterRuntime": {
            "name": "VIMgrVcenterRuntime", 
            "properties": {
                "apic_mode": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "apic_mode", 
                    "required": "False", 
                    "description": []
                }, 
                "vcenter_connected": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "vcenter_connected", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VIMgrSEVMRuntime": {
            "name": "VIMgrSEVMRuntime", 
            "properties": {
                "guest_nic": {
                    "doc_type": "VIMgrGuestNicRuntime", 
                    "py_type": "list", 
                    "name": "guest_nic", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIMgrGuestNicRuntime", 
                    "description": []
                }
            }
        }, 
        "VIMgrGuestNicRuntime": {
            "name": "VIMgrGuestNicRuntime", 
            "properties": {
                "del_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "del_pending", 
                    "required": "False", 
                    "description": []
                }, 
                "guest_ip": {
                    "doc_type": "VIMgrIPSubnetRuntime", 
                    "py_type": "list", 
                    "name": "guest_ip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIMgrIPSubnetRuntime", 
                    "description": []
                }, 
                "label": {
                    "default_value": "Unknown", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "label", 
                    "required": "False", 
                    "description": []
                }
            }
        }
    }, 
    "upgrade": {
        "SeUpgradeStatusSummary": {
            "name": "SeUpgradeStatusSummary", 
            "properties": {
                "se_upgrade_errors": {
                    "doc_type": "SeUpgradeErrors", 
                    "py_type": "list", 
                    "name": "se_upgrade_errors", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeUpgradeErrors", 
                    "description": []
                }, 
                "vs_errors": {
                    "doc_type": "VsError", 
                    "py_type": "list", 
                    "name": "vs_errors", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VsError", 
                    "description": []
                }, 
                "se_group_status": {
                    "doc_type": "SeGroupStatus", 
                    "py_type": "list", 
                    "name": "se_group_status", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeGroupStatus", 
                    "description": []
                }
            }
        }, 
        "SeUpgradeParams": {
            "name": "SeUpgradeParams", 
            "properties": {
                "test": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "test", 
                    "required": "False", 
                    "description": []
                }, 
                "rollback": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "rollback", 
                    "required": "False", 
                    "description": []
                }, 
                "force": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "force", 
                    "required": "False", 
                    "description": []
                }, 
                "disruptive": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disruptive", 
                    "required": "False", 
                    "description": []
                }, 
                "suspend_on_failure": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "suspend_on_failure", 
                    "required": "False", 
                    "description": [
                        "When set to true, if there is any failure during the se upgrade, upgrade will be suspended for this se group and manual intervention would be", 
                        "needed to resume the upgrade.", 
                        "Field introduced in 17.1.4."
                    ]
                }
            }
        }, 
        "SystemUpgradeService": {
            "name": "SystemUpgradeService", 
            "properties": {
                "image_path": {
                    "default_value": "/var/lib/avi/upgrade_pkgs/controller.pkg", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "image_path", 
                    "required": "True", 
                    "description": []
                }
            }
        }, 
        "SystemUpgradeHistory": {
            "name": "SystemUpgradeHistory", 
            "properties": {
                "upgrade_events": {
                    "doc_type": "SystemUpgradeState", 
                    "py_type": "list", 
                    "name": "upgrade_events", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SystemUpgradeState", 
                    "description": [
                        "List of past upgrade events.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "SeUpgradePreview": {
            "name": "SeUpgradePreview", 
            "properties": {
                "vs_errors": {
                    "doc_type": "VsError", 
                    "py_type": "list", 
                    "name": "vs_errors", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VsError", 
                    "description": []
                }
            }
        }, 
        "ControllerUpgradeState": {
            "name": "ControllerUpgradeState", 
            "properties": {
                "tasks_completed": {
                    "doc_type": "UpgradeTask", 
                    "py_type": "list", 
                    "name": "tasks_completed", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "UpgradeTask", 
                    "description": []
                }
            }
        }, 
        "SystemUpgradeState": {
            "name": "SystemUpgradeState", 
            "properties": {
                "controller_state": {
                    "doc_type": "ControllerUpgradeState", 
                    "py_type": "ControllerUpgradeState", 
                    "name": "controller_state", 
                    "required": "False", 
                    "ref_type": "ControllerUpgradeState", 
                    "description": [
                        "Upgrade state from controller."
                    ]
                }, 
                "se_state": {
                    "doc_type": "SeUpgradeStatusSummary", 
                    "py_type": "SeUpgradeStatusSummary", 
                    "name": "se_state", 
                    "required": "False", 
                    "ref_type": "SeUpgradeStatusSummary", 
                    "description": [
                        "Upgrade state of service engines."
                    ]
                }
            }
        }, 
        "SeUpgradeStatusDetail": {
            "name": "SeUpgradeStatusDetail", 
            "properties": {
                "tasks": {
                    "doc_type": "SeTask", 
                    "py_type": "list", 
                    "name": "tasks", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeTask", 
                    "description": []
                }, 
                "summary": {
                    "doc_type": "SeUpgradeStatusSummary", 
                    "py_type": "SeUpgradeStatusSummary", 
                    "name": "summary", 
                    "required": "False", 
                    "ref_type": "SeUpgradeStatusSummary", 
                    "description": []
                }
            }
        }, 
        "SystemUpgradeCli": {
            "name": "SystemUpgradeCli", 
            "properties": {
                "suspend_on_failure": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "suspend_on_failure", 
                    "required": "False", 
                    "description": [
                        "When set to true, if there is any failure during the se upgrade, upgrade will be suspended for this se group and manual intervention would be", 
                        "needed to resume the upgrade.", 
                        "Field introduced in 17.1.4."
                    ]
                }
            }
        }
    }, 
    "os_lbprov_plugin": {
        "OsLbProvPluginsDetail": {
            "name": "OsLbProvPluginsDetail", 
            "properties": {
                "provs": {
                    "doc_type": "OsLbProvPluginDetail", 
                    "py_type": "list", 
                    "name": "provs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "OsLbProvPluginDetail", 
                    "description": []
                }
            }
        }, 
        "OsLbAuditResp": {
            "name": "OsLbAuditResp", 
            "properties": {
                "hist": {
                    "doc_type": "OsLbProvAuditDetail", 
                    "py_type": "list", 
                    "name": "hist", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "OsLbProvAuditDetail", 
                    "description": []
                }
            }
        }, 
        "OsLbProvPluginDetail": {
            "name": "OsLbProvPluginDetail", 
            "properties": {
                "name": {
                    "default_value": "avi_adc", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "name", 
                    "required": "True", 
                    "description": [
                        "Openstack lbaas provider name."
                    ]
                }, 
                "host_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "host_ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Avi controller ip address."
                    ]
                }
            }
        }, 
        "OsLbProvPluginForm": {
            "name": "OsLbProvPluginForm", 
            "properties": {
                "prov_name": {
                    "default_value": "avi_adc", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "prov_name", 
                    "required": "False", 
                    "description": [
                        "Openstack lbaas provider name."
                    ]
                }, 
                "neutron_host_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "neutron_host_ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Neutron host ip address."
                    ]
                }, 
                "restart_neutron": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "restart_neutron", 
                    "required": "False", 
                    "description": [
                        "Restart neutron service after provider configuration."
                    ]
                }, 
                "prov_host_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "prov_host_ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Avi controller ip address."
                    ]
                }
            }
        }, 
        "OsLbProvPluginStatus": {
            "name": "OsLbProvPluginStatus", 
            "properties": {
                "name": {
                    "default_value": "avi_adc", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "name", 
                    "required": "True", 
                    "description": [
                        "Openstack lbaas provider name."
                    ]
                }
            }
        }
    }, 
    "log_internal": {
        "SeLogStatsRuntime": {
            "name": "SeLogStatsRuntime", 
            "properties": {
                "count": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "count", 
                    "required": "True", 
                    "description": []
                }, 
                "conn_nf_limit": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "conn_nf_limit", 
                    "required": "True", 
                    "description": []
                }, 
                "conn_udf_limit": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "conn_udf_limit", 
                    "required": "True", 
                    "description": []
                }, 
                "conn_adf_miss": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "conn_adf_miss", 
                    "required": "True", 
                    "description": []
                }, 
                "appl_udf_hit": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "appl_udf_hit", 
                    "required": "True", 
                    "description": []
                }, 
                "appl_udf_miss": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "appl_udf_miss", 
                    "required": "True", 
                    "description": []
                }, 
                "conn_adf_hit": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "conn_adf_hit", 
                    "required": "True", 
                    "description": []
                }, 
                "appl_udf_limit": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "appl_udf_limit", 
                    "required": "True", 
                    "description": []
                }, 
                "appl_adf_miss": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "appl_adf_miss", 
                    "required": "True", 
                    "description": []
                }, 
                "appl_nf_miss": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "appl_nf_miss", 
                    "required": "True", 
                    "description": []
                }, 
                "conn_nf_miss": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "conn_nf_miss", 
                    "required": "True", 
                    "description": []
                }, 
                "appl_adf_hit": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "appl_adf_hit", 
                    "required": "True", 
                    "description": []
                }, 
                "appl_adf_limit": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "appl_adf_limit", 
                    "required": "True", 
                    "description": []
                }, 
                "appl_nf_hit": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "appl_nf_hit", 
                    "required": "True", 
                    "description": []
                }, 
                "conn_udf_hit": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "conn_udf_hit", 
                    "required": "True", 
                    "description": []
                }, 
                "event_hit": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "event_hit", 
                    "required": "True", 
                    "description": []
                }, 
                "conn_nf_hit": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "conn_nf_hit", 
                    "required": "True", 
                    "description": []
                }, 
                "event_miss": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "event_miss", 
                    "required": "True", 
                    "description": []
                }, 
                "conn_udf_miss": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "conn_udf_miss", 
                    "required": "True", 
                    "description": []
                }, 
                "appl_nf_limit": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "appl_nf_limit", 
                    "required": "True", 
                    "description": []
                }, 
                "conn_adf_limit": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "conn_adf_limit", 
                    "required": "True", 
                    "description": []
                }
            }
        }, 
        "LogControllerMapping": {
            "name": "LogControllerMapping", 
            "properties": {
                "metrics_mgr_port": {
                    "default_value": "METRICS_MGR_PORT_0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "metrics_mgr_port", 
                    "required": "False", 
                    "option_values": [
                        "METRICS_MGR_PORT_0", 
                        "METRICS_MGR_PORT_1", 
                        "METRICS_MGR_PORT_2", 
                        "METRICS_MGR_PORT_3"
                    ], 
                    "description": [
                        "Enum options - METRICS_MGR_PORT_0, METRICS_MGR_PORT_1, METRICS_MGR_PORT_2, METRICS_MGR_PORT_3."
                    ]
                }, 
                "static_mapping": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "static_mapping", 
                    "required": "False", 
                    "description": []
                }, 
                "prev_metrics_mgr_port": {
                    "default_value": "METRICS_MGR_PORT_0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "prev_metrics_mgr_port", 
                    "required": "False", 
                    "option_values": [
                        "METRICS_MGR_PORT_0", 
                        "METRICS_MGR_PORT_1", 
                        "METRICS_MGR_PORT_2", 
                        "METRICS_MGR_PORT_3"
                    ], 
                    "description": [
                        "Enum options - METRICS_MGR_PORT_0, METRICS_MGR_PORT_1, METRICS_MGR_PORT_2, METRICS_MGR_PORT_3."
                    ]
                }
            }
        }
    }, 
    "match": {
        "IpAddrMatch": {
            "name": "IpAddrMatch", 
            "properties": {
                "ranges": {
                    "doc_type": "IpAddrRange", 
                    "py_type": "list", 
                    "name": "ranges", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrRange", 
                    "description": [
                        "Ip address range(s)."
                    ]
                }, 
                "prefixes": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "list", 
                    "name": "prefixes", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Ip address prefix(es)."
                    ]
                }, 
                "addrs": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "addrs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address(es)."
                    ]
                }
            }
        }, 
        "MatchTarget": {
            "name": "MatchTarget", 
            "properties": {
                "client_ip": {
                    "doc_type": "IpAddrMatch", 
                    "py_type": "IpAddrMatch", 
                    "name": "client_ip", 
                    "required": "False", 
                    "ref_type": "IpAddrMatch", 
                    "description": [
                        "Configure client ip addresses."
                    ]
                }, 
                "protocol": {
                    "doc_type": "ProtocolMatch", 
                    "py_type": "ProtocolMatch", 
                    "name": "protocol", 
                    "required": "False", 
                    "ref_type": "ProtocolMatch", 
                    "description": [
                        "Configure the type of http protocol."
                    ]
                }, 
                "hdrs": {
                    "doc_type": "HdrMatch", 
                    "py_type": "list", 
                    "name": "hdrs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HdrMatch", 
                    "description": [
                        "Configure http header(s)."
                    ]
                }, 
                "host_hdr": {
                    "doc_type": "HostHdrMatch", 
                    "py_type": "HostHdrMatch", 
                    "name": "host_hdr", 
                    "required": "False", 
                    "ref_type": "HostHdrMatch", 
                    "description": [
                        "Configure the host header."
                    ]
                }, 
                "vs_port": {
                    "doc_type": "PortMatch", 
                    "py_type": "PortMatch", 
                    "name": "vs_port", 
                    "required": "False", 
                    "ref_type": "PortMatch", 
                    "description": [
                        "Configure virtual service ports."
                    ]
                }, 
                "version": {
                    "doc_type": "HTTPVersionMatch", 
                    "py_type": "HTTPVersionMatch", 
                    "name": "version", 
                    "required": "False", 
                    "ref_type": "HTTPVersionMatch", 
                    "description": [
                        "Configure versions of the http protocol."
                    ]
                }, 
                "cookie": {
                    "doc_type": "CookieMatch", 
                    "py_type": "CookieMatch", 
                    "name": "cookie", 
                    "required": "False", 
                    "ref_type": "CookieMatch", 
                    "description": [
                        "Configure http cookie(s)."
                    ]
                }, 
                "query": {
                    "doc_type": "QueryMatch", 
                    "py_type": "QueryMatch", 
                    "name": "query", 
                    "required": "False", 
                    "ref_type": "QueryMatch", 
                    "description": [
                        "Configure request query."
                    ]
                }, 
                "path": {
                    "doc_type": "PathMatch", 
                    "py_type": "PathMatch", 
                    "name": "path", 
                    "required": "False", 
                    "ref_type": "PathMatch", 
                    "description": [
                        "Configure request paths."
                    ]
                }, 
                "method": {
                    "doc_type": "MethodMatch", 
                    "py_type": "MethodMatch", 
                    "name": "method", 
                    "required": "False", 
                    "ref_type": "MethodMatch", 
                    "description": [
                        "Configure http methods."
                    ]
                }
            }
        }, 
        "ResponseMatchTarget": {
            "name": "ResponseMatchTarget", 
            "properties": {
                "status": {
                    "doc_type": "HTTPStatusMatch", 
                    "py_type": "HTTPStatusMatch", 
                    "name": "status", 
                    "required": "False", 
                    "ref_type": "HTTPStatusMatch", 
                    "description": [
                        "Configure the http status code(s)."
                    ]
                }, 
                "client_ip": {
                    "doc_type": "IpAddrMatch", 
                    "py_type": "IpAddrMatch", 
                    "name": "client_ip", 
                    "required": "False", 
                    "ref_type": "IpAddrMatch", 
                    "description": [
                        "Configure client ip addresses."
                    ]
                }, 
                "protocol": {
                    "doc_type": "ProtocolMatch", 
                    "py_type": "ProtocolMatch", 
                    "name": "protocol", 
                    "required": "False", 
                    "ref_type": "ProtocolMatch", 
                    "description": [
                        "Configure the type of http protocol."
                    ]
                }, 
                "hdrs": {
                    "doc_type": "HdrMatch", 
                    "py_type": "list", 
                    "name": "hdrs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HdrMatch", 
                    "description": [
                        "Configure http headers."
                    ]
                }, 
                "loc_hdr": {
                    "doc_type": "LocationHdrMatch", 
                    "py_type": "LocationHdrMatch", 
                    "name": "loc_hdr", 
                    "required": "False", 
                    "ref_type": "LocationHdrMatch", 
                    "description": [
                        "Configure the location header."
                    ]
                }, 
                "rsp_hdrs": {
                    "doc_type": "HdrMatch", 
                    "py_type": "list", 
                    "name": "rsp_hdrs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HdrMatch", 
                    "description": [
                        "Configure the http headers in response."
                    ]
                }, 
                "host_hdr": {
                    "doc_type": "HostHdrMatch", 
                    "py_type": "HostHdrMatch", 
                    "name": "host_hdr", 
                    "required": "False", 
                    "ref_type": "HostHdrMatch", 
                    "description": [
                        "Configure the host header."
                    ]
                }, 
                "vs_port": {
                    "doc_type": "PortMatch", 
                    "py_type": "PortMatch", 
                    "name": "vs_port", 
                    "required": "False", 
                    "ref_type": "PortMatch", 
                    "description": [
                        "Configure virtual service ports."
                    ]
                }, 
                "version": {
                    "doc_type": "HTTPVersionMatch", 
                    "py_type": "HTTPVersionMatch", 
                    "name": "version", 
                    "required": "False", 
                    "ref_type": "HTTPVersionMatch", 
                    "description": [
                        "Configure versions of the http protocol."
                    ]
                }, 
                "cookie": {
                    "doc_type": "CookieMatch", 
                    "py_type": "CookieMatch", 
                    "name": "cookie", 
                    "required": "False", 
                    "ref_type": "CookieMatch", 
                    "description": [
                        "Configure http cookie(s)."
                    ]
                }, 
                "query": {
                    "doc_type": "QueryMatch", 
                    "py_type": "QueryMatch", 
                    "name": "query", 
                    "required": "False", 
                    "ref_type": "QueryMatch", 
                    "description": [
                        "Configure request query."
                    ]
                }, 
                "path": {
                    "doc_type": "PathMatch", 
                    "py_type": "PathMatch", 
                    "name": "path", 
                    "required": "False", 
                    "ref_type": "PathMatch", 
                    "description": [
                        "Configure request paths."
                    ]
                }, 
                "method": {
                    "doc_type": "MethodMatch", 
                    "py_type": "MethodMatch", 
                    "name": "method", 
                    "required": "False", 
                    "ref_type": "MethodMatch", 
                    "description": [
                        "Configure http methods."
                    ]
                }
            }
        }, 
        "HdrMatch": {
            "name": "HdrMatch", 
            "properties": {
                "match_case": {
                    "default_value": "INSENSITIVE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "match_case", 
                    "required": "False", 
                    "option_values": [
                        "SENSITIVE", 
                        "INSENSITIVE"
                    ], 
                    "description": [
                        "Case sensitivity to use for the match.", 
                        "Enum options - SENSITIVE, INSENSITIVE."
                    ]
                }
            }
        }, 
        "PortMatch": {
            "name": "PortMatch", 
            "properties": {
                "ports": {
                    "doc_type": "integer", 
                    "py_type": "list", 
                    "name": "ports", 
                    "required": "False", 
                    "range": "1-65535", 
                    "array": true, 
                    "description": [
                        "Listening tcp port(s).", 
                        "Allowed values are 1-65535."
                    ]
                }
            }
        }, 
        "HTTPStatusMatch": {
            "name": "HTTPStatusMatch", 
            "properties": {
                "ranges": {
                    "doc_type": "HTTPStatusRange", 
                    "py_type": "list", 
                    "name": "ranges", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HTTPStatusRange", 
                    "description": [
                        "Http response status code range(s)."
                    ]
                }
            }
        }, 
        "IpAddrGroup": {
            "name": "IpAddrGroup", 
            "properties": {
                "ranges": {
                    "doc_type": "IpAddrRange", 
                    "py_type": "list", 
                    "name": "ranges", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrRange", 
                    "description": [
                        "Configure ip address range(s)."
                    ]
                }, 
                "prefixes": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "list", 
                    "name": "prefixes", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Configure ip address prefix(es)."
                    ]
                }, 
                "addrs": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "addrs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Configure ip address(es)."
                    ]
                }, 
                "ip_ports": {
                    "doc_type": "IpAddrPort", 
                    "py_type": "list", 
                    "name": "ip_ports", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrPort", 
                    "description": [
                        "Configure (ip address, port) tuple(s)."
                    ]
                }
            }
        }, 
        "HostHdrMatch": {
            "name": "HostHdrMatch", 
            "properties": {
                "match_case": {
                    "default_value": "INSENSITIVE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "match_case", 
                    "required": "False", 
                    "option_values": [
                        "SENSITIVE", 
                        "INSENSITIVE"
                    ], 
                    "description": [
                        "Case sensitivity to use for the match.", 
                        "Enum options - SENSITIVE, INSENSITIVE."
                    ]
                }
            }
        }, 
        "LocationHdrMatch": {
            "name": "LocationHdrMatch", 
            "properties": {
                "match_case": {
                    "default_value": "INSENSITIVE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "match_case", 
                    "required": "False", 
                    "option_values": [
                        "SENSITIVE", 
                        "INSENSITIVE"
                    ], 
                    "description": [
                        "Case sensitivity to use for the match.", 
                        "Enum options - SENSITIVE, INSENSITIVE."
                    ]
                }
            }
        }, 
        "QueryMatch": {
            "name": "QueryMatch", 
            "properties": {
                "match_case": {
                    "default_value": "INSENSITIVE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "match_case", 
                    "required": "False", 
                    "option_values": [
                        "SENSITIVE", 
                        "INSENSITIVE"
                    ], 
                    "description": [
                        "Case sensitivity to use for the match.", 
                        "Enum options - SENSITIVE, INSENSITIVE."
                    ]
                }
            }
        }, 
        "PathMatch": {
            "name": "PathMatch", 
            "properties": {
                "match_case": {
                    "default_value": "INSENSITIVE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "match_case", 
                    "required": "False", 
                    "option_values": [
                        "SENSITIVE", 
                        "INSENSITIVE"
                    ], 
                    "description": [
                        "Case sensitivity to use for the matching.", 
                        "Enum options - SENSITIVE, INSENSITIVE."
                    ]
                }
            }
        }, 
        "StringGroup": {
            "name": "StringGroup", 
            "properties": {
                "type": {
                    "default_value": "SG_TYPE_STRING", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "type", 
                    "required": "True", 
                    "option_values": [
                        "SG_TYPE_STRING", 
                        "SG_TYPE_KEYVAL"
                    ], 
                    "description": [
                        "Type of stringgroup.", 
                        "Enum options - SG_TYPE_STRING, SG_TYPE_KEYVAL."
                    ]
                }, 
                "kv": {
                    "doc_type": "KeyValue", 
                    "py_type": "list", 
                    "name": "kv", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "KeyValue", 
                    "description": [
                        "Configure key value in the string group."
                    ]
                }
            }
        }, 
        "CookieMatch": {
            "name": "CookieMatch", 
            "properties": {
                "match_case": {
                    "default_value": "INSENSITIVE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "match_case", 
                    "required": "False", 
                    "option_values": [
                        "SENSITIVE", 
                        "INSENSITIVE"
                    ], 
                    "description": [
                        "Case sensitivity to use for the match.", 
                        "Enum options - SENSITIVE, INSENSITIVE."
                    ]
                }
            }
        }
    }, 
    "traffic_clone_profile": {
        "TrafficCloneProfile": {
            "name": "TrafficCloneProfile", 
            "properties": {
                "preserve_client_ip": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "preserve_client_ip", 
                    "required": "False", 
                    "description": [
                        "Specifies if client ip needs to be preserved to clone destination.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "clone_servers": {
                    "doc_type": "CloneServer", 
                    "py_type": "list", 
                    "name": "clone_servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CloneServer", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "CloneServer": {
            "name": "CloneServer", 
            "properties": {
                "subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Subnet of the network to clone the traffic to.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "ip_address": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip_address", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address of the clone server.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }
    }, 
    "auth": {
        "AuthMappingRule": {
            "name": "AuthMappingRule", 
            "properties": {
                "group_match": {
                    "doc_type": "AuthMatchGroupMembership", 
                    "py_type": "AuthMatchGroupMembership", 
                    "name": "group_match", 
                    "required": "False", 
                    "ref_type": "AuthMatchGroupMembership", 
                    "description": []
                }, 
                "attribute_match": {
                    "doc_type": "AuthMatchAttribute", 
                    "py_type": "AuthMatchAttribute", 
                    "name": "attribute_match", 
                    "required": "False", 
                    "ref_type": "AuthMatchAttribute", 
                    "description": []
                }
            }
        }, 
        "LdapDirectorySettings": {
            "name": "LdapDirectorySettings", 
            "properties": {
                "group_member_is_full_dn": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "group_member_is_full_dn", 
                    "required": "False", 
                    "description": [
                        "Group member entries contain full dns instead of just user id attribute values."
                    ]
                }, 
                "user_search_scope": {
                    "default_value": "AUTH_LDAP_SCOPE_ONE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "user_search_scope", 
                    "required": "False", 
                    "option_values": [
                        "AUTH_LDAP_SCOPE_BASE", 
                        "AUTH_LDAP_SCOPE_ONE", 
                        "AUTH_LDAP_SCOPE_SUBTREE"
                    ], 
                    "description": [
                        "Ldap user search scope defines how deep to search for the user starting from user search dn.", 
                        "Enum options - AUTH_LDAP_SCOPE_BASE, AUTH_LDAP_SCOPE_ONE, AUTH_LDAP_SCOPE_SUBTREE."
                    ]
                }, 
                "group_member_attribute": {
                    "default_value": "member", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "group_member_attribute", 
                    "required": "False", 
                    "description": [
                        "Ldap group attribute that identifies each of the group members."
                    ]
                }, 
                "group_filter": {
                    "default_value": "(objectClass=*)", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "group_filter", 
                    "required": "False", 
                    "description": [
                        "Group filter is used to identify groups during search."
                    ]
                }, 
                "ignore_referrals": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "ignore_referrals", 
                    "required": "False", 
                    "description": [
                        "During user or group search, ignore searching referrals."
                    ]
                }, 
                "group_search_scope": {
                    "default_value": "AUTH_LDAP_SCOPE_SUBTREE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "group_search_scope", 
                    "required": "False", 
                    "option_values": [
                        "AUTH_LDAP_SCOPE_BASE", 
                        "AUTH_LDAP_SCOPE_ONE", 
                        "AUTH_LDAP_SCOPE_SUBTREE"
                    ], 
                    "description": [
                        "Ldap group search scope defines how deep to search for the group starting from the group search dn.", 
                        "Enum options - AUTH_LDAP_SCOPE_BASE, AUTH_LDAP_SCOPE_ONE, AUTH_LDAP_SCOPE_SUBTREE."
                    ]
                }
            }
        }, 
        "TacacsPlusAuthSettings": {
            "name": "TacacsPlusAuthSettings", 
            "properties": {
                "authorization_attrs": {
                    "doc_type": "AuthTacacsPlusAttributeValuePair", 
                    "py_type": "list", 
                    "name": "authorization_attrs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "AuthTacacsPlusAttributeValuePair", 
                    "description": [
                        "Tacacs+ authorization attribute value pairs."
                    ]
                }, 
                "port": {
                    "default_value": 49, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "port", 
                    "required": "False", 
                    "description": [
                        "Tacacs+ server listening port."
                    ]
                }, 
                "service": {
                    "default_value": "AUTH_TACACS_PLUS_SERVICE_LOGIN", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "service", 
                    "required": "False", 
                    "option_values": [
                        "AUTH_TACACS_PLUS_SERVICE_NONE", 
                        "AUTH_TACACS_PLUS_SERVICE_LOGIN", 
                        "AUTH_TACACS_PLUS_SERVICE_ENABLE", 
                        "AUTH_TACACS_PLUS_SERVICE_PPP", 
                        "AUTH_TACACS_PLUS_SERVICE_ARAP", 
                        "AUTH_TACACS_PLUS_SERVICE_PT", 
                        "AUTH_TACACS_PLUS_SERVICE_RCMD", 
                        "AUTH_TACACS_PLUS_SERVICE_X25", 
                        "AUTH_TACACS_PLUS_SERVICE_NASI", 
                        "AUTH_TACACS_PLUS_SERVICE_FWPROXY"
                    ], 
                    "description": [
                        "Tacacs+ service.", 
                        "Enum options - AUTH_TACACS_PLUS_SERVICE_NONE, AUTH_TACACS_PLUS_SERVICE_LOGIN, AUTH_TACACS_PLUS_SERVICE_ENABLE, AUTH_TACACS_PLUS_SERVICE_PPP,", 
                        "AUTH_TACACS_PLUS_SERVICE_ARAP, AUTH_TACACS_PLUS_SERVICE_PT, AUTH_TACACS_PLUS_SERVICE_RCMD, AUTH_TACACS_PLUS_SERVICE_X25,", 
                        "AUTH_TACACS_PLUS_SERVICE_NASI, AUTH_TACACS_PLUS_SERVICE_FWPROXY."
                    ]
                }
            }
        }, 
        "LdapAuthSettings": {
            "name": "LdapAuthSettings", 
            "properties": {
                "settings": {
                    "doc_type": "LdapDirectorySettings", 
                    "py_type": "LdapDirectorySettings", 
                    "name": "settings", 
                    "required": "False", 
                    "ref_type": "LdapDirectorySettings", 
                    "description": [
                        "Ldap full directory configuration with administrator credentials."
                    ]
                }, 
                "bind_as_administrator": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "bind_as_administrator", 
                    "required": "False", 
                    "description": [
                        "Ldap administrator credentials are used to search for users and group memberships."
                    ]
                }, 
                "user_bind": {
                    "doc_type": "LdapUserBindSettings", 
                    "py_type": "LdapUserBindSettings", 
                    "name": "user_bind", 
                    "required": "False", 
                    "ref_type": "LdapUserBindSettings", 
                    "description": [
                        "Ldap anonymous bind configuration."
                    ]
                }, 
                "full_name_attribute": {
                    "default_value": "name", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "full_name_attribute", 
                    "required": "False", 
                    "description": [
                        "Ldap attribute that refers to user's full name."
                    ]
                }, 
                "email_attribute": {
                    "default_value": "email", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "email_attribute", 
                    "required": "False", 
                    "description": [
                        "Ldap attribute that refers to user email."
                    ]
                }, 
                "port": {
                    "default_value": 389, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "port", 
                    "required": "False", 
                    "description": [
                        "Query the ldap servers on this port."
                    ]
                }
            }
        }, 
        "LdapUserBindSettings": {
            "name": "LdapUserBindSettings", 
            "properties": {
                "token": {
                    "default_value": "<user>", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "token", 
                    "required": "False", 
                    "description": [
                        "Ldap token is replaced with real user name in the user dn pattern."
                    ]
                }
            }
        }, 
        "HTTPClientAuthenticationParams": {
            "name": "HTTPClientAuthenticationParams", 
            "properties": {
                "request_uri_path": {
                    "doc_type": "StringMatch", 
                    "py_type": "StringMatch", 
                    "name": "request_uri_path", 
                    "required": "False", 
                    "ref_type": "StringMatch", 
                    "description": [
                        "Rrequest uri path when the authentication applies."
                    ]
                }
            }
        }, 
        "AuthProfile": {
            "name": "AuthProfile", 
            "properties": {
                "http": {
                    "doc_type": "AuthProfileHTTPClientParams", 
                    "py_type": "AuthProfileHTTPClientParams", 
                    "name": "http", 
                    "required": "False", 
                    "ref_type": "AuthProfileHTTPClientParams", 
                    "description": [
                        "Http user authentication params."
                    ]
                }, 
                "tacacs_plus": {
                    "doc_type": "TacacsPlusAuthSettings", 
                    "py_type": "TacacsPlusAuthSettings", 
                    "name": "tacacs_plus", 
                    "required": "False", 
                    "ref_type": "TacacsPlusAuthSettings", 
                    "description": [
                        "Tacacs+ settings."
                    ]
                }, 
                "ldap": {
                    "doc_type": "LdapAuthSettings", 
                    "py_type": "LdapAuthSettings", 
                    "name": "ldap", 
                    "required": "False", 
                    "ref_type": "LdapAuthSettings", 
                    "description": [
                        "Ldap server and directory settings."
                    ]
                }
            }
        }, 
        "AuthProfileHTTPClientParams": {
            "name": "AuthProfileHTTPClientParams", 
            "properties": {
                "cache_expiration_time": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "cache_expiration_time", 
                    "required": "False", 
                    "range": "1-30", 
                    "description": [
                        "The max allowed length of time a clients authentication is cached.", 
                        "Allowed values are 1-30."
                    ]
                }, 
                "group_member_is_full_dn": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "group_member_is_full_dn", 
                    "required": "False", 
                    "description": [
                        "Group member entries contain full dns instead of just user id attribute values."
                    ]
                }
            }
        }
    }, 
    "ssl": {
        "SSLKeyRSAParams": {
            "name": "SSLKeyRSAParams", 
            "properties": {
                "key_size": {
                    "default_value": "SSL_KEY_2048_BITS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "key_size", 
                    "required": "False", 
                    "option_values": [
                        "SSL_KEY_1024_BITS", 
                        "SSL_KEY_2048_BITS", 
                        "SSL_KEY_3072_BITS", 
                        "SSL_KEY_4096_BITS"
                    ], 
                    "description": [
                        "Enum options - SSL_KEY_1024_BITS, SSL_KEY_2048_BITS, SSL_KEY_3072_BITS, SSL_KEY_4096_BITS."
                    ]
                }, 
                "exponent": {
                    "default_value": 65537, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "exponent", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SSLVersion": {
            "name": "SSLVersion", 
            "properties": {
                "type": {
                    "default_value": "SSL_VERSION_TLS1_1", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "type", 
                    "required": "True", 
                    "option_values": [
                        "SSL_VERSION_TLS1", 
                        "SSL_VERSION_TLS1_1", 
                        "SSL_VERSION_TLS1_2"
                    ], 
                    "description": [
                        "Enum options - SSL_VERSION_TLS1, SSL_VERSION_TLS1_1, SSL_VERSION_TLS1_2."
                    ]
                }
            }
        }, 
        "SSLKeyParams": {
            "name": "SSLKeyParams", 
            "properties": {
                "ec_params": {
                    "doc_type": "SSLKeyECParams", 
                    "py_type": "SSLKeyECParams", 
                    "name": "ec_params", 
                    "required": "False", 
                    "ref_type": "SSLKeyECParams", 
                    "description": []
                }, 
                "rsa_params": {
                    "doc_type": "SSLKeyRSAParams", 
                    "py_type": "SSLKeyRSAParams", 
                    "name": "rsa_params", 
                    "required": "False", 
                    "ref_type": "SSLKeyRSAParams", 
                    "description": []
                }, 
                "algorithm": {
                    "default_value": "SSL_KEY_ALGORITHM_RSA", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "algorithm", 
                    "required": "True", 
                    "option_values": [
                        "SSL_KEY_ALGORITHM_RSA", 
                        "SSL_KEY_ALGORITHM_EC"
                    ], 
                    "description": [
                        "Enum options - SSL_KEY_ALGORITHM_RSA, SSL_KEY_ALGORITHM_EC."
                    ]
                }
            }
        }, 
        "SSLKeyAndCertificateExt": {
            "name": "SSLKeyAndCertificateExt", 
            "properties": {
                "key_base64": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "key_base64", 
                    "required": "False", 
                    "description": []
                }, 
                "certificate_base64": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "certificate_base64", 
                    "required": "False", 
                    "description": []
                }, 
                "format": {
                    "default_value": "SSL_PEM", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "format", 
                    "required": "False", 
                    "option_values": [
                        "SSL_PEM", 
                        "SSL_PKCS12"
                    ], 
                    "description": [
                        "Enum options - SSL_PEM, SSL_PKCS12."
                    ]
                }
            }
        }, 
        "SSLKeyAndCertificate": {
            "name": "SSLKeyAndCertificate", 
            "properties": {
                "status": {
                    "default_value": "SSL_CERTIFICATE_FINISHED", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "status", 
                    "required": "False", 
                    "option_values": [
                        "SSL_CERTIFICATE_FINISHED", 
                        "SSL_CERTIFICATE_PENDING"
                    ], 
                    "description": [
                        "Enum options - SSL_CERTIFICATE_FINISHED, SSL_CERTIFICATE_PENDING."
                    ]
                }, 
                "certificate": {
                    "doc_type": "SSLCertificate", 
                    "py_type": "SSLCertificate", 
                    "name": "certificate", 
                    "required": "True", 
                    "ref_type": "SSLCertificate", 
                    "description": []
                }, 
                "dynamic_params": {
                    "doc_type": "CustomParams", 
                    "py_type": "list", 
                    "name": "dynamic_params", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CustomParams", 
                    "description": [
                        "Dynamic parameters needed for certificate management profile."
                    ]
                }, 
                "ca_certs": {
                    "doc_type": "CertificateAuthority", 
                    "py_type": "list", 
                    "name": "ca_certs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CertificateAuthority", 
                    "description": [
                        "Ca certificates in certificate chain."
                    ]
                }, 
                "key_params": {
                    "doc_type": "SSLKeyParams", 
                    "py_type": "SSLKeyParams", 
                    "name": "key_params", 
                    "required": "False", 
                    "ref_type": "SSLKeyParams", 
                    "description": []
                }, 
                "type": {
                    "default_value": "SSL_CERTIFICATE_TYPE_VIRTUALSERVICE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "type", 
                    "required": "False", 
                    "option_values": [
                        "SSL_CERTIFICATE_TYPE_VIRTUALSERVICE", 
                        "SSL_CERTIFICATE_TYPE_SYSTEM", 
                        "SSL_CERTIFICATE_TYPE_CA"
                    ], 
                    "description": [
                        "Enum options - SSL_CERTIFICATE_TYPE_VIRTUALSERVICE, SSL_CERTIFICATE_TYPE_SYSTEM, SSL_CERTIFICATE_TYPE_CA."
                    ]
                }
            }
        }, 
        "SSLCertificateRequest": {
            "name": "SSLCertificateRequest", 
            "properties": {
                "key_params": {
                    "doc_type": "SSLKeyParams", 
                    "py_type": "SSLKeyParams", 
                    "name": "key_params", 
                    "required": "False", 
                    "ref_type": "SSLKeyParams", 
                    "description": []
                }, 
                "self_signed": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "self_signed", 
                    "required": "True", 
                    "description": []
                }, 
                "days_until_expire": {
                    "default_value": 365, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "days_until_expire", 
                    "required": "False", 
                    "description": []
                }, 
                "type": {
                    "default_value": "SSL_CERTIFICATE_TYPE_VIRTUALSERVICE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "type", 
                    "required": "False", 
                    "option_values": [
                        "SSL_CERTIFICATE_TYPE_VIRTUALSERVICE", 
                        "SSL_CERTIFICATE_TYPE_SYSTEM", 
                        "SSL_CERTIFICATE_TYPE_CA"
                    ], 
                    "description": [
                        "Enum options - SSL_CERTIFICATE_TYPE_VIRTUALSERVICE, SSL_CERTIFICATE_TYPE_SYSTEM, SSL_CERTIFICATE_TYPE_CA."
                    ]
                }, 
                "dynamic_params": {
                    "doc_type": "CustomParams", 
                    "py_type": "list", 
                    "name": "dynamic_params", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CustomParams", 
                    "description": [
                        "Dynamic parameters needed for certificate management profile."
                    ]
                }
            }
        }, 
        "CertificateManagementProfile": {
            "name": "CertificateManagementProfile", 
            "properties": {
                "script_params": {
                    "doc_type": "CustomParams", 
                    "py_type": "list", 
                    "name": "script_params", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CustomParams", 
                    "description": []
                }
            }
        }, 
        "SSLKeyECParams": {
            "name": "SSLKeyECParams", 
            "properties": {
                "curve": {
                    "default_value": "SSL_KEY_EC_CURVE_SECP256R1", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "curve", 
                    "required": "False", 
                    "option_values": [
                        "SSL_KEY_EC_CURVE_SECP256R1", 
                        "SSL_KEY_EC_CURVE_SECP384R1", 
                        "SSL_KEY_EC_CURVE_SECP521R1"
                    ], 
                    "description": [
                        "Enum options - SSL_KEY_EC_CURVE_SECP256R1, SSL_KEY_EC_CURVE_SECP384R1, SSL_KEY_EC_CURVE_SECP521R1."
                    ]
                }
            }
        }, 
        "SSLProfile": {
            "name": "SSLProfile", 
            "properties": {
                "ssl_session_timeout": {
                    "default_value": 86400, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ssl_session_timeout", 
                    "required": "False", 
                    "description": [
                        "The amount of time before an ssl session expires."
                    ]
                }, 
                "accepted_ciphers": {
                    "default_value": "AES:3DES:RC4", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "accepted_ciphers", 
                    "required": "False", 
                    "description": [
                        "Ciphers suites represented as defined by U(http://www.openssl.org/docs/apps/ciphers.html)."
                    ]
                }, 
                "prefer_client_cipher_ordering": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "prefer_client_cipher_ordering", 
                    "required": "False", 
                    "description": [
                        "Prefer the ssl cipher ordering presented by the client during the ssl handshake over the one specified in the ssl profile."
                    ]
                }, 
                "tags": {
                    "doc_type": "Tag", 
                    "py_type": "list", 
                    "name": "tags", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Tag", 
                    "description": []
                }, 
                "accepted_versions": {
                    "doc_type": "SSLVersion", 
                    "py_type": "list", 
                    "name": "accepted_versions", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SSLVersion", 
                    "description": [
                        "Set of versions accepted by the server."
                    ]
                }, 
                "enable_ssl_session_reuse": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_ssl_session_reuse", 
                    "required": "False", 
                    "description": [
                        "Enable ssl session re-use."
                    ]
                }, 
                "send_close_notify": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "send_close_notify", 
                    "required": "False", 
                    "description": [
                        "Send 'close notify' alert message for a clean shutdown of the ssl connection."
                    ]
                }, 
                "ssl_rating": {
                    "doc_type": "SSLRating", 
                    "py_type": "SSLRating", 
                    "name": "ssl_rating", 
                    "required": "False", 
                    "ref_type": "SSLRating", 
                    "description": []
                }
            }
        }, 
        "SSLCertificate": {
            "name": "SSLCertificate", 
            "properties": {
                "key_params": {
                    "doc_type": "SSLKeyParams", 
                    "py_type": "SSLKeyParams", 
                    "name": "key_params", 
                    "required": "False", 
                    "ref_type": "SSLKeyParams", 
                    "description": []
                }, 
                "days_until_expire": {
                    "default_value": 365, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "days_until_expire", 
                    "required": "False", 
                    "description": []
                }, 
                "subject": {
                    "doc_type": "SSLCertificateDescription", 
                    "py_type": "SSLCertificateDescription", 
                    "name": "subject", 
                    "required": "False", 
                    "ref_type": "SSLCertificateDescription", 
                    "description": []
                }, 
                "expiry_status": {
                    "default_value": "SSL_CERTIFICATE_GOOD", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "expiry_status", 
                    "required": "False", 
                    "option_values": [
                        "SSL_CERTIFICATE_GOOD", 
                        "SSL_CERTIFICATE_EXPIRY_WARNING", 
                        "SSL_CERTIFICATE_EXPIRED"
                    ], 
                    "description": [
                        "Enum options - SSL_CERTIFICATE_GOOD, SSL_CERTIFICATE_EXPIRY_WARNING, SSL_CERTIFICATE_EXPIRED."
                    ]
                }, 
                "issuer": {
                    "doc_type": "SSLCertificateDescription", 
                    "py_type": "SSLCertificateDescription", 
                    "name": "issuer", 
                    "required": "False", 
                    "ref_type": "SSLCertificateDescription", 
                    "description": []
                }
            }
        }, 
        "PKIProfileImport": {
            "name": "PKIProfileImport", 
            "properties": {
                "crls": {
                    "doc_type": "CRLImport", 
                    "py_type": "list", 
                    "name": "crls", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CRLImport", 
                    "description": [
                        "Certificate revocation lists."
                    ]
                }
            }
        }, 
        "SSLKeyAndCertificateImport": {
            "name": "SSLKeyAndCertificateImport", 
            "properties": {
                "key_base64": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "key_base64", 
                    "required": "False", 
                    "description": []
                }, 
                "certificate_base64": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "certificate_base64", 
                    "required": "False", 
                    "description": []
                }, 
                "type": {
                    "default_value": "SSL_CERTIFICATE_TYPE_VIRTUALSERVICE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "type", 
                    "required": "False", 
                    "option_values": [
                        "SSL_CERTIFICATE_TYPE_VIRTUALSERVICE", 
                        "SSL_CERTIFICATE_TYPE_SYSTEM", 
                        "SSL_CERTIFICATE_TYPE_CA"
                    ], 
                    "description": [
                        "Enum options - SSL_CERTIFICATE_TYPE_VIRTUALSERVICE, SSL_CERTIFICATE_TYPE_SYSTEM, SSL_CERTIFICATE_TYPE_CA."
                    ]
                }, 
                "format": {
                    "default_value": "SSL_PEM", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "format", 
                    "required": "False", 
                    "option_values": [
                        "SSL_PEM", 
                        "SSL_PKCS12"
                    ], 
                    "description": [
                        "Enum options - SSL_PEM, SSL_PKCS12."
                    ]
                }
            }
        }, 
        "PKIProfile": {
            "name": "PKIProfile", 
            "properties": {
                "crls": {
                    "doc_type": "CRL", 
                    "py_type": "list", 
                    "name": "crls", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CRL", 
                    "description": [
                        "Certificate revocation lists."
                    ]
                }, 
                "ignore_peer_chain": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "ignore_peer_chain", 
                    "required": "False", 
                    "description": [
                        "When enabled, avi will not trust intermediate and root certs presented by a client.", 
                        "Instead, only the chain certs configured in the certificate authority section will be used to verify trust of the client's cert."
                    ]
                }, 
                "is_federated": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_federated", 
                    "required": "False", 
                    "description": [
                        "This field describes the object's replication scope.", 
                        "If the field is set to false, then the object is visible within the controller-cluster and its associated service-engines.", 
                        "If the field is set to true, then the object is replicated across the federation.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "validate_only_leaf_crl": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "validate_only_leaf_crl", 
                    "required": "False", 
                    "description": [
                        "When enabled, avi will only validate the revocation status of the leaf certificate using crl.", 
                        "To enable validation for the entire chain, disable this option and provide all the relevant crls."
                    ]
                }, 
                "ca_certs": {
                    "doc_type": "SSLCertificate", 
                    "py_type": "list", 
                    "name": "ca_certs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SSLCertificate", 
                    "description": [
                        "List of certificate authorities (root and intermediate) trusted that is used for certificate validation."
                    ]
                }, 
                "crl_check": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "crl_check", 
                    "required": "False", 
                    "description": [
                        "When enabled, avi will verify via crl checks that certificates in the trust chain have not been revoked."
                    ]
                }
            }
        }
    }, 
    "scheduler": {
        "Scheduler": {
            "name": "Scheduler", 
            "properties": {
                "scheduler_action": {
                    "default_value": "SCHEDULER_ACTION_BACKUP", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "scheduler_action", 
                    "required": "False", 
                    "option_values": [
                        "SCHEDULER_ACTION_RUN_A_SCRIPT", 
                        "SCHEDULER_ACTION_BACKUP"
                    ], 
                    "description": [
                        "Define scheduler action.", 
                        "Enum options - SCHEDULER_ACTION_RUN_A_SCRIPT, SCHEDULER_ACTION_BACKUP."
                    ]
                }, 
                "frequency": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "frequency", 
                    "required": "False", 
                    "range": "0-60", 
                    "description": [
                        "Frequency at which custom scheduler will run.", 
                        "Allowed values are 0-60."
                    ]
                }, 
                "enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enabled", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "BackupConfiguration": {
            "name": "BackupConfiguration", 
            "properties": {
                "maximum_backups_stored": {
                    "default_value": 4, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "maximum_backups_stored", 
                    "required": "False", 
                    "range": "1-20", 
                    "description": [
                        "Rotate the backup files based on this count.", 
                        "Allowed values are 1-20."
                    ]
                }
            }
        }
    }, 
    "network_rpc": {
        "IpNexthop": {
            "name": "IpNexthop", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "nexthop": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "nexthop", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "IpNetworkList": {
            "name": "IpNetworkList", 
            "properties": {
                "ip_networks": {
                    "doc_type": "IpNetwork", 
                    "py_type": "list", 
                    "name": "ip_networks", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpNetwork", 
                    "description": []
                }
            }
        }, 
        "PoolVmRefRsp": {
            "name": "PoolVmRefRsp", 
            "properties": {
                "vm_refs": {
                    "doc_type": "PoolVmRefInfo", 
                    "py_type": "list", 
                    "name": "vm_refs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "PoolVmRefInfo", 
                    "description": []
                }
            }
        }, 
        "StaticIPResyncReq": {
            "name": "StaticIPResyncReq", 
            "properties": {
                "current_ip": {
                    "doc_type": "StaticIPInfo", 
                    "py_type": "list", 
                    "name": "current_ip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "StaticIPInfo", 
                    "description": []
                }
            }
        }, 
        "StaticIPResyncRsp": {
            "name": "StaticIPResyncRsp", 
            "properties": {
                "added_ip": {
                    "doc_type": "StaticIPInfo", 
                    "py_type": "list", 
                    "name": "added_ip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "StaticIPInfo", 
                    "description": []
                }, 
                "deleted_ip": {
                    "doc_type": "StaticIPInfo", 
                    "py_type": "list", 
                    "name": "deleted_ip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "StaticIPInfo", 
                    "description": []
                }
            }
        }, 
        "DuplicateIpSubnets": {
            "name": "DuplicateIpSubnets", 
            "properties": {
                "networks": {
                    "doc_type": "NetworkInfo", 
                    "py_type": "list", 
                    "name": "networks", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NetworkInfo", 
                    "description": []
                }
            }
        }, 
        "StaticIPAvailReq": {
            "name": "StaticIPAvailReq", 
            "properties": {
                "ip_avail": {
                    "doc_type": "StaticIPAvailInfo", 
                    "py_type": "list", 
                    "name": "ip_avail", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "StaticIPAvailInfo", 
                    "description": []
                }
            }
        }, 
        "StaticIPAvailInfo": {
            "name": "StaticIPAvailInfo", 
            "properties": {
                "count": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "count", 
                    "required": "False", 
                    "description": []
                }, 
                "subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }
            }
        }, 
        "IpNetwork": {
            "name": "IpNetwork", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "list", 
                    "name": "subnet", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }
            }
        }, 
        "StaticIPReq": {
            "name": "StaticIPReq", 
            "properties": {
                "any_one": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "any_one", 
                    "required": "False", 
                    "description": []
                }, 
                "ip_info": {
                    "doc_type": "StaticIPInfo", 
                    "py_type": "list", 
                    "name": "ip_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "StaticIPInfo", 
                    "description": []
                }, 
                "free_all": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "free_all", 
                    "required": "False", 
                    "description": []
                }, 
                "dns_rrs": {
                    "doc_type": "IpDNSRecord", 
                    "py_type": "list", 
                    "name": "dns_rrs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpDNSRecord", 
                    "description": []
                }
            }
        }, 
        "DNSUpdateReq": {
            "name": "DNSUpdateReq", 
            "properties": {
                "dns_rrs": {
                    "doc_type": "IpDNSRecord", 
                    "py_type": "list", 
                    "name": "dns_rrs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpDNSRecord", 
                    "description": []
                }
            }
        }, 
        "DNSEntryReq": {
            "name": "DNSEntryReq", 
            "properties": {
                "vip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "vip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "dns_info": {
                    "doc_type": "DnsInfo", 
                    "py_type": "list", 
                    "name": "dns_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsInfo", 
                    "description": []
                }, 
                "fip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "fip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "StaticIPAvailRsp": {
            "name": "StaticIPAvailRsp", 
            "properties": {
                "ip_avail": {
                    "doc_type": "StaticIPAvailInfo", 
                    "py_type": "list", 
                    "name": "ip_avail", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "StaticIPAvailInfo", 
                    "description": []
                }
            }
        }, 
        "IpList": {
            "name": "IpList", 
            "properties": {
                "ips": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "ips", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "obj_uuid": {
                    "default_value": "Unknown", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "obj_uuid", 
                    "required": "False", 
                    "description": []
                }, 
                "pool_update": {
                    "doc_type": "PoolUpdate", 
                    "py_type": "PoolUpdate", 
                    "name": "pool_update", 
                    "required": "False", 
                    "ref_type": "PoolUpdate", 
                    "description": []
                }, 
                "vs_update": {
                    "doc_type": "VsUpdate", 
                    "py_type": "VsUpdate", 
                    "name": "vs_update", 
                    "required": "False", 
                    "ref_type": "VsUpdate", 
                    "description": []
                }, 
                "obj_name": {
                    "default_value": "Unknown", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "obj_name", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "IpNexthopList": {
            "name": "IpNexthopList", 
            "properties": {
                "ip_nexthops": {
                    "doc_type": "IpNexthop", 
                    "py_type": "list", 
                    "name": "ip_nexthops", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpNexthop", 
                    "description": []
                }
            }
        }, 
        "StaticIPInfo": {
            "name": "StaticIPInfo", 
            "properties": {
                "subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }, 
                "new_alloc": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "new_alloc", 
                    "required": "False", 
                    "description": []
                }, 
                "ip": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "ip", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }
            }
        }, 
        "StaticIPRsp": {
            "name": "StaticIPRsp", 
            "properties": {
                "ip_alloc": {
                    "doc_type": "StaticIPInfo", 
                    "py_type": "list", 
                    "name": "ip_alloc", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "StaticIPInfo", 
                    "description": []
                }, 
                "rsp_status": {
                    "doc_type": "StaticIPRspStatus", 
                    "py_type": "StaticIPRspStatus", 
                    "name": "rsp_status", 
                    "required": "False", 
                    "ref_type": "StaticIPRspStatus", 
                    "description": []
                }
            }
        }
    }, 
    "log_common": {
        "ConnectionLog": {
            "name": "ConnectionLog", 
            "properties": {
                "total_time": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "total_time", 
                    "required": "False", 
                    "description": []
                }, 
                "server_retransmits": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "server_retransmits", 
                    "required": "True", 
                    "description": []
                }, 
                "server_timeouts": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "server_timeouts", 
                    "required": "True", 
                    "description": []
                }, 
                "server_zero_window_size_events": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "server_zero_window_size_events", 
                    "required": "True", 
                    "description": []
                }, 
                "timeouts": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "timeouts", 
                    "required": "True", 
                    "description": []
                }, 
                "dns_request": {
                    "doc_type": "DnsRequest", 
                    "py_type": "DnsRequest", 
                    "name": "dns_request", 
                    "required": "False", 
                    "ref_type": "DnsRequest", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "zero_window_size_events": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "zero_window_size_events", 
                    "required": "True", 
                    "description": []
                }, 
                "mss": {
                    "default_value": 1500, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "mss", 
                    "required": "True", 
                    "description": []
                }, 
                "adf": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "adf", 
                    "required": "True", 
                    "description": []
                }, 
                "udf": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "udf", 
                    "required": "True", 
                    "description": []
                }, 
                "total_bytes": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "total_bytes", 
                    "required": "False", 
                    "description": []
                }, 
                "dns_response": {
                    "doc_type": "DnsResponse", 
                    "py_type": "DnsResponse", 
                    "name": "dns_response", 
                    "required": "False", 
                    "ref_type": "DnsResponse", 
                    "description": []
                }, 
                "server_out_of_orders": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "server_out_of_orders", 
                    "required": "True", 
                    "description": []
                }, 
                "connection_ended": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "connection_ended", 
                    "required": "True", 
                    "description": []
                }, 
                "total_pkts": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "total_pkts", 
                    "required": "False", 
                    "description": []
                }, 
                "out_of_orders": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "out_of_orders", 
                    "required": "True", 
                    "description": []
                }, 
                "retransmits": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "retransmits", 
                    "required": "True", 
                    "description": []
                }
            }
        }, 
        "DnsResponse": {
            "name": "DnsResponse", 
            "properties": {
                "records": {
                    "doc_type": "DnsResourceRecord", 
                    "py_type": "list", 
                    "name": "records", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsResourceRecord", 
                    "description": [
                        "Resource records in the response."
                    ]
                }, 
                "opt_record": {
                    "doc_type": "DnsOptRecord", 
                    "py_type": "DnsOptRecord", 
                    "name": "opt_record", 
                    "required": "False", 
                    "ref_type": "DnsOptRecord", 
                    "description": [
                        "Opt resource records in the response.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "ApplicationLog": {
            "name": "ApplicationLog", 
            "properties": {
                "body_updated": {
                    "default_value": "NOT_UPDATED", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "body_updated", 
                    "required": "False", 
                    "option_values": [
                        "NOT_UPDATED", 
                        "BY_CONTENT_REWRITE_PROFILE", 
                        "BY_DATA_SCRIPT"
                    ], 
                    "description": [
                        "Enum options - NOT_UPDATED, BY_CONTENT_REWRITE_PROFILE, BY_DATA_SCRIPT.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "cacheable": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "cacheable", 
                    "required": "False", 
                    "description": []
                }, 
                "server_ssl_session_reused": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "server_ssl_session_reused", 
                    "required": "False", 
                    "description": [
                        "Flag to indicate if ssl session was reused."
                    ]
                }, 
                "adf": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "adf", 
                    "required": "True", 
                    "description": []
                }, 
                "datascript_error_trace": {
                    "doc_type": "DataScriptErrorTrace", 
                    "py_type": "DataScriptErrorTrace", 
                    "name": "datascript_error_trace", 
                    "required": "False", 
                    "ref_type": "DataScriptErrorTrace", 
                    "description": []
                }, 
                "connection_error_info": {
                    "doc_type": "ConnErrorInfo", 
                    "py_type": "ConnErrorInfo", 
                    "name": "connection_error_info", 
                    "required": "False", 
                    "ref_type": "ConnErrorInfo", 
                    "description": []
                }, 
                "udf": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "udf", 
                    "required": "True", 
                    "description": []
                }, 
                "persistence_used": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "persistence_used", 
                    "required": "False", 
                    "description": []
                }, 
                "cache_hit": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "cache_hit", 
                    "required": "False", 
                    "description": []
                }, 
                "server_connection_reused": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "server_connection_reused", 
                    "required": "False", 
                    "description": [
                        "Flag to indicate if connection from the connection pool was reused."
                    ]
                }
            }
        }, 
        "DnsRequest": {
            "name": "DnsRequest", 
            "properties": {
                "client_location": {
                    "doc_type": "GeoLocation", 
                    "py_type": "GeoLocation", 
                    "name": "client_location", 
                    "required": "False", 
                    "ref_type": "GeoLocation", 
                    "description": [
                        "Geo location of client.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "opt_record": {
                    "doc_type": "DnsOptRecord", 
                    "py_type": "DnsOptRecord", 
                    "name": "opt_record", 
                    "required": "False", 
                    "ref_type": "DnsOptRecord", 
                    "description": [
                        "Opt resource records in the request.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "DnsResourceRecord": {
            "name": "DnsResourceRecord", 
            "properties": {
                "location": {
                    "doc_type": "GeoLocation", 
                    "py_type": "GeoLocation", 
                    "name": "location", 
                    "required": "False", 
                    "ref_type": "GeoLocation", 
                    "description": [
                        "Geo location of member.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "DnsOptRecord": {
            "name": "DnsOptRecord", 
            "properties": {
                "options": {
                    "doc_type": "DnsEdnsOption", 
                    "py_type": "list", 
                    "name": "options", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsEdnsOption", 
                    "description": [
                        "Edns options.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }
    }, 
    "se_group": {
        "VcenterClusters": {
            "name": "VcenterClusters", 
            "properties": {
                "include": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "include", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "ServiceEngineGroup": {
            "name": "ServiceEngineGroup", 
            "properties": {
                "iptables": {
                    "doc_type": "IptableRuleSet", 
                    "py_type": "list", 
                    "name": "iptables", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IptableRuleSet", 
                    "description": [
                        "Iptable rules."
                    ]
                }, 
                "udf_log_throttle": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "udf_log_throttle", 
                    "required": "False", 
                    "description": [
                        "This setting limits the number of udf logs generated per second per core on this se.", 
                        "Udf logs are generated due to the configured client log filters or the rules with logging enabled.", 
                        "Default is 100 logs per second.", 
                        "Set it to zero (0) to disable throttling.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "vcenter_hosts": {
                    "doc_type": "VcenterHosts", 
                    "py_type": "VcenterHosts", 
                    "name": "vcenter_hosts", 
                    "required": "False", 
                    "ref_type": "VcenterHosts", 
                    "description": []
                }, 
                "per_app": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "per_app", 
                    "required": "False", 
                    "description": [
                        "Per-app se mode is designed for deploying dedicated load balancers per app (vs).", 
                        "In this mode, each se is limited to a max of 2 vss.", 
                        "Vcpus in per-app ses count towards licensing usage at 25% rate."
                    ]
                }, 
                "vcpus_per_se": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vcpus_per_se", 
                    "required": "False", 
                    "description": [
                        "Number of vcpus for each of the service engine virtual machines."
                    ]
                }, 
                "hm_on_standby": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "hm_on_standby", 
                    "required": "False", 
                    "description": [
                        "Enable active health monitoring from the standby se for all placed virtual services."
                    ]
                }, 
                "disk_per_se": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "disk_per_se", 
                    "required": "False", 
                    "description": [
                        "Amount of disk space for each of the service engine virtual machines."
                    ]
                }, 
                "cpu_socket_affinity": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "cpu_socket_affinity", 
                    "required": "False", 
                    "description": [
                        "Allocate all the cpu cores for the service engine virtual machines  on the same cpu socket.", 
                        "Applicable only for vcenter cloud."
                    ]
                }, 
                "se_name_prefix": {
                    "default_value": "Avi", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "se_name_prefix", 
                    "required": "False", 
                    "description": [
                        "Prefix to use for virtual machine name of service engines."
                    ]
                }, 
                "archive_shm_limit": {
                    "default_value": 8, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "archive_shm_limit", 
                    "required": "False", 
                    "description": [
                        "Amount of se memory in gb until which shared memory is collected in core archive.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "auto_redistribute_active_standby_load": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "auto_redistribute_active_standby_load", 
                    "required": "False", 
                    "description": [
                        "Redistribution of virtual services from the takeover se to the replacement se can cause momentary traffic loss.", 
                        "If the auto-redistribute load option is left in its default off state, any desired rebalancing requires calls to rest api."
                    ]
                }, 
                "auto_rebalance": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "auto_rebalance", 
                    "required": "False", 
                    "description": [
                        "If set, virtual services will be automatically migrated when load on an se is less than minimum or more than maximum thresholds.", 
                        "Only alerts are generated when the auto_rebalance is not set."
                    ]
                }, 
                "custom_tag": {
                    "doc_type": "CustomTag", 
                    "py_type": "list", 
                    "name": "custom_tag", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CustomTag", 
                    "description": [
                        "Custom tag will be used to create the tags for se instance in aws.", 
                        "Note this is not the same as the prefix for se name."
                    ]
                }, 
                "floating_intf_ip_se_2": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "floating_intf_ip_se_2", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": [
                        "If serviceenginegroup is configured for legacy 1+1 active standby ha mode, floating ip's will be advertised only by the active se in the pair.", 
                        "Virtual services in this group must be disabled/enabled for any changes to the floating ip's to take effect.", 
                        "Only active se hosting vs tagged with active standby se 2 tag will advertise this floating ip when manual load distribution is enabled."
                    ]
                }, 
                "async_ssl": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "async_ssl", 
                    "required": "False", 
                    "description": [
                        "Ssl handshakes will be handled by dedicated ssl threads."
                    ]
                }, 
                "connection_memory_percentage": {
                    "default_value": 50, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "connection_memory_percentage", 
                    "required": "False", 
                    "range": "10-90", 
                    "description": [
                        "Percentage of memory for connection state.", 
                        "This will come at the expense of memory used for http in-memory cache.", 
                        "Allowed values are 10-90."
                    ]
                }, 
                "se_tunnel_mode": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_tunnel_mode", 
                    "required": "False", 
                    "description": [
                        "Determines if dsr from secondary se is active or not.", 
                        "0  automatically determine based on hypervisor type.", 
                        "1  disable dsr unconditionally.", 
                        "~[0,1]  enable dsr unconditionally.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "memory_per_se": {
                    "default_value": 2048, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "memory_per_se", 
                    "required": "False", 
                    "description": [
                        "Amount of memory for each of the service engine virtual machines."
                    ]
                }, 
                "extra_shared_config_memory": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "extra_shared_config_memory", 
                    "required": "False", 
                    "description": [
                        "Extra config memory to support large geo db configuration.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "enable_vip_on_all_interfaces": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_vip_on_all_interfaces", 
                    "required": "False", 
                    "description": [
                        "Enable vip on all interfaces of se.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "se_tunnel_udp_port": {
                    "default_value": 1550, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_tunnel_udp_port", 
                    "required": "False", 
                    "description": [
                        "Udp port for tunneled packets from secondary to primary se in docker bridge mode.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "auto_rebalance_interval": {
                    "default_value": 300, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "auto_rebalance_interval", 
                    "required": "False", 
                    "description": [
                        "Frequency of rebalance, if 'auto rebalance' is enabled."
                    ]
                }, 
                "ha_mode": {
                    "default_value": "HA_MODE_SHARED", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "ha_mode", 
                    "required": "False", 
                    "option_values": [
                        "HA_MODE_SHARED_PAIR", 
                        "HA_MODE_SHARED", 
                        "HA_MODE_LEGACY_ACTIVE_STANDBY"
                    ], 
                    "description": [
                        "High availability mode for all the virtual services using this service engine group.", 
                        "Enum options - HA_MODE_SHARED_PAIR, HA_MODE_SHARED, HA_MODE_LEGACY_ACTIVE_STANDBY."
                    ]
                }, 
                "vcenter_datastores": {
                    "doc_type": "VcenterDatastore", 
                    "py_type": "list", 
                    "name": "vcenter_datastores", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VcenterDatastore", 
                    "description": []
                }, 
                "mgmt_subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "mgmt_subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Management subnet to use for avi service engines."
                    ]
                }, 
                "aggressive_failure_detection": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "aggressive_failure_detection", 
                    "required": "False", 
                    "description": [
                        "Enable aggressive failover configuration for ha."
                    ]
                }, 
                "se_remote_punt_udp_port": {
                    "default_value": 1501, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_remote_punt_udp_port", 
                    "required": "False", 
                    "description": [
                        "Udp port for punted packets in docker bridge mode.", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "vs_scaleout_timeout": {
                    "default_value": 30, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vs_scaleout_timeout", 
                    "required": "False", 
                    "description": [
                        "Time to wait for the scaled out se to become ready before marking the scaleout done."
                    ]
                }, 
                "min_cpu_usage": {
                    "default_value": 30, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "min_cpu_usage", 
                    "required": "False", 
                    "range": "20-60", 
                    "description": [
                        "When cpu usage on an se falls below the minimum threshold, virtual services hosted on the se may be consolidated onto other underutilized ses.", 
                        "After consolidation, unused service engines may then be eligible for deletion.", 
                        "Allowed values are 20-60."
                    ]
                }, 
                "vcenter_clusters": {
                    "doc_type": "VcenterClusters", 
                    "py_type": "VcenterClusters", 
                    "name": "vcenter_clusters", 
                    "required": "False", 
                    "ref_type": "VcenterClusters", 
                    "description": []
                }, 
                "log_disksz": {
                    "default_value": 10000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "log_disksz", 
                    "required": "False", 
                    "description": [
                        "Maximum disk capacity (in mb) to be allocated to an se.", 
                        "This is exclusively used for debug and log data."
                    ]
                }, 
                "num_flow_cores_sum_changes_to_ignore": {
                    "default_value": 8, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_flow_cores_sum_changes_to_ignore", 
                    "required": "False", 
                    "description": [
                        "Number of changes in num flow cores sum to ignore."
                    ]
                }, 
                "se_thread_multiplier": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_thread_multiplier", 
                    "required": "False", 
                    "range": "1-10", 
                    "description": [
                        "Multiplier for se threads based on vcpu.", 
                        "Allowed values are 1-10."
                    ]
                }, 
                "extra_config_multiplier": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "extra_config_multiplier", 
                    "required": "False", 
                    "description": [
                        "Multiplier for extra config to support large vs/pool config."
                    ]
                }, 
                "max_vs_per_se": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_vs_per_se", 
                    "required": "False", 
                    "range": "1-1000", 
                    "description": [
                        "Maximum number of virtual services that can be placed on a single service engine.", 
                        "East west virtual services are excluded from this limit.", 
                        "Allowed values are 1-1000."
                    ]
                }, 
                "async_ssl_threads": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "async_ssl_threads", 
                    "required": "False", 
                    "range": "1-4", 
                    "description": [
                        "Number of async ssl threads per se_dp.", 
                        "Allowed values are 1-4."
                    ]
                }, 
                "active_standby": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "active_standby", 
                    "required": "False", 
                    "description": [
                        "Service engines in active/standby mode for ha failover."
                    ]
                }, 
                "service_ip_subnets": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "list", 
                    "name": "service_ip_subnets", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Subnets assigned to the se group.", 
                        "Required for vs group placement.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "placement_mode": {
                    "default_value": "PLACEMENT_MODE_AUTO", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "placement_mode", 
                    "required": "False", 
                    "option_values": [
                        "PLACEMENT_MODE_AUTO"
                    ], 
                    "description": [
                        "If placement mode is 'auto', virtual services are automatically placed on service engines.", 
                        "Enum options - PLACEMENT_MODE_AUTO."
                    ]
                }, 
                "max_scaleout_per_vs": {
                    "default_value": 4, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_scaleout_per_vs", 
                    "required": "False", 
                    "range": "1-64", 
                    "description": [
                        "Maximum number of active service engines for the virtual service.", 
                        "Allowed values are 1-64."
                    ]
                }, 
                "enable_routing": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_routing", 
                    "required": "False", 
                    "description": [
                        "Enable routing for this serviceenginegroup ."
                    ]
                }, 
                "vcenter_folder": {
                    "default_value": "AviSeFolder", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "vcenter_folder", 
                    "required": "False", 
                    "description": [
                        "Folder to place all the service engine virtual machines in vcenter."
                    ]
                }, 
                "os_reserved_memory": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "os_reserved_memory", 
                    "required": "False", 
                    "description": [
                        "Amount of extra memory to be reserved for use by the operating system on a service engine."
                    ]
                }, 
                "vs_scalein_timeout_for_upgrade": {
                    "default_value": 30, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vs_scalein_timeout_for_upgrade", 
                    "required": "False", 
                    "description": [
                        "During se upgrade, time to wait for the scaled-in se to drain existing flows before marking the scalein done."
                    ]
                }, 
                "vs_scalein_timeout": {
                    "default_value": 30, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vs_scalein_timeout", 
                    "required": "False", 
                    "description": [
                        "Time to wait for the scaled in se to drain existing flows before marking the scalein done."
                    ]
                }, 
                "dedicated_dispatcher_core": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "dedicated_dispatcher_core", 
                    "required": "False", 
                    "description": [
                        "Dedicate the core that handles packet receive/transmit from the network to just the dispatching function.", 
                        "Don't use it for tcp/ip and ssl functions."
                    ]
                }, 
                "significant_log_throttle": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "significant_log_throttle", 
                    "required": "False", 
                    "description": [
                        "This setting limits the number of significant logs generated per second per core on this se.", 
                        "Default is 100 logs per second.", 
                        "Set it to zero (0) to disable throttling.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "se_deprovision_delay": {
                    "default_value": 120, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_deprovision_delay", 
                    "required": "False", 
                    "range": "0-525600", 
                    "description": [
                        "Duration to preserve unused service engine virtual machines before deleting them.", 
                        "If traffic to a virtual service were to spike up abruptly, this se would still be available to be utilized again rather than creating a new se.", 
                        "If this value is set to 0, controller will never delete any ses and administrator has to manually cleanup unused ses.", 
                        "Allowed values are 0-525600."
                    ]
                }, 
                "floating_intf_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "floating_intf_ip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": [
                        "If serviceenginegroup is configured for legacy 1+1 active standby ha mode, floating ip's will be advertised only by the active se in the pair.", 
                        "Virtual services in this group must be disabled/enabled for any changes to the floating ip's to take effect.", 
                        "Only active se hosting vs tagged with active standby se 1 tag will advertise this floating ip when manual load distribution is enabled."
                    ]
                }, 
                "se_vs_hb_max_vs_in_pkt": {
                    "default_value": 256, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_vs_hb_max_vs_in_pkt", 
                    "required": "False", 
                    "range": "1-1024", 
                    "description": [
                        "Maximum number of virtualservices for which heartbeat messages are aggregated in one packet.", 
                        "Allowed values are 1-1024.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "vcenter_datastores_include": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "vcenter_datastores_include", 
                    "required": "False", 
                    "description": []
                }, 
                "advertise_backend_networks": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "advertise_backend_networks", 
                    "required": "False", 
                    "description": [
                        "Advertise reach-ability of backend server networks via adc through bgp for default gateway feature."
                    ]
                }, 
                "realtime_se_metrics": {
                    "doc_type": "MetricsRealTimeUpdate", 
                    "py_type": "MetricsRealTimeUpdate", 
                    "name": "realtime_se_metrics", 
                    "required": "False", 
                    "ref_type": "MetricsRealTimeUpdate", 
                    "description": [
                        "Enable or disable real time se metrics."
                    ]
                }, 
                "non_significant_log_throttle": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "non_significant_log_throttle", 
                    "required": "False", 
                    "description": [
                        "This setting limits the number of non-significant logs generated per second per core on this se.", 
                        "Default is 100 logs per second.", 
                        "Set it to zero (0) to disable throttling.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "max_cpu_usage": {
                    "default_value": 80, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_cpu_usage", 
                    "required": "False", 
                    "range": "40-90", 
                    "description": [
                        "When cpu usage on an se exceeds this threshold, virtual services hosted on this se may be rebalanced to other ses to reduce load.", 
                        "A new se may be created as part of this process.", 
                        "Allowed values are 40-90."
                    ]
                }, 
                "min_scaleout_per_vs": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "min_scaleout_per_vs", 
                    "required": "False", 
                    "range": "1-64", 
                    "description": [
                        "Minimum number of active service engines for the virtual service.", 
                        "Allowed values are 1-64."
                    ]
                }, 
                "se_vs_hb_max_pkts_in_batch": {
                    "default_value": 8, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_vs_hb_max_pkts_in_batch", 
                    "required": "False", 
                    "range": "1-256", 
                    "description": [
                        "Maximum number of aggregated vs heartbeat packets to send in a batch.", 
                        "Allowed values are 1-256.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "buffer_se": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "buffer_se", 
                    "required": "False", 
                    "description": [
                        "Excess service engine capacity provisioned for ha failover."
                    ]
                }, 
                "mem_reserve": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "mem_reserve", 
                    "required": "False", 
                    "description": []
                }, 
                "vcenter_datastore_mode": {
                    "default_value": "VCENTER_DATASTORE_ANY", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "vcenter_datastore_mode", 
                    "required": "False", 
                    "option_values": [
                        "VCENTER_DATASTORE_ANY", 
                        "VCENTER_DATASTORE_LOCAL", 
                        "VCENTER_DATASTORE_SHARED"
                    ], 
                    "description": [
                        "Enum options - VCENTER_DATASTORE_ANY, VCENTER_DATASTORE_LOCAL, VCENTER_DATASTORE_SHARED."
                    ]
                }, 
                "distribute_load_active_standby": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "distribute_load_active_standby", 
                    "required": "False", 
                    "description": [
                        "Use both the active and standby service engines for virtual service placement in the legacy active standby ha mode."
                    ]
                }, 
                "least_load_core_selection": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "least_load_core_selection", 
                    "required": "False", 
                    "description": [
                        "Select core with least load for new flow."
                    ]
                }, 
                "max_se": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_se", 
                    "required": "False", 
                    "range": "0-1000", 
                    "description": [
                        "Maximum number of services engines in this group.", 
                        "Allowed values are 0-1000."
                    ]
                }, 
                "algo": {
                    "default_value": "PLACEMENT_ALGO_PACKED", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "algo", 
                    "required": "False", 
                    "option_values": [
                        "PLACEMENT_ALGO_PACKED", 
                        "PLACEMENT_ALGO_DISTRIBUTED"
                    ], 
                    "description": [
                        "In compact placement, virtual services are placed on existing ses until max_vs_per_se limit is reached.", 
                        "Enum options - PLACEMENT_ALGO_PACKED, PLACEMENT_ALGO_DISTRIBUTED."
                    ]
                }, 
                "se_ipc_udp_port": {
                    "default_value": 1500, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_ipc_udp_port", 
                    "required": "False", 
                    "description": [
                        "Udp port for se_dp ipc in docker bridge mode.", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "cpu_reserve": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "cpu_reserve", 
                    "required": "False", 
                    "description": []
                }, 
                "se_dos_profile": {
                    "doc_type": "DosThresholdProfile", 
                    "py_type": "DosThresholdProfile", 
                    "name": "se_dos_profile", 
                    "required": "False", 
                    "ref_type": "DosThresholdProfile", 
                    "description": []
                }, 
                "enable_vmac": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_vmac", 
                    "required": "False", 
                    "description": [
                        "Use virtual mac address for interfaces on which floating interface ips are placed."
                    ]
                }, 
                "se_udp_encap_ipc": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_udp_encap_ipc", 
                    "required": "False", 
                    "description": [
                        "Determines if se-se ipc messages are encapsulated in an udp header.", 
                        "0  automatically determine based on hypervisor type.", 
                        "1  use udp encap unconditionally.", 
                        "~[0,1]  don't use udp encap.", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "vs_host_redundancy": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "vs_host_redundancy", 
                    "required": "False", 
                    "description": [
                        "Ensure primary and secondary service engines are deployed on different physical hosts."
                    ]
                }
            }
        }, 
        "IptableRuleSet": {
            "name": "IptableRuleSet", 
            "properties": {
                "rules": {
                    "doc_type": "IptableRule", 
                    "py_type": "list", 
                    "name": "rules", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IptableRule", 
                    "description": []
                }
            }
        }, 
        "VcenterHosts": {
            "name": "VcenterHosts", 
            "properties": {
                "include": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "include", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "ServiceEngineAutoScalePolicy": {
            "name": "ServiceEngineAutoScalePolicy", 
            "properties": {
                "max_cpu_usage": {
                    "default_value": 80, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_cpu_usage", 
                    "required": "False", 
                    "range": "40-90", 
                    "description": [
                        "When cpu utilization on an se exceeds this maximum threshold, virtual services hosted on the se may be rebalanced to other ses to reduce load.", 
                        "A new se may be created as part of this process.", 
                        "Allowed values are 40-90."
                    ]
                }, 
                "min_scaleout_per_vs": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "min_scaleout_per_vs", 
                    "required": "False", 
                    "range": "1-64", 
                    "description": [
                        "Minimum number of active service engines for the virtual service.", 
                        "Allowed values are 1-64."
                    ]
                }, 
                "max_scaleout_per_vs": {
                    "default_value": 4, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_scaleout_per_vs", 
                    "required": "False", 
                    "range": "1-64", 
                    "description": [
                        "Maximum number of active service engines for the virtual service.", 
                        "Allowed values are 1-64."
                    ]
                }, 
                "intelligent_autoscale": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "intelligent_autoscale", 
                    "required": "False", 
                    "description": [
                        "Use avi intelligent autoscale algorithm."
                    ]
                }, 
                "buffer_se": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "buffer_se", 
                    "required": "False", 
                    "description": [
                        "Additional service engine capacity provisioned for ha."
                    ]
                }, 
                "scalein_cooldown": {
                    "default_value": 300, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "scalein_cooldown", 
                    "required": "False", 
                    "description": [
                        "No two scale-in happens within this period."
                    ]
                }, 
                "min_cpu_usage": {
                    "default_value": 30, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "min_cpu_usage", 
                    "required": "False", 
                    "range": "20-60", 
                    "description": [
                        "When cpu utilization falls below the minimum threshold, virtual services hosted on this se may be consolidated onto other underutilized service", 
                        "engines.", 
                        "After consolidation, unused service engines may then be eligible for deletion.", 
                        "When cpu utilization exceeds the maximum threshold, virtual services hosted on this se may be migrated to other service engines to lighten the", 
                        "load.", 
                        "A new service engine may be created as part of this process.", 
                        "Allowed values are 20-60."
                    ]
                }, 
                "scaleout_cooldown": {
                    "default_value": 300, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "scaleout_cooldown", 
                    "required": "False", 
                    "description": [
                        "No two scaleout happens within this period."
                    ]
                }
            }
        }, 
        "IptableRule": {
            "name": "IptableRule", 
            "properties": {
                "src_ip": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "src_ip", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }, 
                "dst_ip": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "dst_ip", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }, 
                "src_port": {
                    "doc_type": "PortRange", 
                    "py_type": "PortRange", 
                    "name": "src_port", 
                    "required": "False", 
                    "ref_type": "PortRange", 
                    "description": []
                }, 
                "dst_port": {
                    "doc_type": "PortRange", 
                    "py_type": "PortRange", 
                    "name": "dst_port", 
                    "required": "False", 
                    "ref_type": "PortRange", 
                    "description": []
                }, 
                "dnat_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "dnat_ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }
    }, 
    "httpcache": {
        "HttpCacheConfig": {
            "name": "HttpCacheConfig", 
            "properties": {
                "min_object_size": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "min_object_size", 
                    "required": "False", 
                    "description": [
                        "Minimum size of an object to store in the cache."
                    ]
                }, 
                "query_cacheable": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "query_cacheable", 
                    "required": "False", 
                    "description": [
                        "Allow caching of objects whose uri included a query argument.", 
                        "When disabled, these objects are not cached.", 
                        "When enabled, the request must match the uri query to be considered a hit."
                    ]
                }, 
                "xcache_header": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "xcache_header", 
                    "required": "False", 
                    "description": [
                        "Add an x-cache header to content served from cache, which indicates to the client that the object was server from an intermediate cache."
                    ]
                }, 
                "age_header": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "age_header", 
                    "required": "False", 
                    "description": [
                        "Add an age header to content served from cache, which indicates to the client the number of seconds the object has been in the cache."
                    ]
                }, 
                "enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enabled", 
                    "required": "False", 
                    "description": [
                        "Enable/disable http object caching."
                    ]
                }, 
                "default_expire": {
                    "default_value": 600, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "default_expire", 
                    "required": "False", 
                    "description": [
                        "Default expiration time of cache objects received from the server without a cache-control expiration header.", 
                        "This value may be overwritten by the heuristic expire setting."
                    ]
                }, 
                "max_cache_size": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_cache_size", 
                    "required": "False", 
                    "description": [
                        "Max size, in bytes, of the cache.", 
                        "The default, zero, indicates auto configuration."
                    ]
                }, 
                "heuristic_expire": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "heuristic_expire", 
                    "required": "False", 
                    "description": [
                        "If a response object from the server does not include the cache-control header, but does include a last-modified header, the system will use this", 
                        "time to calculate the cache-control expiration.", 
                        "If unable to solicit an last-modified header, then the system will fall back to the cache expire time value."
                    ]
                }, 
                "date_header": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "date_header", 
                    "required": "False", 
                    "description": [
                        "If a date header was not added by the server, add a date header to the object served from cache.", 
                        "This indicates to the client when the object was originally sent by the server to the cache."
                    ]
                }, 
                "aggressive": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "aggressive", 
                    "required": "False", 
                    "description": [
                        "Enable/disable caching objects without cache-control headers."
                    ]
                }, 
                "max_object_size": {
                    "default_value": 4194304, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_object_size", 
                    "required": "False", 
                    "description": [
                        "Maximum size of an object to store in the cache."
                    ]
                }
            }
        }, 
        "HttpCacheStatsDetail": {
            "name": "HttpCacheStatsDetail", 
            "properties": {
                "etype_objects": {
                    "doc_type": "HttpCacheETypeStats", 
                    "py_type": "list", 
                    "name": "etype_objects", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HttpCacheETypeStats", 
                    "description": []
                }, 
                "etype_adds": {
                    "doc_type": "HttpCacheETypeStats", 
                    "py_type": "list", 
                    "name": "etype_adds", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HttpCacheETypeStats", 
                    "description": []
                }, 
                "incoming": {
                    "doc_type": "HttpCacheStatsObj", 
                    "py_type": "HttpCacheStatsObj", 
                    "name": "incoming", 
                    "required": "True", 
                    "ref_type": "HttpCacheStatsObj", 
                    "description": []
                }, 
                "outgoing": {
                    "doc_type": "HttpCacheStatsObj", 
                    "py_type": "HttpCacheStatsObj", 
                    "name": "outgoing", 
                    "required": "True", 
                    "ref_type": "HttpCacheStatsObj", 
                    "description": []
                }, 
                "reval": {
                    "doc_type": "HttpCacheStat", 
                    "py_type": "list", 
                    "name": "reval", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HttpCacheStat", 
                    "description": []
                }, 
                "store_out": {
                    "doc_type": "HttpCacheStat", 
                    "py_type": "list", 
                    "name": "store_out", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HttpCacheStat", 
                    "description": []
                }, 
                "fetch": {
                    "doc_type": "HttpCacheStat", 
                    "py_type": "list", 
                    "name": "fetch", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HttpCacheStat", 
                    "description": []
                }, 
                "store": {
                    "doc_type": "HttpCacheStat", 
                    "py_type": "list", 
                    "name": "store", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HttpCacheStat", 
                    "description": []
                }
            }
        }, 
        "HttpCache": {
            "name": "HttpCache", 
            "properties": {
                "objects": {
                    "doc_type": "HttpCacheObj", 
                    "py_type": "list", 
                    "name": "objects", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HttpCacheObj", 
                    "description": []
                }, 
                "config": {
                    "doc_type": "HttpCacheConfig", 
                    "py_type": "HttpCacheConfig", 
                    "name": "config", 
                    "required": "False", 
                    "ref_type": "HttpCacheConfig", 
                    "description": []
                }
            }
        }
    }, 
    "se_state_cache": {
        "SCKey": {
            "name": "SCKey", 
            "properties": {
                "action": {
                    "default_value": "SC_UPDATE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "action", 
                    "required": "False", 
                    "option_values": [
                        "SC_UPDATE", 
                        "SC_DELETE"
                    ], 
                    "description": [
                        "Enum options - SC_UPDATE, SC_DELETE."
                    ]
                }
            }
        }, 
        "SCVsStateInfo": {
            "name": "SCVsStateInfo", 
            "properties": {
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "SCInfo": {
            "name": "SCInfo", 
            "properties": {
                "obj_info": {
                    "doc_type": "SCKey", 
                    "py_type": "SCKey", 
                    "name": "obj_info", 
                    "required": "True", 
                    "ref_type": "SCKey", 
                    "description": []
                }, 
                "db_update": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "db_update", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SCValue": {
            "name": "SCValue", 
            "properties": {
                "vs_state": {
                    "doc_type": "VirtualServiceRuntimeDetail", 
                    "py_type": "VirtualServiceRuntimeDetail", 
                    "name": "vs_state", 
                    "required": "False", 
                    "ref_type": "VirtualServiceRuntimeDetail", 
                    "description": []
                }, 
                "pool_state": {
                    "doc_type": "PoolRuntimeDetail", 
                    "py_type": "PoolRuntimeDetail", 
                    "name": "pool_state", 
                    "required": "False", 
                    "ref_type": "PoolRuntimeDetail", 
                    "description": []
                }, 
                "server_state": {
                    "doc_type": "ServerRuntimeSummary", 
                    "py_type": "list", 
                    "name": "server_state", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerRuntimeSummary", 
                    "description": []
                }
            }
        }, 
        "SCServerStateInfo": {
            "name": "SCServerStateInfo", 
            "properties": {
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "server_port": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "server_port", 
                    "required": "False", 
                    "range": "1-65535", 
                    "description": [
                        "Allowed values are 1-65535.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "server_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "server_ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "SCPoolServerStateInfo": {
            "name": "SCPoolServerStateInfo", 
            "properties": {
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "server_states": {
                    "doc_type": "SCServerStateInfo", 
                    "py_type": "list", 
                    "name": "server_states", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SCServerStateInfo", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "is_server": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_server", 
                    "required": "False", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }
    }, 
    "network": {
        "Subnet": {
            "name": "Subnet", 
            "properties": {
                "prefix": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "prefix", 
                    "required": "True", 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Specify an ip subnet prefix for this network."
                    ]
                }, 
                "static_ips": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "static_ips", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Specify a pool of ip addresses for use in service engines."
                    ]
                }, 
                "static_ranges": {
                    "doc_type": "IpAddrRange", 
                    "py_type": "list", 
                    "name": "static_ranges", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrRange", 
                    "description": []
                }
            }
        }, 
        "Network": {
            "name": "Network", 
            "properties": {
                "synced_from_se": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "synced_from_se", 
                    "required": "False", 
                    "description": []
                }, 
                "configured_subnets": {
                    "doc_type": "Subnet", 
                    "py_type": "list", 
                    "name": "configured_subnets", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Subnet", 
                    "description": []
                }, 
                "exclude_discovered_subnets": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "exclude_discovered_subnets", 
                    "required": "False", 
                    "description": [
                        "When selected, excludes all discovered subnets in this network from consideration for virtual service placement."
                    ]
                }, 
                "vcenter_dvs": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "vcenter_dvs", 
                    "required": "False", 
                    "description": []
                }, 
                "dhcp_enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "dhcp_enabled", 
                    "required": "False", 
                    "description": [
                        "Select the ip address management scheme for this network."
                    ]
                }
            }
        }, 
        "SubnetList": {
            "name": "SubnetList", 
            "properties": {
                "prefix": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "prefix", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }
            }
        }, 
        "NetworkSubnetList": {
            "name": "NetworkSubnetList", 
            "properties": {
                "results": {
                    "doc_type": "NetworkSubnet", 
                    "py_type": "list", 
                    "name": "results", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NetworkSubnet", 
                    "description": []
                }
            }
        }, 
        "SubnetRuntime": {
            "name": "SubnetRuntime", 
            "properties": {
                "prefix": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "prefix", 
                    "required": "True", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }, 
                "ip_alloced": {
                    "doc_type": "IpAllocInfo", 
                    "py_type": "list", 
                    "name": "ip_alloced", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAllocInfo", 
                    "description": []
                }
            }
        }, 
        "IpAllocInfo": {
            "name": "IpAllocInfo", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "RetrieveIpsRsp": {
            "name": "RetrieveIpsRsp", 
            "properties": {
                "ips": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "ips", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "NetworkSubnet": {
            "name": "NetworkSubnet", 
            "properties": {
                "subnet": {
                    "doc_type": "SubnetList", 
                    "py_type": "list", 
                    "name": "subnet", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SubnetList", 
                    "description": []
                }
            }
        }, 
        "NetworkRuntime": {
            "name": "NetworkRuntime", 
            "properties": {
                "subnet_runtime": {
                    "doc_type": "SubnetRuntime", 
                    "py_type": "list", 
                    "name": "subnet_runtime", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SubnetRuntime", 
                    "description": []
                }
            }
        }, 
        "RetrieveIps": {
            "name": "RetrieveIps", 
            "properties": {
                "subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }
            }
        }
    }, 
    "common": {
        "IpAddrRange": {
            "name": "IpAddrRange", 
            "properties": {
                "begin": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "begin", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Starting ip address of the range."
                    ]
                }, 
                "end": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "end", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ending ip address of the range."
                    ]
                }
            }
        }, 
        "Tag": {
            "name": "Tag", 
            "properties": {
                "type": {
                    "default_value": "USER_DEFINED", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "type", 
                    "required": "False", 
                    "option_values": [
                        "AVI_DEFINED", 
                        "USER_DEFINED", 
                        "VCENTER_DEFINED"
                    ], 
                    "description": [
                        "Enum options - AVI_DEFINED, USER_DEFINED, VCENTER_DEFINED."
                    ]
                }
            }
        }, 
        "CustomParams": {
            "name": "CustomParams", 
            "properties": {
                "is_dynamic": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_dynamic", 
                    "required": "False", 
                    "description": []
                }, 
                "is_sensitive": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_sensitive", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "ConfigurationStatus": {
            "name": "ConfigurationStatus", 
            "properties": {
                "last_changed_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_changed_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }
            }
        }, 
        "IpAddrPort": {
            "name": "IpAddrPort", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address of host.", 
                        "One of ip address or hostname should be set."
                    ]
                }, 
                "port": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "port", 
                    "required": "True", 
                    "range": "1-65535", 
                    "description": [
                        "Port number of server.", 
                        "Allowed values are 1-65535."
                    ]
                }
            }
        }, 
        "ServerFilter": {
            "name": "ServerFilter", 
            "properties": {
                "server_end_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "server_end_ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "server_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "server_ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "TenantConfiguration": {
            "name": "TenantConfiguration", 
            "properties": {
                "se_in_provider_context": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "se_in_provider_context", 
                    "required": "False", 
                    "description": [
                        "Controls the ownership of serviceengines.", 
                        "Service engines can either be exclusively owned by each tenant or owned by the administrator and shared by all tenants.", 
                        "When serviceengines are owned by the administrator, each tenant can have either read access or no access to their service engines."
                    ]
                }, 
                "tenant_access_to_provider_se": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "tenant_access_to_provider_se", 
                    "required": "False", 
                    "description": []
                }, 
                "tenant_vrf": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "tenant_vrf", 
                    "required": "False", 
                    "description": [
                        "When 'per tenant ip domain' is selected, each tenant gets its own routing domain that is not shared with any other tenant.", 
                        "When 'share ip domain across all tenants' is selected, all tenants share the same routing domain."
                    ]
                }
            }
        }, 
        "OperationalStatus": {
            "name": "OperationalStatus", 
            "properties": {
                "last_changed_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_changed_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }
            }
        }, 
        "PortRange": {
            "name": "PortRange", 
            "properties": {
                "start": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "start", 
                    "required": "True", 
                    "range": "1-65535", 
                    "description": [
                        "Tcp/udp port range start (inclusive).", 
                        "Allowed values are 1-65535."
                    ]
                }, 
                "end": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "end", 
                    "required": "True", 
                    "range": "1-65535", 
                    "description": [
                        "Tcp/udp port range end (inclusive).", 
                        "Allowed values are 1-65535."
                    ]
                }
            }
        }, 
        "DeleteFilter": {
            "name": "DeleteFilter", 
            "properties": {
                "force_delete": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "force_delete", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "vCenterDefaults": {
            "name": "vCenterDefaults", 
            "properties": {
                "avi_internal_network": {
                    "default_value": "Avi Internal", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "avi_internal_network", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "Tenant": {
            "name": "Tenant", 
            "properties": {
                "local": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "local", 
                    "required": "False", 
                    "description": []
                }, 
                "config_settings": {
                    "doc_type": "TenantConfiguration", 
                    "py_type": "TenantConfiguration", 
                    "name": "config_settings", 
                    "required": "False", 
                    "ref_type": "TenantConfiguration", 
                    "description": []
                }
            }
        }
    }, 
    "cloud_connector_rpc": {
        "cc_ip_network": {
            "name": "cc_ip_network", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "subnet_prefix": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "subnet_prefix", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }
            }
        }, 
        "cc_lbprov_plugin_rsp": {
            "name": "cc_lbprov_plugin_rsp", 
            "properties": {
                "data": {
                    "doc_type": "OsLbProvPluginsDetail", 
                    "py_type": "OsLbProvPluginsDetail", 
                    "name": "data", 
                    "required": "False", 
                    "ref_type": "OsLbProvPluginsDetail", 
                    "description": []
                }
            }
        }, 
        "cc_autoscale_group_info_req": {
            "name": "cc_autoscale_group_info_req", 
            "properties": {
                "include_servers": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "include_servers", 
                    "required": "False", 
                    "description": [
                        "Servers information along with the aws group info.", 
                        "It is only supported when single group is requested."
                    ]
                }
            }
        }, 
        "cc_vm_launch_req": {
            "name": "cc_vm_launch_req", 
            "properties": {
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_lookup_network_ip": {
            "name": "cc_lookup_network_ip", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "verify_network": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "verify_network", 
                    "required": "False", 
                    "description": []
                }, 
                "only_direct": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "only_direct", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_flavor_req": {
            "name": "cc_flavor_req", 
            "properties": {
                "generation": {
                    "default_value": "current", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "generation", 
                    "required": "False", 
                    "description": [
                        "Aws  generation of instances."
                    ]
                }, 
                "private": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "private", 
                    "required": "False", 
                    "description": [
                        "Include private flavors."
                    ]
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_zone_rsp": {
            "name": "cc_zone_rsp", 
            "properties": {
                "zones": {
                    "doc_type": "CloudAZ", 
                    "py_type": "list", 
                    "name": "zones", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CloudAZ", 
                    "description": []
                }
            }
        }, 
        "cc_req": {
            "name": "cc_req", 
            "properties": {
                "quiet": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "quiet", 
                    "required": "False", 
                    "description": []
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_detach_ip_req": {
            "name": "cc_detach_ip_req", 
            "properties": {
                "services": {
                    "doc_type": "VsProtocol", 
                    "py_type": "list", 
                    "name": "services", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VsProtocol", 
                    "description": []
                }, 
                "se_intfs": {
                    "doc_type": "SeIntf", 
                    "py_type": "list", 
                    "name": "se_intfs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeIntf", 
                    "description": []
                }, 
                "ip_pfx": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "ip_pfx", 
                    "required": "True", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_create_se_req": {
            "name": "cc_create_se_req", 
            "properties": {
                "vcpus": {
                    "default_value": 2, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vcpus", 
                    "required": "False", 
                    "description": []
                }, 
                "ram": {
                    "default_value": 2048, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ram", 
                    "required": "False", 
                    "description": []
                }, 
                "disk_gb": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "disk_gb", 
                    "required": "False", 
                    "description": []
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_vm_runtime_req": {
            "name": "cc_vm_runtime_req", 
            "properties": {
                "nw_nics_only": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "nw_nics_only", 
                    "required": "False", 
                    "description": [
                        "Include only nics matching network or all nics."
                    ]
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_lbprov_audit_status_rsp": {
            "name": "cc_lbprov_audit_status_rsp", 
            "properties": {
                "hist": {
                    "doc_type": "OsLbProvAuditDetail", 
                    "py_type": "list", 
                    "name": "hist", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "OsLbProvAuditDetail", 
                    "description": []
                }
            }
        }, 
        "cc_lbprov_audit_rsp": {
            "name": "cc_lbprov_audit_rsp", 
            "properties": {
                "data": {
                    "doc_type": "OsLbProvAuditDetail", 
                    "py_type": "OsLbProvAuditDetail", 
                    "name": "data", 
                    "required": "False", 
                    "ref_type": "OsLbProvAuditDetail", 
                    "description": []
                }
            }
        }, 
        "cc_nw_runtime_req": {
            "name": "cc_nw_runtime_req", 
            "properties": {
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_dns_info_req": {
            "name": "cc_dns_info_req", 
            "properties": {
                "vip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "vip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "dns_info": {
                    "doc_type": "DnsInfo", 
                    "py_type": "list", 
                    "name": "dns_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsInfo", 
                    "description": []
                }, 
                "fip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "fip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_verify_login_req": {
            "name": "cc_verify_login_req", 
            "properties": {
                "os_login": {
                    "doc_type": "OpenstackLogin", 
                    "py_type": "OpenstackLogin", 
                    "name": "os_login", 
                    "required": "False", 
                    "ref_type": "OpenstackLogin", 
                    "description": []
                }, 
                "vca_login": {
                    "doc_type": "VCALogin", 
                    "py_type": "VCALogin", 
                    "name": "vca_login", 
                    "required": "False", 
                    "ref_type": "VCALogin", 
                    "description": []
                }, 
                "aws_login": {
                    "doc_type": "AWSLogin", 
                    "py_type": "AWSLogin", 
                    "name": "aws_login", 
                    "required": "False", 
                    "ref_type": "AWSLogin", 
                    "description": []
                }, 
                "oshiftk8s_login": {
                    "doc_type": "OShiftK8SLogin", 
                    "py_type": "OShiftK8SLogin", 
                    "name": "oshiftk8s_login", 
                    "required": "False", 
                    "ref_type": "OShiftK8SLogin", 
                    "description": []
                }, 
                "cs_login": {
                    "doc_type": "CloudStackLogin", 
                    "py_type": "CloudStackLogin", 
                    "name": "cs_login", 
                    "required": "False", 
                    "ref_type": "CloudStackLogin", 
                    "description": []
                }, 
                "ms_login": {
                    "doc_type": "MesosLogin", 
                    "py_type": "MesosLogin", 
                    "name": "ms_login", 
                    "required": "False", 
                    "ref_type": "MesosLogin", 
                    "description": []
                }, 
                "rancher_login": {
                    "doc_type": "RancherLogin", 
                    "py_type": "RancherLogin", 
                    "name": "rancher_login", 
                    "required": "False", 
                    "ref_type": "RancherLogin", 
                    "description": []
                }, 
                "docker_login": {
                    "doc_type": "DockerLogin", 
                    "py_type": "DockerLogin", 
                    "name": "docker_login", 
                    "required": "False", 
                    "ref_type": "DockerLogin", 
                    "description": []
                }
            }
        }, 
        "cc_vip_info": {
            "name": "cc_vip_info", 
            "properties": {
                "vip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "vip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "dns_info": {
                    "doc_type": "DnsInfo", 
                    "py_type": "list", 
                    "name": "dns_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsInfo", 
                    "description": []
                }, 
                "fip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "fip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "cc_lbprov_plugin_status_rsp": {
            "name": "cc_lbprov_plugin_status_rsp", 
            "properties": {
                "status": {
                    "doc_type": "OsLbProvPluginStatus", 
                    "py_type": "list", 
                    "name": "status", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "OsLbProvPluginStatus", 
                    "description": []
                }, 
                "data": {
                    "doc_type": "OsLbProvPluginsDetail", 
                    "py_type": "OsLbProvPluginsDetail", 
                    "name": "data", 
                    "required": "False", 
                    "ref_type": "OsLbProvPluginsDetail", 
                    "description": []
                }
            }
        }, 
        "cc_internals_rsp": {
            "name": "cc_internals_rsp", 
            "properties": {
                "num_rsp_miss": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_rsp_miss", 
                    "required": "False", 
                    "description": []
                }, 
                "num_rxq_tmo": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_rxq_tmo", 
                    "required": "False", 
                    "description": []
                }, 
                "num_txq_full": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_txq_full", 
                    "required": "False", 
                    "description": []
                }, 
                "num_rxq_full": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_rxq_full", 
                    "required": "False", 
                    "description": []
                }, 
                "agents": {
                    "doc_type": "CC_AgentInternal", 
                    "py_type": "list", 
                    "name": "agents", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_AgentInternal", 
                    "description": []
                }, 
                "notifiers": {
                    "doc_type": "CC_Notifier", 
                    "py_type": "list", 
                    "name": "notifiers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_Notifier", 
                    "description": []
                }, 
                "num_rsp_unexp": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_rsp_unexp", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_dns_domain_req": {
            "name": "cc_dns_domain_req", 
            "properties": {
                "inc_public": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "inc_public", 
                    "required": "False", 
                    "description": [
                        "Include public domains."
                    ]
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_configure_req": {
            "name": "cc_configure_req", 
            "properties": {
                "cc_config": {
                    "doc_type": "Cloud", 
                    "py_type": "Cloud", 
                    "name": "cc_config", 
                    "required": "True", 
                    "ref_type": "Cloud", 
                    "description": []
                }, 
                "cc_old_config": {
                    "doc_type": "Cloud", 
                    "py_type": "Cloud", 
                    "name": "cc_old_config", 
                    "required": "False", 
                    "ref_type": "Cloud", 
                    "description": []
                }
            }
        }, 
        "cc_update_vip_rsp": {
            "name": "cc_update_vip_rsp", 
            "properties": {
                "alloced_fip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "alloced_fip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "vip_subnet_prefix": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "vip_subnet_prefix", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }, 
                "alloced_vip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "alloced_vip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "cc_add_vnics_rsp": {
            "name": "cc_add_vnics_rsp", 
            "properties": {
                "vnics": {
                    "doc_type": "vNIC", 
                    "py_type": "list", 
                    "name": "vnics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "vNIC", 
                    "description": []
                }, 
                "cc_vnics": {
                    "doc_type": "CC_VnicInfo", 
                    "py_type": "list", 
                    "name": "cc_vnics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_VnicInfo", 
                    "description": []
                }
            }
        }, 
        "cc_delete_vip_req": {
            "name": "cc_delete_vip_req", 
            "properties": {
                "old": {
                    "doc_type": "cc_vip_info", 
                    "py_type": "cc_vip_info", 
                    "name": "old", 
                    "required": "False", 
                    "ref_type": "cc_vip_info", 
                    "description": []
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_update_vip_req": {
            "name": "cc_update_vip_req", 
            "properties": {
                "free_old": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "free_old", 
                    "required": "False", 
                    "description": [
                        "If true, free old vip info, else preserve.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "new": {
                    "doc_type": "cc_vip_info", 
                    "py_type": "cc_vip_info", 
                    "name": "new", 
                    "required": "False", 
                    "ref_type": "cc_vip_info", 
                    "description": []
                }, 
                "old": {
                    "doc_type": "cc_vip_info", 
                    "py_type": "cc_vip_info", 
                    "name": "old", 
                    "required": "False", 
                    "ref_type": "cc_vip_info", 
                    "description": []
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_webhook_marathon_req": {
            "name": "cc_webhook_marathon_req", 
            "properties": {
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_delete_se_req": {
            "name": "cc_delete_se_req", 
            "properties": {
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_se_action_req": {
            "name": "cc_se_action_req", 
            "properties": {
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_check_se_status_req": {
            "name": "cc_check_se_status_req", 
            "properties": {
                "num_hb_miss": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_hb_miss", 
                    "required": "False", 
                    "description": []
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_nw_runtime_rsp": {
            "name": "cc_nw_runtime_rsp", 
            "properties": {
                "nwruntime": {
                    "doc_type": "VIMgrNWRuntime", 
                    "py_type": "list", 
                    "name": "nwruntime", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIMgrNWRuntime", 
                    "description": []
                }
            }
        }, 
        "cc_dns_domain_rsp": {
            "name": "cc_dns_domain_rsp", 
            "properties": {
                "zdomains": {
                    "doc_type": "DnsDomain", 
                    "py_type": "list", 
                    "name": "zdomains", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsDomain", 
                    "description": []
                }
            }
        }, 
        "cc_autoscale_servers_info_rsp": {
            "name": "cc_autoscale_servers_info_rsp", 
            "properties": {
                "servers": {
                    "doc_type": "Server", 
                    "py_type": "list", 
                    "name": "servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Server", 
                    "description": []
                }
            }
        }, 
        "cc_autoscale_group_info": {
            "name": "cc_autoscale_group_info", 
            "properties": {
                "servers": {
                    "doc_type": "Server", 
                    "py_type": "list", 
                    "name": "servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Server", 
                    "description": [
                        "Field introduced in 17.1.2."
                    ]
                }
            }
        }, 
        "cc_gc_req": {
            "name": "cc_gc_req", 
            "properties": {
                "cleanup": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "cleanup", 
                    "required": "False", 
                    "description": [
                        "Cleanup and delete owned objects as well."
                    ]
                }, 
                "force": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "force", 
                    "required": "False", 
                    "description": [
                        "Force a garbage collect."
                    ]
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_internals_req": {
            "name": "cc_internals_req", 
            "properties": {
                "quiet": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "quiet", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_deconfigure_req": {
            "name": "cc_deconfigure_req", 
            "properties": {
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_securitygroup_req": {
            "name": "cc_securitygroup_req", 
            "properties": {
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_del_vnics_req": {
            "name": "cc_del_vnics_req", 
            "properties": {
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_vm_runtime_rsp": {
            "name": "cc_vm_runtime_rsp", 
            "properties": {
                "vmruntime": {
                    "doc_type": "VIMgrVMRuntime", 
                    "py_type": "list", 
                    "name": "vmruntime", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIMgrVMRuntime", 
                    "description": []
                }
            }
        }, 
        "cc_lookup_nw_req": {
            "name": "cc_lookup_nw_req", 
            "properties": {
                "ips": {
                    "doc_type": "cc_lookup_network_ip", 
                    "py_type": "list", 
                    "name": "ips", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "cc_lookup_network_ip", 
                    "description": []
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_health_req": {
            "name": "cc_health_req", 
            "properties": {
                "ssh_checks": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "ssh_checks", 
                    "required": "False", 
                    "description": [
                        "For container clouds with ssh based se deployment, force ssh connectivity check to hosts."
                    ]
                }, 
                "extensions": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "extensions", 
                    "required": "False", 
                    "description": [
                        "For openstack cloud, check nova extensions."
                    ]
                }
            }
        }, 
        "cc_mesos_serviceengine_req": {
            "name": "cc_mesos_serviceengine_req", 
            "properties": {
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_lbprov_audit_req": {
            "name": "cc_lbprov_audit_req", 
            "properties": {
                "form": {
                    "doc_type": "OsLbProvAuditForm", 
                    "py_type": "OsLbProvAuditForm", 
                    "name": "form", 
                    "required": "True", 
                    "ref_type": "OsLbProvAuditForm", 
                    "description": []
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_securitygroup_rsp": {
            "name": "cc_securitygroup_rsp", 
            "properties": {
                "securitygroups": {
                    "doc_type": "CloudSecurityGroup", 
                    "py_type": "list", 
                    "name": "securitygroups", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CloudSecurityGroup", 
                    "description": []
                }
            }
        }, 
        "cc_zone_req": {
            "name": "cc_zone_req", 
            "properties": {
                "unavail": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "unavail", 
                    "required": "False", 
                    "description": [
                        "Include unavailable zones."
                    ]
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_status_rsp": {
            "name": "cc_status_rsp", 
            "properties": {
                "agents": {
                    "doc_type": "CloudStatus", 
                    "py_type": "list", 
                    "name": "agents", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CloudStatus", 
                    "description": []
                }
            }
        }, 
        "cc_vm_stop_req": {
            "name": "cc_vm_stop_req", 
            "properties": {
                "delete": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "delete", 
                    "required": "False", 
                    "description": []
                }, 
                "servers": {
                    "doc_type": "ServerId", 
                    "py_type": "list", 
                    "name": "servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerId", 
                    "description": []
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_attach_ip_req": {
            "name": "cc_attach_ip_req", 
            "properties": {
                "services": {
                    "doc_type": "VsProtocol", 
                    "py_type": "list", 
                    "name": "services", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VsProtocol", 
                    "description": []
                }, 
                "se_intfs": {
                    "doc_type": "SeIntf", 
                    "py_type": "list", 
                    "name": "se_intfs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeIntf", 
                    "description": []
                }, 
                "ip_pfx": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "ip_pfx", 
                    "required": "True", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_flavor_rsp": {
            "name": "cc_flavor_rsp", 
            "properties": {
                "flavors": {
                    "doc_type": "CloudFlavor", 
                    "py_type": "list", 
                    "name": "flavors", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CloudFlavor", 
                    "description": []
                }
            }
        }, 
        "cc_webhook_mesos_req": {
            "name": "cc_webhook_mesos_req", 
            "properties": {
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_autoscale_group_info_rsp": {
            "name": "cc_autoscale_group_info_rsp", 
            "properties": {
                "group_info": {
                    "doc_type": "cc_autoscale_group_info", 
                    "py_type": "list", 
                    "name": "group_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "cc_autoscale_group_info", 
                    "description": [
                        "Field introduced in 17.1.2."
                    ]
                }
            }
        }, 
        "cc_add_vnics_req": {
            "name": "cc_add_vnics_req", 
            "properties": {
                "vnics": {
                    "doc_type": "CC_VnicInfo", 
                    "py_type": "list", 
                    "name": "vnics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_VnicInfo", 
                    "description": []
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_lbprov_plugin_status_req": {
            "name": "cc_lbprov_plugin_status_req", 
            "properties": {
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_lbprov_plugin_req": {
            "name": "cc_lbprov_plugin_req", 
            "properties": {
                "form": {
                    "doc_type": "OsLbProvPluginForm", 
                    "py_type": "OsLbProvPluginForm", 
                    "name": "form", 
                    "required": "True", 
                    "ref_type": "OsLbProvPluginForm", 
                    "description": []
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_sync_services_req": {
            "name": "cc_sync_services_req", 
            "properties": {
                "services": {
                    "doc_type": "VsProtocol", 
                    "py_type": "list", 
                    "name": "services", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VsProtocol", 
                    "description": []
                }, 
                "cc_id": {
                    "default_value": "cloud-0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "cc_lookup_nw_rsp": {
            "name": "cc_lookup_nw_rsp", 
            "properties": {
                "ip_networks": {
                    "doc_type": "cc_ip_network", 
                    "py_type": "list", 
                    "name": "ip_networks", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "cc_ip_network", 
                    "description": []
                }
            }
        }
    }, 
    "rate": {
        "RateLimiterAction": {
            "name": "RateLimiterAction", 
            "properties": {
                "redirect": {
                    "doc_type": "HTTPRedirectAction", 
                    "py_type": "HTTPRedirectAction", 
                    "name": "redirect", 
                    "required": "False", 
                    "ref_type": "HTTPRedirectAction", 
                    "description": [
                        "Parameters for http redirect rate limit action."
                    ]
                }, 
                "status_code": {
                    "default_value": "HTTP_LOCAL_RESPONSE_STATUS_CODE_429", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "status_code", 
                    "required": "False", 
                    "option_values": [
                        "HTTP_LOCAL_RESPONSE_STATUS_CODE_200", 
                        "HTTP_LOCAL_RESPONSE_STATUS_CODE_403", 
                        "HTTP_LOCAL_RESPONSE_STATUS_CODE_404", 
                        "HTTP_LOCAL_RESPONSE_STATUS_CODE_429"
                    ], 
                    "description": [
                        "Http status code for local response rate limit action.", 
                        "Enum options - HTTP_LOCAL_RESPONSE_STATUS_CODE_200, HTTP_LOCAL_RESPONSE_STATUS_CODE_403, HTTP_LOCAL_RESPONSE_STATUS_CODE_404,", 
                        "HTTP_LOCAL_RESPONSE_STATUS_CODE_429."
                    ]
                }, 
                "type": {
                    "default_value": "RL_ACTION_NONE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "type", 
                    "required": "False", 
                    "option_values": [
                        "RL_ACTION_NONE", 
                        "RL_ACTION_DROP_CONN", 
                        "RL_ACTION_RESET_CONN", 
                        "RL_ACTION_CLOSE_CONN", 
                        "RL_ACTION_LOCAL_RSP", 
                        "RL_ACTION_REDIRECT"
                    ], 
                    "description": [
                        "Type of action to be enforced upon hitting the rate limit.", 
                        "Enum options - RL_ACTION_NONE, RL_ACTION_DROP_CONN, RL_ACTION_RESET_CONN, RL_ACTION_CLOSE_CONN, RL_ACTION_LOCAL_RSP, RL_ACTION_REDIRECT."
                    ]
                }, 
                "file": {
                    "doc_type": "HTTPLocalFile", 
                    "py_type": "HTTPLocalFile", 
                    "name": "file", 
                    "required": "False", 
                    "ref_type": "HTTPLocalFile", 
                    "description": [
                        "File to be used for http local response rate limit action."
                    ]
                }
            }
        }, 
        "RateProfile": {
            "name": "RateProfile", 
            "properties": {
                "count": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "count", 
                    "required": "False", 
                    "range": "10-2500", 
                    "special_values": [
                        "'unlimited'"
                    ], 
                    "description": [
                        "Maximum number of connections or requests or packets.", 
                        "Allowed values are 10-2500.", 
                        "Special values are 0- 'unlimited'."
                    ]
                }, 
                "explicit_tracking": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "explicit_tracking", 
                    "required": "False", 
                    "description": [
                        "Explicitly tracks an attacker across rate periods."
                    ]
                }, 
                "period": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "period", 
                    "required": "False", 
                    "range": "1-300", 
                    "description": [
                        "Time value in seconds to enforce rate count.", 
                        "Allowed values are 1-300."
                    ]
                }, 
                "action": {
                    "doc_type": "RateLimiterAction", 
                    "py_type": "RateLimiterAction", 
                    "name": "action", 
                    "required": "False", 
                    "ref_type": "RateLimiterAction", 
                    "description": [
                        "Action to perform upon rate limiting."
                    ]
                }, 
                "burst_sz": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "burst_sz", 
                    "required": "False", 
                    "range": "10-2500", 
                    "special_values": [
                        "'automatic'"
                    ], 
                    "description": [
                        "Maximum number of connections or requests or packets to be let through instantaneously.", 
                        "Allowed values are 10-2500.", 
                        "Special values are 0- 'automatic'."
                    ]
                }, 
                "fine_grain": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "fine_grain", 
                    "required": "False", 
                    "description": [
                        "Enable fine granularity."
                    ]
                }
            }
        }, 
        "RateLimiterProfile": {
            "name": "RateLimiterProfile", 
            "properties": {
                "uri_failed_requests_rate_limit": {
                    "doc_type": "RateProfile", 
                    "py_type": "RateProfile", 
                    "name": "uri_failed_requests_rate_limit", 
                    "required": "False", 
                    "ref_type": "RateProfile", 
                    "description": [
                        "Rate limit all requests to a uri for a specified period of time once the count of failed requests to that uri crosses a threshold for that", 
                        "period.", 
                        "Count and time period are specified through the rateprofile.", 
                        "Requests are deemed failed based on client or server side error status codes, consistent with how avi logs and metrics subsystems mark failed", 
                        "requests."
                    ]
                }, 
                "client_ip_scanners_requests_rate_limit": {
                    "doc_type": "RateProfile", 
                    "py_type": "RateProfile", 
                    "name": "client_ip_scanners_requests_rate_limit", 
                    "required": "False", 
                    "ref_type": "RateProfile", 
                    "description": [
                        "Automatically track clients and classify them into 3 groups - good, bad, unknown.", 
                        "Clients are tracked based on their ip address.", 
                        "Clients are added to the good group when the avi scan detection system builds history of requests from them that complete successfully.", 
                        "Clients are added to unknown group when there is insufficient history about them.", 
                        "Requests from such clients are rate limited to the rate specified in the rateprofile.", 
                        "Finally, clients with history of failed requests are added to bad group and their requests are rate limited with stricter thresholds than the", 
                        "unknown clients group.", 
                        "The avi scan detection system automatically tunes itself so that the good, bad, and unknown client ips group membership changes dynamically with", 
                        "the changes in traffic patterns through the adc."
                    ]
                }, 
                "client_ip_to_uri_failed_requests_rate_limit": {
                    "doc_type": "RateProfile", 
                    "py_type": "RateProfile", 
                    "name": "client_ip_to_uri_failed_requests_rate_limit", 
                    "required": "False", 
                    "ref_type": "RateProfile", 
                    "description": [
                        "Rate limit all requests from a client to a uri for a specified period of time once the count of failed requests from that client to the uri", 
                        "crosses a threshold for that period.", 
                        "Clients are tracked based on their ip address.", 
                        "Count and time period are specified through the rateprofile.", 
                        "Requests are deemed failed based on client or server side error status codes, consistent with how avi logs and metrics subsystems mark failed", 
                        "requests."
                    ]
                }, 
                "client_ip_to_uri_requests_rate_limit": {
                    "doc_type": "RateProfile", 
                    "py_type": "RateProfile", 
                    "name": "client_ip_to_uri_requests_rate_limit", 
                    "required": "False", 
                    "ref_type": "RateProfile", 
                    "description": [
                        "Rate limit all http requests from any single client ip address to any single url."
                    ]
                }, 
                "uri_requests_rate_limit": {
                    "doc_type": "RateProfile", 
                    "py_type": "RateProfile", 
                    "name": "uri_requests_rate_limit", 
                    "required": "False", 
                    "ref_type": "RateProfile", 
                    "description": [
                        "Rate limit all http requests from all client ip addresses to any single url."
                    ]
                }, 
                "uri_scanners_requests_rate_limit": {
                    "doc_type": "RateProfile", 
                    "py_type": "RateProfile", 
                    "name": "uri_scanners_requests_rate_limit", 
                    "required": "False", 
                    "ref_type": "RateProfile", 
                    "description": [
                        "Automatically track uris and classify them into 3 groups - good, bad, unknown.", 
                        "Uris are added to the good group when the avi scan detection system builds history of requests to uris that complete successfully.", 
                        "Uris are added to unknown group when there is insufficient history about them.", 
                        "Requests for such uris are rate limited to the rate specified in the rateprofile.", 
                        "Finally, uris with history of failed requests are added to bad group and requests to them are rate limited with stricter thresholds than the", 
                        "unknown uris group.", 
                        "The avi scan detection system automatically tunes itself so that the good, bad, and unknown uris group membership changes dynamically with the", 
                        "changes in traffic patterns through the adc."
                    ]
                }, 
                "client_ip_requests_rate_limit": {
                    "doc_type": "RateProfile", 
                    "py_type": "RateProfile", 
                    "name": "client_ip_requests_rate_limit", 
                    "required": "False", 
                    "ref_type": "RateProfile", 
                    "description": [
                        "Rate limit all http requests from any single client ip address to all urls of the virtual service."
                    ]
                }, 
                "client_ip_failed_requests_rate_limit": {
                    "doc_type": "RateProfile", 
                    "py_type": "RateProfile", 
                    "name": "client_ip_failed_requests_rate_limit", 
                    "required": "False", 
                    "ref_type": "RateProfile", 
                    "description": [
                        "Rate limit all requests from a client for a specified period of time once the count of failed requests from that client crosses a threshold for", 
                        "that period.", 
                        "Clients are tracked based on their ip address.", 
                        "Count and time period are specified through the rateprofile.", 
                        "Requests are deemed failed based on client or server side error status codes, consistent with how avi logs and metrics subsystems mark failed", 
                        "requests."
                    ]
                }, 
                "client_ip_connections_rate_limit": {
                    "doc_type": "RateProfile", 
                    "py_type": "RateProfile", 
                    "name": "client_ip_connections_rate_limit", 
                    "required": "False", 
                    "ref_type": "RateProfile", 
                    "description": [
                        "Rate limit all connections made from any single client ip address to the virtual service."
                    ]
                }, 
                "http_header_rate_limits": {
                    "doc_type": "RateProfile", 
                    "py_type": "list", 
                    "name": "http_header_rate_limits", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "RateProfile", 
                    "description": [
                        "Rate limit all http requests from all client ip addresses that contain any single http header value.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }
    }, 
    "micro_service": {
        "MicroService": {
            "name": "MicroService", 
            "properties": {
                "containers": {
                    "doc_type": "MicroServiceContainer", 
                    "py_type": "list", 
                    "name": "containers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MicroServiceContainer", 
                    "description": [
                        "The list of containers for this microservice."
                    ]
                }
            }
        }, 
        "MicroServiceContainer": {
            "name": "MicroServiceContainer", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address of the container."
                    ]
                }
            }
        }
    }, 
    "apitest": {
        "Device": {
            "name": "Device", 
            "properties": {
                "storage": {
                    "doc_type": "Storage", 
                    "py_type": "Storage", 
                    "name": "storage", 
                    "required": "False", 
                    "ref_type": "Storage", 
                    "description": []
                }, 
                "network": {
                    "doc_type": "VmNetwork", 
                    "py_type": "VmNetwork", 
                    "name": "network", 
                    "required": "False", 
                    "ref_type": "VmNetwork", 
                    "description": []
                }, 
                "cpu": {
                    "doc_type": "Cpu", 
                    "py_type": "Cpu", 
                    "name": "cpu", 
                    "required": "False", 
                    "ref_type": "Cpu", 
                    "description": []
                }
            }
        }, 
        "Storage": {
            "name": "Storage", 
            "properties": {
                "capacity": {
                    "default_value": 40, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "capacity", 
                    "required": "True", 
                    "range": "40-1000", 
                    "description": [
                        "Allowed values are 40-1000."
                    ]
                }
            }
        }, 
        "VmNetwork": {
            "name": "VmNetwork", 
            "properties": {
                "prefixes": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "list", 
                    "name": "prefixes", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }
            }
        }, 
        "VirtualMachine": {
            "name": "VirtualMachine", 
            "properties": {
                "devices": {
                    "doc_type": "Device", 
                    "py_type": "list", 
                    "name": "devices", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Device", 
                    "description": []
                }
            }
        }, 
        "Cpu": {
            "name": "Cpu", 
            "properties": {
                "vcpus": {
                    "default_value": 4, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vcpus", 
                    "required": "True", 
                    "range": "1-16", 
                    "description": [
                        "Allowed values are 1-16."
                    ]
                }, 
                "frequency": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "frequency", 
                    "required": "True", 
                    "range": "1-3", 
                    "description": [
                        "Allowed values are 1-3."
                    ]
                }, 
                "memory": {
                    "default_value": 2, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "memory", 
                    "required": "True", 
                    "range": "1-64", 
                    "description": [
                        "Allowed values are 1-64."
                    ]
                }
            }
        }
    }, 
    "dns_policy": {
        "DnsPolicy": {
            "name": "DnsPolicy", 
            "properties": {
                "rule": {
                    "doc_type": "DnsRule", 
                    "py_type": "list", 
                    "name": "rule", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsRule", 
                    "description": [
                        "Dns rules.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "DnsRule": {
            "name": "DnsRule", 
            "properties": {
                "action": {
                    "doc_type": "DnsRuleAction", 
                    "py_type": "DnsRuleAction", 
                    "name": "action", 
                    "required": "False", 
                    "ref_type": "DnsRuleAction", 
                    "description": [
                        "Action to be performed upon successful matching.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "enable": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable", 
                    "required": "False", 
                    "description": [
                        "Enable or disable the rule.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "match": {
                    "doc_type": "DnsRuleMatchTarget", 
                    "py_type": "DnsRuleMatchTarget", 
                    "name": "match", 
                    "required": "False", 
                    "ref_type": "DnsRuleMatchTarget", 
                    "description": [
                        "Add match criteria to the rule.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "DnsRuleActionAllowDrop": {
            "name": "DnsRuleActionAllowDrop", 
            "properties": {
                "reset_conn": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "reset_conn", 
                    "required": "False", 
                    "description": [
                        "Reset the tcp connection of the dns query, if allow is set to false to drop the query.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "allow": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "allow", 
                    "required": "False", 
                    "description": [
                        "Allow the dns query.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "DnsRuleActionResponse": {
            "name": "DnsRuleActionResponse", 
            "properties": {
                "authoritative": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "authoritative", 
                    "required": "False", 
                    "description": [
                        "Dns response is authoritative.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "rcode": {
                    "default_value": "DNS_RCODE_NOERROR", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "rcode", 
                    "required": "False", 
                    "option_values": [
                        "DNS_RCODE_NOERROR", 
                        "DNS_RCODE_FORMERR", 
                        "DNS_RCODE_SERVFAIL", 
                        "DNS_RCODE_NXDOMAIN", 
                        "DNS_RCODE_NOTIMP", 
                        "DNS_RCODE_REFUSED", 
                        "DNS_RCODE_YXDOMAIN", 
                        "DNS_RCODE_YXRRSET", 
                        "DNS_RCODE_NXRRSET", 
                        "DNS_RCODE_NOTAUTH", 
                        "DNS_RCODE_NOTZONE"
                    ], 
                    "description": [
                        "Dns response code.", 
                        "Enum options - DNS_RCODE_NOERROR, DNS_RCODE_FORMERR, DNS_RCODE_SERVFAIL, DNS_RCODE_NXDOMAIN, DNS_RCODE_NOTIMP, DNS_RCODE_REFUSED,", 
                        "DNS_RCODE_YXDOMAIN, DNS_RCODE_YXRRSET, DNS_RCODE_NXRRSET, DNS_RCODE_NOTAUTH, DNS_RCODE_NOTZONE.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "truncation": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "truncation", 
                    "required": "False", 
                    "description": [
                        "Dns response is truncated.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "DnsRuleMatchTarget": {
            "name": "DnsRuleMatchTarget", 
            "properties": {
                "query_name": {
                    "doc_type": "DnsQueryNameMatch", 
                    "py_type": "DnsQueryNameMatch", 
                    "name": "query_name", 
                    "required": "False", 
                    "ref_type": "DnsQueryNameMatch", 
                    "description": [
                        "Domain names to match against query name.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "client_ip": {
                    "doc_type": "IpAddrMatch", 
                    "py_type": "IpAddrMatch", 
                    "name": "client_ip", 
                    "required": "False", 
                    "ref_type": "IpAddrMatch", 
                    "description": [
                        "Ip addresses to match against client ip.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "protocol": {
                    "doc_type": "DnsTransportProtocolMatch", 
                    "py_type": "DnsTransportProtocolMatch", 
                    "name": "protocol", 
                    "required": "False", 
                    "ref_type": "DnsTransportProtocolMatch", 
                    "description": [
                        "Dns transport protocol match.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "query_type": {
                    "doc_type": "DnsQueryTypeMatch", 
                    "py_type": "DnsQueryTypeMatch", 
                    "name": "query_type", 
                    "required": "False", 
                    "ref_type": "DnsQueryTypeMatch", 
                    "description": [
                        "Dns query types to match against request query type.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "DnsRuleAction": {
            "name": "DnsRuleAction", 
            "properties": {
                "response": {
                    "doc_type": "DnsRuleActionResponse", 
                    "py_type": "DnsRuleActionResponse", 
                    "name": "response", 
                    "required": "False", 
                    "ref_type": "DnsRuleActionResponse", 
                    "description": [
                        "Generate a response for the dns query.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "allow": {
                    "doc_type": "DnsRuleActionAllowDrop", 
                    "py_type": "DnsRuleActionAllowDrop", 
                    "name": "allow", 
                    "required": "False", 
                    "ref_type": "DnsRuleActionAllowDrop", 
                    "description": [
                        "Allow or drop the dns query.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }
    }, 
    "analytics_policy": {
        "FullClientLogs": {
            "name": "FullClientLogs", 
            "properties": {
                "duration": {
                    "default_value": 30, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "duration", 
                    "required": "False", 
                    "special_values": [
                        "'infinite'"
                    ], 
                    "description": [
                        "How long should the system capture all logs, measured in minutes.", 
                        "Set to 0 for infinite.", 
                        "Special values are 0 - 'infinite'."
                    ]
                }, 
                "all_headers": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "all_headers", 
                    "required": "False", 
                    "description": [
                        "Log all headers."
                    ]
                }, 
                "throttle": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "throttle", 
                    "required": "False", 
                    "description": [
                        "This setting limits the number of non-significant logs generated per second for this vs on each se.", 
                        "Default is 10 logs per second.", 
                        "Set it to zero (0) to disable throttling.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enabled", 
                    "required": "True", 
                    "description": [
                        "Capture all client logs including connections and requests.", 
                        "When disabled, only errors will be logged."
                    ]
                }
            }
        }, 
        "MetricsRealTimeUpdate": {
            "name": "MetricsRealTimeUpdate", 
            "properties": {
                "duration": {
                    "default_value": 30, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "duration", 
                    "required": "False", 
                    "special_values": [
                        "'infinite'"
                    ], 
                    "description": [
                        "Real time metrics collection duration in minutes.", 
                        "0 for infinite.", 
                        "Special values are 0 - 'infinite'."
                    ]
                }, 
                "enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enabled", 
                    "required": "True", 
                    "description": [
                        "Enables real time metrics collection.", 
                        "When disabled, 6 hour view is the most granular the system will track."
                    ]
                }
            }
        }, 
        "ClientInsightsSampling": {
            "name": "ClientInsightsSampling", 
            "properties": {
                "skip_uris": {
                    "doc_type": "StringMatch", 
                    "py_type": "StringMatch", 
                    "name": "skip_uris", 
                    "required": "False", 
                    "ref_type": "StringMatch", 
                    "description": [
                        "Url patterns to avoid when inserting rum script."
                    ]
                }, 
                "client_ip": {
                    "doc_type": "IpAddrMatch", 
                    "py_type": "IpAddrMatch", 
                    "name": "client_ip", 
                    "required": "False", 
                    "ref_type": "IpAddrMatch", 
                    "description": [
                        "Client ip addresses to check when inserting rum script."
                    ]
                }, 
                "sample_uris": {
                    "doc_type": "StringMatch", 
                    "py_type": "StringMatch", 
                    "name": "sample_uris", 
                    "required": "False", 
                    "ref_type": "StringMatch", 
                    "description": [
                        "Url patterns to check when inserting rum script."
                    ]
                }
            }
        }, 
        "ClientLogFilter": {
            "name": "ClientLogFilter", 
            "properties": {
                "duration": {
                    "default_value": 30, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "duration", 
                    "required": "False", 
                    "special_values": [
                        "'infinite'"
                    ], 
                    "description": [
                        "Special values are 0 - 'infinite'."
                    ]
                }, 
                "all_headers": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "all_headers", 
                    "required": "False", 
                    "description": []
                }, 
                "client_ip": {
                    "doc_type": "IpAddrMatch", 
                    "py_type": "IpAddrMatch", 
                    "name": "client_ip", 
                    "required": "False", 
                    "ref_type": "IpAddrMatch", 
                    "description": []
                }, 
                "enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enabled", 
                    "required": "True", 
                    "description": []
                }, 
                "uri": {
                    "doc_type": "StringMatch", 
                    "py_type": "StringMatch", 
                    "name": "uri", 
                    "required": "False", 
                    "ref_type": "StringMatch", 
                    "description": []
                }
            }
        }, 
        "AnalyticsPolicy": {
            "name": "AnalyticsPolicy", 
            "properties": {
                "udf_log_throttle": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "udf_log_throttle", 
                    "required": "False", 
                    "description": [
                        "This setting limits the total number of udf logs generated per second for this vs on each se.", 
                        "Udf logs are generated due to the configured client log filters or the rules with logging enabled.", 
                        "Default is 10 logs per second.", 
                        "Set it to zero (0) to disable throttling.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "client_insights_sampling": {
                    "doc_type": "ClientInsightsSampling", 
                    "py_type": "ClientInsightsSampling", 
                    "name": "client_insights_sampling", 
                    "required": "False", 
                    "ref_type": "ClientInsightsSampling", 
                    "description": []
                }, 
                "full_client_logs": {
                    "doc_type": "FullClientLogs", 
                    "py_type": "FullClientLogs", 
                    "name": "full_client_logs", 
                    "required": "False", 
                    "ref_type": "FullClientLogs", 
                    "description": []
                }, 
                "client_log_filters": {
                    "doc_type": "ClientLogFilter", 
                    "py_type": "list", 
                    "name": "client_log_filters", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ClientLogFilter", 
                    "description": []
                }, 
                "metrics_realtime_update": {
                    "doc_type": "MetricsRealTimeUpdate", 
                    "py_type": "MetricsRealTimeUpdate", 
                    "name": "metrics_realtime_update", 
                    "required": "False", 
                    "ref_type": "MetricsRealTimeUpdate", 
                    "description": [
                        "Settings to turn on realtime metrics and set duration for realtime updates."
                    ]
                }, 
                "significant_log_throttle": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "significant_log_throttle", 
                    "required": "False", 
                    "description": [
                        "This setting limits the number of significant logs generated per second for this vs on each se.", 
                        "Default is 10 logs per second.", 
                        "Set it to zero (0) to disable throttling.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "client_insights": {
                    "default_value": "ACTIVE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "client_insights", 
                    "required": "False", 
                    "option_values": [
                        "NO_INSIGHTS", 
                        "PASSIVE", 
                        "ACTIVE"
                    ], 
                    "description": [
                        "Gain insights from sampled client to server http requests and responses.", 
                        "Enum options - NO_INSIGHTS, PASSIVE, ACTIVE."
                    ]
                }
            }
        }
    }, 
    "se_res_mgr": {
        "VsProtocol": {
            "name": "VsProtocol", 
            "properties": {
                "vip": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "vip", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }
            }
        }, 
        "SeResourceManagerProtoRuntime": {
            "name": "SeResourceManagerProtoRuntime", 
            "properties": {
                "ticks": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ticks", 
                    "required": "False", 
                    "description": []
                }, 
                "cold_start_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "cold_start_in_progress", 
                    "required": "False", 
                    "description": []
                }, 
                "upgrade_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "upgrade_in_progress", 
                    "required": "False", 
                    "description": []
                }, 
                "pending_creates": {
                    "doc_type": "SeCreatePendingProto", 
                    "py_type": "list", 
                    "name": "pending_creates", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeCreatePendingProto", 
                    "description": []
                }, 
                "vrfs": {
                    "doc_type": "RmVrfProto", 
                    "py_type": "list", 
                    "name": "vrfs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "RmVrfProto", 
                    "description": []
                }, 
                "se_stats": {
                    "doc_type": "PlacementStats", 
                    "py_type": "PlacementStats", 
                    "name": "se_stats", 
                    "required": "False", 
                    "ref_type": "PlacementStats", 
                    "description": []
                }, 
                "vs_resync_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "vs_resync_in_progress", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SeResourceConsumedProto": {
            "name": "SeResourceConsumedProto", 
            "properties": {
                "attach_ip_success": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "attach_ip_success", 
                    "required": "False", 
                    "description": []
                }, 
                "admin_down": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "admin_down", 
                    "required": "False", 
                    "description": [
                        "This flag is set when scalein is called with admin_down.", 
                        "This flag gets reset when scaleout is called with admin_up.this se will be temporarily not receiving traffic during the admin_down but the vs", 
                        "will not be removed from the se.", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "marked_for_scalein": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "marked_for_scalein", 
                    "required": "False", 
                    "description": []
                }, 
                "failover_attempts": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "failover_attempts", 
                    "required": "False", 
                    "description": []
                }, 
                "sec_idx": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "sec_idx", 
                    "required": "False", 
                    "description": []
                }, 
                "vip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "vip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "attach_ip_fail_cnt": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "attach_ip_fail_cnt", 
                    "required": "False", 
                    "description": []
                }, 
                "vip_intf_list": {
                    "doc_type": "SeVipInterfaceList", 
                    "py_type": "list", 
                    "name": "vip_intf_list", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeVipInterfaceList", 
                    "description": []
                }, 
                "static_se_binding": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "static_se_binding", 
                    "required": "True", 
                    "description": []
                }, 
                "attach_ip_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "attach_ip_in_progress", 
                    "required": "False", 
                    "description": []
                }, 
                "floating_intf_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "floating_intf_ip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "marked_for_delete": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "marked_for_delete", 
                    "required": "False", 
                    "description": []
                }, 
                "vnics": {
                    "doc_type": "SeResourceVnic", 
                    "py_type": "list", 
                    "name": "vnics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeResourceVnic", 
                    "description": []
                }, 
                "last_failover_attempt_ticks": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "last_failover_attempt_ticks", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "RmConMetrics": {
            "name": "RmConMetrics", 
            "properties": {
                "cpu_score": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "cpu_score", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "PlacementStatusFilter": {
            "name": "PlacementStatusFilter", 
            "properties": {
                "precise": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "precise", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "RmVrfProto": {
            "name": "RmVrfProto", 
            "properties": {
                "vrf_context": {
                    "doc_type": "VrfContext", 
                    "py_type": "VrfContext", 
                    "name": "vrf_context", 
                    "required": "True", 
                    "ref_type": "VrfContext", 
                    "description": []
                }
            }
        }, 
        "SeConsumerFilter": {
            "name": "SeConsumerFilter", 
            "properties": {
                "inc_hist": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "inc_hist", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "TickGeneratorJob": {
            "name": "TickGeneratorJob", 
            "properties": {
                "tick_time": {
                    "default_value": 30, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "tick_time", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SeGarbageCollectorJob": {
            "name": "SeGarbageCollectorJob", 
            "properties": {
                "sweep_delay": {
                    "default_value": 90, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "sweep_delay", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "PlacementStatus": {
            "name": "PlacementStatus", 
            "properties": {
                "consumers": {
                    "doc_type": "ConsumerStatus", 
                    "py_type": "list", 
                    "name": "consumers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ConsumerStatus", 
                    "description": []
                }
            }
        }, 
        "SeConsumerProto": {
            "name": "SeConsumerProto", 
            "properties": {
                "placement_disabled_reason_code": {
                    "default_value": "SYSERR_FAILURE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "placement_disabled_reason_code", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }, 
                "cloud_unready_reason_code": {
                    "default_value": "SYSERR_FAILURE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cloud_unready_reason_code", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }, 
                "num_spawn_attempts": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_spawn_attempts", 
                    "required": "False", 
                    "description": []
                }, 
                "servers": {
                    "doc_type": "ConServer", 
                    "py_type": "list", 
                    "name": "servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ConServer", 
                    "description": []
                }, 
                "disabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disabled", 
                    "required": "False", 
                    "description": []
                }, 
                "res_total": {
                    "doc_type": "VsResProfile", 
                    "py_type": "VsResProfile", 
                    "name": "res_total", 
                    "required": "True", 
                    "ref_type": "VsResProfile", 
                    "description": []
                }, 
                "vip": {
                    "doc_type": "ConVip", 
                    "py_type": "ConVip", 
                    "name": "vip", 
                    "required": "False", 
                    "ref_type": "ConVip", 
                    "description": []
                }, 
                "snat_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "snat_ip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "create_disabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "create_disabled", 
                    "required": "False", 
                    "description": []
                }, 
                "enable_rhi_snat": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_rhi_snat", 
                    "required": "False", 
                    "description": []
                }, 
                "num_seq_vnic_fail": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_seq_vnic_fail", 
                    "required": "False", 
                    "description": []
                }, 
                "subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Subnet for choosing vnic that vip is placed on.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "fip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "fip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Floating ip associated with the virtualservice.", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "vnic_op_disabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "vnic_op_disabled", 
                    "required": "False", 
                    "description": []
                }, 
                "service_subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "service_subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Subnet for choosing vnic that vip is placed on.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "scaleout_ecmp": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "scaleout_ecmp", 
                    "required": "False", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "cloud_ready": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "cloud_ready", 
                    "required": "False", 
                    "description": []
                }, 
                "pending_vnic_op": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "pending_vnic_op", 
                    "required": "False", 
                    "description": []
                }, 
                "insufficient_buffer_se": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "insufficient_buffer_se", 
                    "required": "False", 
                    "description": []
                }, 
                "num_seq_spawn_fail": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_seq_spawn_fail", 
                    "required": "False", 
                    "description": []
                }, 
                "apic_mode": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "apic_mode", 
                    "required": "False", 
                    "description": []
                }, 
                "resources_consumed": {
                    "doc_type": "SeResourceConsumedProto", 
                    "py_type": "list", 
                    "name": "resources_consumed", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeResourceConsumedProto", 
                    "description": []
                }, 
                "spawn_fail_reason_code": {
                    "default_value": "SYSERR_FAILURE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "spawn_fail_reason_code", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }, 
                "exclude_create_op": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "exclude_create_op", 
                    "required": "False", 
                    "description": []
                }, 
                "cloud_apis_unready_reason_code": {
                    "default_value": "SYSERR_FAILURE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cloud_apis_unready_reason_code", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "num_vnics": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_vnics", 
                    "required": "False", 
                    "description": []
                }, 
                "res_pending": {
                    "doc_type": "VsResProfile", 
                    "py_type": "VsResProfile", 
                    "name": "res_pending", 
                    "required": "True", 
                    "ref_type": "VsResProfile", 
                    "description": []
                }, 
                "active_standby_se_tag": {
                    "default_value": "ACTIVE_STANDBY_SE_1", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "active_standby_se_tag", 
                    "required": "False", 
                    "option_values": [
                        "ACTIVE_STANDBY_SE_1", 
                        "ACTIVE_STANDBY_SE_2"
                    ], 
                    "description": [
                        "Enum options - ACTIVE_STANDBY_SE_1, ACTIVE_STANDBY_SE_2."
                    ]
                }, 
                "cloud_apis_ready": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "cloud_apis_ready", 
                    "required": "False", 
                    "description": [
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "write_ops_disabled_reason_code": {
                    "default_value": "SYSERR_FAILURE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "write_ops_disabled_reason_code", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }, 
                "at_spawn_limit": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "at_spawn_limit", 
                    "required": "False", 
                    "description": []
                }, 
                "ign_pool_net_reach": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "ign_pool_net_reach", 
                    "required": "False", 
                    "description": []
                }, 
                "query_host_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "query_host_pending", 
                    "required": "False", 
                    "description": []
                }, 
                "east_west_placement": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "east_west_placement", 
                    "required": "False", 
                    "description": [
                        "Force placement on all se's in service group (mesos mode only)."
                    ]
                }, 
                "placement_disabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "placement_disabled", 
                    "required": "False", 
                    "description": []
                }, 
                "placement_history": {
                    "doc_type": "PlacementHistory", 
                    "py_type": "list", 
                    "name": "placement_history", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "PlacementHistory", 
                    "description": []
                }, 
                "write_ops_disabled_info": {
                    "doc_type": "VipPlacementResolutionInfo", 
                    "py_type": "VipPlacementResolutionInfo", 
                    "name": "write_ops_disabled_info", 
                    "required": "False", 
                    "ref_type": "VipPlacementResolutionInfo", 
                    "description": []
                }, 
                "dns_info": {
                    "doc_type": "DnsInfo", 
                    "py_type": "list", 
                    "name": "dns_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsInfo", 
                    "description": [
                        "Dns resolvable, fully qualified domain name of the virtualservice.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "vnic_ip_disabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "vnic_ip_disabled", 
                    "required": "False", 
                    "description": []
                }, 
                "services": {
                    "doc_type": "VsProtocol", 
                    "py_type": "list", 
                    "name": "services", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VsProtocol", 
                    "description": []
                }, 
                "enable_rhi": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_rhi", 
                    "required": "False", 
                    "description": []
                }, 
                "exclude_vnic_op": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "exclude_vnic_op", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SeVipProto": {
            "name": "SeVipProto", 
            "properties": {
                "con_info": {
                    "doc_type": "ConVipInfo", 
                    "py_type": "list", 
                    "name": "con_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ConVipInfo", 
                    "description": []
                }, 
                "secondary_se_info": {
                    "doc_type": "SeVipInfo", 
                    "py_type": "list", 
                    "name": "secondary_se_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeVipInfo", 
                    "description": []
                }, 
                "vip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "vip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "primary_se_info": {
                    "doc_type": "SeVipInfo", 
                    "py_type": "list", 
                    "name": "primary_se_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeVipInfo", 
                    "description": []
                }, 
                "standby_se_info": {
                    "doc_type": "SeVipInfo", 
                    "py_type": "list", 
                    "name": "standby_se_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeVipInfo", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "RmResMetrics": {
            "name": "RmResMetrics", 
            "properties": {
                "cpu_score": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "cpu_score", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "CandidateSeHostFilter": {
            "name": "CandidateSeHostFilter", 
            "properties": {
                "check_hosts": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "check_hosts", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "RmMetrics": {
            "name": "RmMetrics", 
            "properties": {
                "se_grp_metrics": {
                    "doc_type": "RmSeGrpMetrics", 
                    "py_type": "list", 
                    "name": "se_grp_metrics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "RmSeGrpMetrics", 
                    "description": []
                }
            }
        }, 
        "PlacementStats": {
            "name": "PlacementStats", 
            "properties": {
                "se_name_suffix": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_name_suffix", 
                    "required": "False", 
                    "description": []
                }, 
                "num_vnic_add_fail": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_vnic_add_fail", 
                    "required": "False", 
                    "description": []
                }, 
                "num_se_create_fail": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_se_create_fail", 
                    "required": "False", 
                    "description": []
                }, 
                "num_vnic_del_success": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_vnic_del_success", 
                    "required": "False", 
                    "description": []
                }, 
                "num_vnic_add_call": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_vnic_add_call", 
                    "required": "False", 
                    "description": []
                }, 
                "num_se_create_timed_out": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_se_create_timed_out", 
                    "required": "False", 
                    "description": []
                }, 
                "num_se_create_success": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_se_create_success", 
                    "required": "False", 
                    "description": []
                }, 
                "num_se_create_call": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_se_create_call", 
                    "required": "False", 
                    "description": []
                }, 
                "num_vnic_del_call": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_vnic_del_call", 
                    "required": "False", 
                    "description": []
                }, 
                "num_vnic_add_success": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_vnic_add_success", 
                    "required": "False", 
                    "description": []
                }, 
                "se_name_prefix": {
                    "default_value": "Avi-", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "se_name_prefix", 
                    "required": "False", 
                    "description": []
                }, 
                "num_se_freed": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_se_freed", 
                    "required": "False", 
                    "description": []
                }, 
                "num_vnic_del_fail": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_vnic_del_fail", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SeResourceVnic": {
            "name": "SeResourceVnic", 
            "properties": {
                "subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }, 
                "del_retries": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "del_retries", 
                    "required": "False", 
                    "description": []
                }, 
                "enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enabled", 
                    "required": "False", 
                    "description": []
                }, 
                "last_vnic_op_ticks": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "last_vnic_op_ticks", 
                    "required": "False", 
                    "description": []
                }, 
                "vnic_type": {
                    "default_value": "RM_VNIC_FRONTEND", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "vnic_type", 
                    "required": "False", 
                    "option_values": [
                        "RM_VNIC_FRONTEND", 
                        "RM_VNIC_BACKEND"
                    ], 
                    "description": [
                        "Enum options - RM_VNIC_FRONTEND, RM_VNIC_BACKEND."
                    ]
                }, 
                "connected": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "connected", 
                    "required": "False", 
                    "description": []
                }, 
                "marked_for_del": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "marked_for_del", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "PlacementHistory": {
            "name": "PlacementHistory", 
            "properties": {
                "info": {
                    "doc_type": "PlacementOpInfo", 
                    "py_type": "PlacementOpInfo", 
                    "name": "info", 
                    "required": "False", 
                    "ref_type": "PlacementOpInfo", 
                    "description": []
                }, 
                "user_acked": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "user_acked", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "RmSeGrpMetrics": {
            "name": "RmSeGrpMetrics", 
            "properties": {
                "con_metrics": {
                    "doc_type": "RmConMetrics", 
                    "py_type": "list", 
                    "name": "con_metrics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "RmConMetrics", 
                    "description": []
                }, 
                "res_metrics": {
                    "doc_type": "RmResMetrics", 
                    "py_type": "list", 
                    "name": "res_metrics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "RmResMetrics", 
                    "description": []
                }
            }
        }, 
        "SeConsumerCliProto": {
            "name": "SeConsumerCliProto", 
            "properties": {
                "consumer": {
                    "doc_type": "SeConsumerProto", 
                    "py_type": "SeConsumerProto", 
                    "name": "consumer", 
                    "required": "False", 
                    "ref_type": "SeConsumerProto", 
                    "description": []
                }
            }
        }, 
        "VnicIpInfo": {
            "name": "VnicIpInfo", 
            "properties": {
                "subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "list", 
                    "name": "subnet", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }, 
                "timed_out": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "timed_out", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "ConsumerStatus": {
            "name": "ConsumerStatus", 
            "properties": {
                "vip_placement_resolution_info": {
                    "doc_type": "VipPlacementResolutionInfo", 
                    "py_type": "VipPlacementResolutionInfo", 
                    "name": "vip_placement_resolution_info", 
                    "required": "False", 
                    "ref_type": "VipPlacementResolutionInfo", 
                    "description": []
                }, 
                "num_se_requested": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_se_requested", 
                    "required": "False", 
                    "description": []
                }, 
                "resources": {
                    "doc_type": "ResourceStatus", 
                    "py_type": "list", 
                    "name": "resources", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ResourceStatus", 
                    "description": []
                }, 
                "num_se_assigned": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_se_assigned", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "PlacementGlobals": {
            "name": "PlacementGlobals", 
            "properties": {
                "num_resources": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_resources", 
                    "required": "False", 
                    "description": []
                }, 
                "num_create_pending": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_create_pending", 
                    "required": "False", 
                    "description": []
                }, 
                "ticks": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ticks", 
                    "required": "False", 
                    "description": []
                }, 
                "num_consumers": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_consumers", 
                    "required": "False", 
                    "description": []
                }, 
                "cold_start_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "cold_start_in_progress", 
                    "required": "False", 
                    "description": []
                }, 
                "upgrade_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "upgrade_in_progress", 
                    "required": "False", 
                    "description": []
                }, 
                "vs_resync_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "vs_resync_in_progress", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SeResourceCliProto": {
            "name": "SeResourceCliProto", 
            "properties": {
                "resource": {
                    "doc_type": "SeResourceProto", 
                    "py_type": "SeResourceProto", 
                    "name": "resource", 
                    "required": "False", 
                    "ref_type": "SeResourceProto", 
                    "description": []
                }
            }
        }, 
        "SeCreatePendingProto": {
            "name": "SeCreatePendingProto", 
            "properties": {
                "mgmt_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "mgmt_ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "CreateInfo": {
            "name": "CreateInfo", 
            "properties": {
                "mgmt_subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "mgmt_subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }
            }
        }, 
        "PlacementOpInfo": {
            "name": "PlacementOpInfo", 
            "properties": {
                "create_info": {
                    "doc_type": "CreateInfo", 
                    "py_type": "CreateInfo", 
                    "name": "create_info", 
                    "required": "False", 
                    "ref_type": "CreateInfo", 
                    "description": []
                }, 
                "vnic_ip_info": {
                    "doc_type": "VnicIpInfo", 
                    "py_type": "VnicIpInfo", 
                    "name": "vnic_ip_info", 
                    "required": "False", 
                    "ref_type": "VnicIpInfo", 
                    "description": []
                }, 
                "switchover_info": {
                    "doc_type": "SwitchoverInfo", 
                    "py_type": "SwitchoverInfo", 
                    "name": "switchover_info", 
                    "required": "False", 
                    "ref_type": "SwitchoverInfo", 
                    "description": []
                }, 
                "mod_vnic_info": {
                    "doc_type": "ModVnicInfo", 
                    "py_type": "ModVnicInfo", 
                    "name": "mod_vnic_info", 
                    "required": "False", 
                    "ref_type": "ModVnicInfo", 
                    "description": []
                }, 
                "vip_vnic_info": {
                    "doc_type": "UpdVipVnicInfo", 
                    "py_type": "UpdVipVnicInfo", 
                    "name": "vip_vnic_info", 
                    "required": "False", 
                    "ref_type": "UpdVipVnicInfo", 
                    "description": []
                }
            }
        }, 
        "SeResourceProto": {
            "name": "SeResourceProto", 
            "properties": {
                "del_start_ticks": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "del_start_ticks", 
                    "required": "False", 
                    "description": []
                }, 
                "container_mode": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "container_mode", 
                    "required": "False", 
                    "description": []
                }, 
                "reason_code": {
                    "default_value": "SE_DEREG_POWERED_OFF", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "reason_code", 
                    "required": "False", 
                    "option_values": [
                        "SE_DEREG_HB_FAILURE", 
                        "SE_DEREG_POWERED_OFF", 
                        "SE_DEREG_SUSPENDED", 
                        "SE_DEREG_FATAL_ERROR", 
                        "SE_DEREG_UNREACHABLE", 
                        "SE_DEREG_VM_DELETED", 
                        "SE_DEREG_REBOOTED", 
                        "SE_DEREG_PURGE", 
                        "SE_DEREG_HEALTH_CHECK", 
                        "SE_DEREG_VINFRA_POWERED_OFF", 
                        "SE_DEREG_UPGRADING", 
                        "SE_DEREG_DP_HB_FAIL"
                    ], 
                    "description": [
                        "Enum options - SE_DEREG_HB_FAILURE, SE_DEREG_POWERED_OFF, SE_DEREG_SUSPENDED, SE_DEREG_FATAL_ERROR, SE_DEREG_UNREACHABLE, SE_DEREG_VM_DELETED,", 
                        "SE_DEREG_REBOOTED, SE_DEREG_PURGE, SE_DEREG_HEALTH_CHECK, SE_DEREG_VINFRA_POWERED_OFF, SE_DEREG_UPGRADING, SE_DEREG_DP_HB_FAIL."
                    ]
                }, 
                "ips": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "ips", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "vinfra_discovered": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "vinfra_discovered", 
                    "required": "False", 
                    "description": []
                }, 
                "reboot_attempts": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "reboot_attempts", 
                    "required": "False", 
                    "description": []
                }, 
                "warm_starting": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "warm_starting", 
                    "required": "False", 
                    "description": []
                }, 
                "upgrading": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "upgrading", 
                    "required": "False", 
                    "description": [
                        "Field introduced in 17.1.4."
                    ]
                }, 
                "container_type": {
                    "default_value": "CONTAINER_TYPE_HOST", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "container_type", 
                    "required": "False", 
                    "option_values": [
                        "CONTAINER_TYPE_BRIDGE", 
                        "CONTAINER_TYPE_HOST", 
                        "CONTAINER_TYPE_HOST_DPDK"
                    ], 
                    "description": [
                        "Enum options - CONTAINER_TYPE_BRIDGE, CONTAINER_TYPE_HOST, CONTAINER_TYPE_HOST_DPDK."
                    ]
                }, 
                "version": {
                    "default_value": "0.0.0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "version", 
                    "required": "False", 
                    "description": []
                }, 
                "vnic_op": {
                    "doc_type": "SeVnicOpProto", 
                    "py_type": "SeVnicOpProto", 
                    "name": "vnic_op", 
                    "required": "False", 
                    "ref_type": "SeVnicOpProto", 
                    "description": []
                }, 
                "online": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "online", 
                    "required": "False", 
                    "description": []
                }, 
                "vnics": {
                    "doc_type": "SeResourceVnic", 
                    "py_type": "list", 
                    "name": "vnics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeResourceVnic", 
                    "description": []
                }, 
                "resources_consumed": {
                    "doc_type": "SeResourceConsumedProto", 
                    "py_type": "list", 
                    "name": "resources_consumed", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeResourceConsumedProto", 
                    "description": []
                }, 
                "enable_state": {
                    "default_value": "SE_STATE_ENABLED", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "enable_state", 
                    "required": "False", 
                    "option_values": [
                        "SE_STATE_ENABLED", 
                        "SE_STATE_DISABLED_FOR_PLACEMENT", 
                        "SE_STATE_DISABLED"
                    ], 
                    "description": [
                        "Enum options - SE_STATE_ENABLED, SE_STATE_DISABLED_FOR_PLACEMENT, SE_STATE_DISABLED."
                    ]
                }, 
                "in_use": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "in_use", 
                    "required": "False", 
                    "description": []
                }, 
                "controller_created": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "controller_created", 
                    "required": "False", 
                    "description": []
                }, 
                "static_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "static_ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "del_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "del_pending", 
                    "required": "False", 
                    "description": []
                }, 
                "at_curr_ver": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "at_curr_ver", 
                    "required": "False", 
                    "description": []
                }, 
                "bootup_failed": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "bootup_failed", 
                    "required": "False", 
                    "description": []
                }, 
                "disconnected": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disconnected", 
                    "required": "False", 
                    "description": []
                }, 
                "gateway_up": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "gateway_up", 
                    "required": "False", 
                    "description": [
                        "Indicates if se is able to connect to gateway."
                    ]
                }, 
                "masked_ips": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "masked_ips", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "SeIntf": {
            "name": "SeIntf", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "primary": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "primary", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SeGeneratorJob": {
            "name": "SeGeneratorJob", 
            "properties": {
                "wait_time": {
                    "default_value": 30, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "wait_time", 
                    "required": "False", 
                    "description": []
                }
            }
        }
    }, 
    "syserr": {
        "SyserrMsg": {
            "name": "SyserrMsg", 
            "properties": {
                "info": {
                    "doc_type": "SyserrInfo", 
                    "py_type": "SyserrInfo", 
                    "name": "info", 
                    "required": "False", 
                    "ref_type": "SyserrInfo", 
                    "description": []
                }
            }
        }, 
        "SyserrInfo": {
            "name": "SyserrInfo", 
            "properties": {
                "syserr_test1_info": {
                    "doc_type": "SyserrTest1Info", 
                    "py_type": "SyserrTest1Info", 
                    "name": "syserr_test1_info", 
                    "required": "False", 
                    "ref_type": "SyserrTest1Info", 
                    "description": []
                }
            }
        }
    }, 
    "hsm": {
        "HardwareSecurityModule": {
            "name": "HardwareSecurityModule", 
            "properties": {
                "rfs": {
                    "doc_type": "HSMThalesRFS", 
                    "py_type": "HSMThalesRFS", 
                    "name": "rfs", 
                    "required": "False", 
                    "ref_type": "HSMThalesRFS", 
                    "description": [
                        "Thales remote file server (rfs), used for the nethsms, configuration."
                    ]
                }, 
                "sluna": {
                    "doc_type": "HSMSafenetLuna", 
                    "py_type": "HSMSafenetLuna", 
                    "name": "sluna", 
                    "required": "False", 
                    "ref_type": "HSMSafenetLuna", 
                    "description": [
                        "Safenet/gemalto luna/gem specific configuration."
                    ]
                }, 
                "nethsm": {
                    "doc_type": "HSMThalesNetHsm", 
                    "py_type": "list", 
                    "name": "nethsm", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HSMThalesNetHsm", 
                    "description": [
                        "Thales nethsm specific configuration."
                    ]
                }
            }
        }, 
        "HardwareSecurityModuleGroup": {
            "name": "HardwareSecurityModuleGroup", 
            "properties": {
                "hsm": {
                    "doc_type": "HardwareSecurityModule", 
                    "py_type": "HardwareSecurityModule", 
                    "name": "hsm", 
                    "required": "True", 
                    "ref_type": "HardwareSecurityModule", 
                    "description": [
                        "Hardware security module configuration."
                    ]
                }
            }
        }, 
        "HSMThalesRFS": {
            "name": "HSMThalesRFS", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address of the rfs server from where to sync the thales encrypted private key."
                    ]
                }, 
                "port": {
                    "default_value": 9004, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "port", 
                    "required": "False", 
                    "range": "1-65535", 
                    "description": [
                        "Port at which the rfs server accepts the sync request from clients for thales encrypted private key.", 
                        "Allowed values are 1-65535."
                    ]
                }
            }
        }, 
        "HSMSafenetLuna": {
            "name": "HSMSafenetLuna", 
            "properties": {
                "use_dedicated_network": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_dedicated_network", 
                    "required": "False", 
                    "description": [
                        "If enabled, dedicated network is used to communicate with hsm,else, the management network is used."
                    ]
                }, 
                "node_info": {
                    "doc_type": "HSMSafenetClientInfo", 
                    "py_type": "list", 
                    "name": "node_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HSMSafenetClientInfo", 
                    "description": [
                        "Node specific information."
                    ]
                }, 
                "is_ha": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_ha", 
                    "required": "True", 
                    "description": [
                        "Set to indicate ha across more than one servers."
                    ]
                }, 
                "server": {
                    "doc_type": "HSMSafenetLunaServer", 
                    "py_type": "list", 
                    "name": "server", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HSMSafenetLunaServer", 
                    "description": [
                        "Safenet/gemalto hsm servers used for crypto operations."
                    ]
                }
            }
        }, 
        "HSMThalesNetHsm": {
            "name": "HSMThalesNetHsm", 
            "properties": {
                "priority": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "priority", 
                    "required": "True", 
                    "range": "1-100", 
                    "description": [
                        "Priority class of the nethsm in an high availability setup.", 
                        "1 is the highest priority and 100 is the lowest priority.", 
                        "Allowed values are 1-100."
                    ]
                }, 
                "module_id": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "module_id", 
                    "required": "False", 
                    "description": [
                        "Local module id of the nethsm device."
                    ]
                }, 
                "remote_port": {
                    "default_value": 9004, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "remote_port", 
                    "required": "False", 
                    "range": "1-65535", 
                    "description": [
                        "Port at which the nethsm device accepts the connection.", 
                        "Allowed values are 1-65535."
                    ]
                }, 
                "remote_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "remote_ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address of the nethsm device."
                    ]
                }
            }
        }
    }, 
    "compression_profile": {
        "CompressionFilter": {
            "name": "CompressionFilter", 
            "properties": {
                "ip_addrs": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "ip_addrs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "level": {
                    "default_value": "NORMAL_COMPRESSION", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "level", 
                    "required": "True", 
                    "option_values": [
                        "AGGRESSIVE_COMPRESSION", 
                        "NORMAL_COMPRESSION", 
                        "NO_COMPRESSION"
                    ], 
                    "description": [
                        "Enum options - AGGRESSIVE_COMPRESSION, NORMAL_COMPRESSION, NO_COMPRESSION."
                    ]
                }, 
                "ip_addr_ranges": {
                    "doc_type": "IpAddrRange", 
                    "py_type": "list", 
                    "name": "ip_addr_ranges", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrRange", 
                    "description": []
                }, 
                "match": {
                    "default_value": "IS_IN", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "match", 
                    "required": "False", 
                    "option_values": [
                        "IS_IN", 
                        "IS_NOT_IN"
                    ], 
                    "description": [
                        "Whether to apply filter when group criteria is matched or not.", 
                        "Enum options - IS_IN, IS_NOT_IN."
                    ]
                }, 
                "ip_addr_prefixes": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "list", 
                    "name": "ip_addr_prefixes", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }
            }
        }, 
        "CompressionProfile": {
            "name": "CompressionProfile", 
            "properties": {
                "filter": {
                    "doc_type": "CompressionFilter", 
                    "py_type": "list", 
                    "name": "filter", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CompressionFilter", 
                    "description": [
                        "Custom filters used when auto compression is not selected."
                    ]
                }, 
                "type": {
                    "default_value": "AUTO_COMPRESSION", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "type", 
                    "required": "True", 
                    "option_values": [
                        "AUTO_COMPRESSION", 
                        "CUSTOM_COMPRESSION"
                    ], 
                    "description": [
                        "Compress content automatically or add custom filters to define compressible content and compression levels.", 
                        "Enum options - AUTO_COMPRESSION, CUSTOM_COMPRESSION."
                    ]
                }, 
                "compression": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "compression", 
                    "required": "True", 
                    "description": [
                        "Compress http response content if it wasn't already compressed."
                    ]
                }, 
                "remove_accept_encoding_header": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "remove_accept_encoding_header", 
                    "required": "True", 
                    "description": [
                        "Offload compression from the servers to avi.", 
                        "Saves compute cycles on the servers."
                    ]
                }
            }
        }
    }, 
    "vrf": {
        "BgpProfile": {
            "name": "BgpProfile", 
            "properties": {
                "keepalive_interval": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "keepalive_interval", 
                    "required": "False", 
                    "range": "0-3600", 
                    "description": [
                        "Keepalive interval for peers.", 
                        "Allowed values are 0-3600."
                    ]
                }, 
                "peers": {
                    "doc_type": "BgpPeer", 
                    "py_type": "list", 
                    "name": "peers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "BgpPeer", 
                    "description": [
                        "Bgp peers."
                    ]
                }, 
                "ip_communities": {
                    "doc_type": "IpCommunity", 
                    "py_type": "list", 
                    "name": "ip_communities", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpCommunity", 
                    "description": [
                        "Communities per ip address range.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "local_as": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "local_as", 
                    "required": "True", 
                    "range": "1-4294967295", 
                    "description": [
                        "Local autonomous system id.", 
                        "Allowed values are 1-4294967295."
                    ]
                }, 
                "ibgp": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "ibgp", 
                    "required": "True", 
                    "description": [
                        "Bgp peer type."
                    ]
                }, 
                "send_community": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "send_community", 
                    "required": "False", 
                    "description": [
                        "Send community attribute to all peers.", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "hold_time": {
                    "default_value": 180, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "hold_time", 
                    "required": "False", 
                    "range": "3-7200", 
                    "description": [
                        "Hold time for peers.", 
                        "Allowed values are 3-7200."
                    ]
                }
            }
        }, 
        "VrfContext": {
            "name": "VrfContext", 
            "properties": {
                "static_routes": {
                    "doc_type": "StaticRoute", 
                    "py_type": "list", 
                    "name": "static_routes", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "StaticRoute", 
                    "description": []
                }, 
                "system_default": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "system_default", 
                    "required": "False", 
                    "description": []
                }, 
                "gateway_mon": {
                    "doc_type": "GatewayMonitor", 
                    "py_type": "list", 
                    "name": "gateway_mon", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GatewayMonitor", 
                    "description": [
                        "Configure ping based heartbeat check for gateway in service engines of vrf."
                    ]
                }, 
                "debugvrfcontext": {
                    "doc_type": "DebugVrfContext", 
                    "py_type": "DebugVrfContext", 
                    "name": "debugvrfcontext", 
                    "required": "False", 
                    "ref_type": "DebugVrfContext", 
                    "description": [
                        "Configure debug flags for vrf.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "bgp_profile": {
                    "doc_type": "BgpProfile", 
                    "py_type": "BgpProfile", 
                    "name": "bgp_profile", 
                    "required": "False", 
                    "ref_type": "BgpProfile", 
                    "description": [
                        "Bgp local and peer info."
                    ]
                }, 
                "internal_gateway_monitor": {
                    "doc_type": "InternalGatewayMonitor", 
                    "py_type": "InternalGatewayMonitor", 
                    "name": "internal_gateway_monitor", 
                    "required": "False", 
                    "ref_type": "InternalGatewayMonitor", 
                    "description": [
                        "Configure ping based heartbeat check for all default gateways in service engines of vrf.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "BgpPeer": {
            "name": "BgpPeer", 
            "properties": {
                "keepalive_interval": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "keepalive_interval", 
                    "required": "False", 
                    "range": "0-3600", 
                    "description": [
                        "Keepalive interval for this peer.", 
                        "Allowed values are 0-3600."
                    ]
                }, 
                "subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "subnet", 
                    "required": "True", 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Subnet providing reachability for peer."
                    ]
                }, 
                "remote_as": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "remote_as", 
                    "required": "False", 
                    "range": "1-4294967295", 
                    "description": [
                        "Peer autonomous system id.", 
                        "Allowed values are 1-4294967295."
                    ]
                }, 
                "ebgp_multihop": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ebgp_multihop", 
                    "required": "False", 
                    "range": "0-255", 
                    "description": [
                        "Ttl for multihop ebgp peer.", 
                        "Allowed values are 0-255.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "bfd": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "bfd", 
                    "required": "False", 
                    "description": [
                        "Enable bi-directional forward detection.", 
                        "Only async mode supported."
                    ]
                }, 
                "advertise_snat_ip": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "advertise_snat_ip", 
                    "required": "False", 
                    "description": [
                        "Advertise snat ip to this peer."
                    ]
                }, 
                "connect_timer": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "connect_timer", 
                    "required": "False", 
                    "range": "1-120", 
                    "description": [
                        "Connect timer for this peer.", 
                        "Allowed values are 1-120."
                    ]
                }, 
                "peer_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "peer_ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address of the bgp peer."
                    ]
                }, 
                "advertise_vip": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "advertise_vip", 
                    "required": "False", 
                    "description": [
                        "Advertise vip to this peer."
                    ]
                }, 
                "advertisement_interval": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "advertisement_interval", 
                    "required": "False", 
                    "range": "1-60", 
                    "description": [
                        "Advertisement interval for this peer.", 
                        "Allowed values are 1-60."
                    ]
                }, 
                "hold_time": {
                    "default_value": 180, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "hold_time", 
                    "required": "False", 
                    "range": "3-7200", 
                    "description": [
                        "Hold time for this peer.", 
                        "Allowed values are 3-7200."
                    ]
                }
            }
        }, 
        "InternalGatewayMonitor": {
            "name": "InternalGatewayMonitor", 
            "properties": {
                "gateway_monitor_success_threshold": {
                    "default_value": 15, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "gateway_monitor_success_threshold", 
                    "required": "False", 
                    "range": "3-50", 
                    "description": [
                        "The number of consecutive successful gateway health checks before a gateway that was marked down by the gateway monitor is marked up.", 
                        "Allowed values are 3-50.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "gateway_monitor_failure_threshold": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "gateway_monitor_failure_threshold", 
                    "required": "False", 
                    "range": "3-50", 
                    "description": [
                        "The number of consecutive failed gateway health checks before a gateway is marked down.", 
                        "Allowed values are 3-50.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "disable_gateway_monitor": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_gateway_monitor", 
                    "required": "False", 
                    "description": [
                        "Disable the gateway monitor for default gateway.", 
                        "They are monitored by default.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "gateway_monitor_interval": {
                    "default_value": 1000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "gateway_monitor_interval", 
                    "required": "False", 
                    "range": "100-60000", 
                    "description": [
                        "The interval between two ping requests sent by the gateway monitor in milliseconds.", 
                        "If a value is not specified, requests are sent every second.", 
                        "Allowed values are 100-60000.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "StaticRoute": {
            "name": "StaticRoute", 
            "properties": {
                "prefix": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "prefix", 
                    "required": "True", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }, 
                "next_hop": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "next_hop", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "IpCommunity": {
            "name": "IpCommunity", 
            "properties": {
                "ip_end": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip_end", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "End of ip address range.", 
                        "Optional if ip_begin is the only ip address in specified ip range.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "ip_begin": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip_begin", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Beginning of ip address range.", 
                        "Field introduced in 17.1.3."
                    ]
                }
            }
        }, 
        "GatewayMonitor": {
            "name": "GatewayMonitor", 
            "properties": {
                "gateway_monitor_success_threshold": {
                    "default_value": 15, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "gateway_monitor_success_threshold", 
                    "required": "False", 
                    "range": "3-50", 
                    "description": [
                        "The number of consecutive successful gateway health checks before a gateway that was marked down by the gateway monitor is marked up.", 
                        "Allowed values are 3-50."
                    ]
                }, 
                "gateway_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "gateway_ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address of next hop gateway to be monitored."
                    ]
                }, 
                "gateway_monitor_fail_threshold": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "gateway_monitor_fail_threshold", 
                    "required": "False", 
                    "range": "3-50", 
                    "description": [
                        "The number of consecutive failed gateway health checks before a gateway is marked down.", 
                        "Allowed values are 3-50."
                    ]
                }, 
                "gateway_monitor_interval": {
                    "default_value": 1000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "gateway_monitor_interval", 
                    "required": "False", 
                    "range": "100-60000", 
                    "description": [
                        "The interval between two ping requests sent by the gateway monitor in milliseconds.", 
                        "If a value is not specified, requests are sent every second.", 
                        "Allowed values are 100-60000."
                    ]
                }
            }
        }, 
        "DebugVrfContext": {
            "name": "DebugVrfContext", 
            "properties": {
                "flags": {
                    "doc_type": "DebugVrf", 
                    "py_type": "list", 
                    "name": "flags", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DebugVrf", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }
    }, 
    "gslb_runtime": {
        "GslbGeoFileRuntime": {
            "name": "GslbGeoFileRuntime", 
            "properties": {
                "flr_state": {
                    "doc_type": "CfgState", 
                    "py_type": "list", 
                    "name": "flr_state", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CfgState", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "ldr_state": {
                    "doc_type": "CfgState", 
                    "py_type": "CfgState", 
                    "name": "ldr_state", 
                    "required": "False", 
                    "ref_type": "CfgState", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "GslbSiteRuntimeCfg": {
            "name": "GslbSiteRuntimeCfg", 
            "properties": {
                "fd_info": {
                    "doc_type": "ConfigInfo", 
                    "py_type": "ConfigInfo", 
                    "name": "fd_info", 
                    "required": "False", 
                    "ref_type": "ConfigInfo", 
                    "description": [
                        "Gslb geodb files published for a site.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "glb_info": {
                    "doc_type": "ConfigInfo", 
                    "py_type": "ConfigInfo", 
                    "name": "glb_info", 
                    "required": "False", 
                    "ref_type": "ConfigInfo", 
                    "description": [
                        "Gslb info published for a site."
                    ]
                }, 
                "sync_info": {
                    "doc_type": "GslbSiteCfgSyncInfo", 
                    "py_type": "GslbSiteCfgSyncInfo", 
                    "name": "sync_info", 
                    "required": "False", 
                    "ref_type": "GslbSiteCfgSyncInfo", 
                    "description": [
                        "Configuration sync-info of the site ."
                    ]
                }, 
                "mm_info": {
                    "doc_type": "ConfigInfo", 
                    "py_type": "ConfigInfo", 
                    "name": "mm_info", 
                    "required": "False", 
                    "ref_type": "ConfigInfo", 
                    "description": [
                        "Maintenance mode info published for a site."
                    ]
                }, 
                "gpki_info": {
                    "doc_type": "ConfigInfo", 
                    "py_type": "ConfigInfo", 
                    "name": "gpki_info", 
                    "required": "False", 
                    "ref_type": "ConfigInfo", 
                    "description": [
                        "Gslb pki info published for a site.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "ghm_info": {
                    "doc_type": "ConfigInfo", 
                    "py_type": "ConfigInfo", 
                    "name": "ghm_info", 
                    "required": "False", 
                    "ref_type": "ConfigInfo", 
                    "description": [
                        "Ghm info published for a site."
                    ]
                }, 
                "gs_info": {
                    "doc_type": "ConfigInfo", 
                    "py_type": "ConfigInfo", 
                    "name": "gs_info", 
                    "required": "False", 
                    "ref_type": "ConfigInfo", 
                    "description": [
                        "Gs info published for a site."
                    ]
                }, 
                "gap_info": {
                    "doc_type": "ConfigInfo", 
                    "py_type": "ConfigInfo", 
                    "name": "gap_info", 
                    "required": "False", 
                    "ref_type": "ConfigInfo", 
                    "description": [
                        "Gslb application persistence info published for a site.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "geo_info": {
                    "doc_type": "ConfigInfo", 
                    "py_type": "ConfigInfo", 
                    "name": "geo_info", 
                    "required": "False", 
                    "ref_type": "ConfigInfo", 
                    "description": [
                        "Gslb geodb info published for a site.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "GslbPerDnsState": {
            "name": "GslbPerDnsState", 
            "properties": {
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "valid_dns_vs": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "valid_dns_vs", 
                    "required": "False", 
                    "description": [
                        "This field indicates that the local vs is configured to be a dns service.", 
                        "The services, network profile and application profile are configured in virtual service for dns operations."
                    ]
                }, 
                "geo_download": {
                    "doc_type": "GslbDownloadStatus", 
                    "py_type": "GslbDownloadStatus", 
                    "name": "geo_download", 
                    "required": "False", 
                    "ref_type": "GslbDownloadStatus", 
                    "description": [
                        "This field describes the geodbprofile download status to the dns-vs.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "gslb_download": {
                    "doc_type": "GslbDownloadStatus", 
                    "py_type": "GslbDownloadStatus", 
                    "name": "gslb_download", 
                    "required": "False", 
                    "ref_type": "GslbDownloadStatus", 
                    "description": [
                        "This field describes the gslb, gslbservice, healthmonitor download status to the dns-vs.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "GslbPoolRuntime": {
            "name": "GslbPoolRuntime", 
            "properties": {
                "members": {
                    "doc_type": "GslbPoolMemberRuntimeInfo", 
                    "py_type": "list", 
                    "name": "members", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbPoolMemberRuntimeInfo", 
                    "description": []
                }
            }
        }, 
        "GslbDnsSeInfo": {
            "name": "GslbDnsSeInfo", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Service engine's fabric ip used to push geo files.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "fd_download": {
                    "doc_type": "GslbDownloadStatus", 
                    "py_type": "GslbDownloadStatus", 
                    "name": "fd_download", 
                    "required": "False", 
                    "ref_type": "GslbDownloadStatus", 
                    "description": [
                        "This field describes the fd download status to the se.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "fd_info": {
                    "doc_type": "ConfigInfo", 
                    "py_type": "ConfigInfo", 
                    "name": "fd_info", 
                    "required": "False", 
                    "ref_type": "ConfigInfo", 
                    "description": [
                        "Geo files queue for sequencing files to se.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "GslbRuntimeSummary": {
            "name": "GslbRuntimeSummary", 
            "properties": {
                "info": {
                    "doc_type": "GslbRuntime", 
                    "py_type": "GslbRuntime", 
                    "name": "info", 
                    "required": "False", 
                    "ref_type": "GslbRuntime", 
                    "description": []
                }
            }
        }, 
        "GslbPoolMemberDatapathStatus": {
            "name": "GslbPoolMemberDatapathStatus", 
            "properties": {
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "location": {
                    "doc_type": "GeoLocation", 
                    "py_type": "GeoLocation", 
                    "name": "location", 
                    "required": "False", 
                    "ref_type": "GeoLocation", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "GslbPKIProfileRuntime": {
            "name": "GslbPKIProfileRuntime", 
            "properties": {
                "flr_state": {
                    "doc_type": "CfgState", 
                    "py_type": "list", 
                    "name": "flr_state", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CfgState", 
                    "description": [
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "ldr_state": {
                    "doc_type": "CfgState", 
                    "py_type": "CfgState", 
                    "name": "ldr_state", 
                    "required": "False", 
                    "ref_type": "CfgState", 
                    "description": [
                        "Field introduced in 17.1.3."
                    ]
                }
            }
        }, 
        "GslbServiceDetail": {
            "name": "GslbServiceDetail", 
            "properties": {
                "groups_detail": {
                    "doc_type": "GslbPoolDetail", 
                    "py_type": "list", 
                    "name": "groups_detail", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbPoolDetail", 
                    "description": [
                        "Select list of pools belonging to this gslb service."
                    ]
                }, 
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "last_dp_oper_state": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "last_dp_oper_state", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }
            }
        }, 
        "GslbSiteHealthStatus": {
            "name": "GslbSiteHealthStatus", 
            "properties": {
                "datapath_gsinfo": {
                    "doc_type": "GslbPoolMemberRuntimeInfo", 
                    "py_type": "list", 
                    "name": "datapath_gsinfo", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbPoolMemberRuntimeInfo", 
                    "description": [
                        "Controller retrieved gslb service operational info based of dns datapath resolution.", 
                        "This information is generated only on those sites that have dns-vs participating in gslb."
                    ]
                }, 
                "geo_table": {
                    "doc_type": "CfgState", 
                    "py_type": "list", 
                    "name": "geo_table", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CfgState", 
                    "description": [
                        "Gslb geo db profile state at member.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "dns_info": {
                    "doc_type": "GslbDnsInfo", 
                    "py_type": "GslbDnsInfo", 
                    "name": "dns_info", 
                    "required": "False", 
                    "ref_type": "GslbDnsInfo", 
                    "description": [
                        "Dns info at the site."
                    ]
                }, 
                "ghm_table": {
                    "doc_type": "CfgState", 
                    "py_type": "list", 
                    "name": "ghm_table", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CfgState", 
                    "description": [
                        "Gslb health monitor state at member."
                    ]
                }, 
                "gap_table": {
                    "doc_type": "CfgState", 
                    "py_type": "list", 
                    "name": "gap_table", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CfgState", 
                    "description": [
                        "Gslb application persistence profile state at member.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "controller_gsinfo": {
                    "doc_type": "GslbPoolMemberRuntimeInfo", 
                    "py_type": "list", 
                    "name": "controller_gsinfo", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbPoolMemberRuntimeInfo", 
                    "description": [
                        "Controller retrieved gslb service operational info based of virtual service state."
                    ]
                }, 
                "glb_table": {
                    "doc_type": "CfgState", 
                    "py_type": "list", 
                    "name": "glb_table", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CfgState", 
                    "description": [
                        "Gslb state at member."
                    ]
                }, 
                "gs_table": {
                    "doc_type": "CfgState", 
                    "py_type": "list", 
                    "name": "gs_table", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CfgState", 
                    "description": [
                        "Gslb service state at member."
                    ]
                }
            }
        }, 
        "GslbRuntimeInternal": {
            "name": "GslbRuntimeInternal", 
            "properties": {
                "info": {
                    "doc_type": "GslbRuntime", 
                    "py_type": "GslbRuntime", 
                    "name": "info", 
                    "required": "False", 
                    "ref_type": "GslbRuntime", 
                    "description": []
                }
            }
        }, 
        "GslbRuntimeDetail": {
            "name": "GslbRuntimeDetail", 
            "properties": {
                "info": {
                    "doc_type": "GslbRuntime", 
                    "py_type": "GslbRuntime", 
                    "name": "info", 
                    "required": "False", 
                    "ref_type": "GslbRuntime", 
                    "description": []
                }
            }
        }, 
        "GslbSiteRuntimeInfo": {
            "name": "GslbSiteRuntimeInfo", 
            "properties": {
                "sw_version": {
                    "default_value": "Not-Initialized", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "sw_version", 
                    "required": "False", 
                    "description": [
                        "Current software version of the site."
                    ]
                }, 
                "dns_info": {
                    "doc_type": "GslbDnsInfo", 
                    "py_type": "GslbDnsInfo", 
                    "name": "dns_info", 
                    "required": "False", 
                    "ref_type": "GslbDnsInfo", 
                    "description": [
                        "Operational dns state at the site."
                    ]
                }, 
                "num_of_retries": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_of_retries", 
                    "required": "False", 
                    "description": [
                        "Number of retry attempts to reach the remote site."
                    ]
                }, 
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "role": {
                    "default_value": "GSLB_NOT_A_MEMBER", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "role", 
                    "required": "False", 
                    "option_values": [
                        "GSLB_LEADER", 
                        "GSLB_MEMBER", 
                        "GSLB_NOT_A_MEMBER"
                    ], 
                    "description": [
                        "Site role  leader or follower.", 
                        "Enum options - GSLB_LEADER, GSLB_MEMBER, GSLB_NOT_A_MEMBER."
                    ]
                }, 
                "last_changed_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_changed_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "event_cache": {
                    "doc_type": "EventCache", 
                    "py_type": "EventCache", 
                    "name": "event_cache", 
                    "required": "False", 
                    "ref_type": "EventCache", 
                    "description": [
                        "Event-cache used for event throttling."
                    ]
                }
            }
        }, 
        "GslbSiteCfgSyncInfo": {
            "name": "GslbSiteCfgSyncInfo", 
            "properties": {
                "errored_objects": {
                    "doc_type": "VersionInfo", 
                    "py_type": "list", 
                    "name": "errored_objects", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VersionInfo", 
                    "description": [
                        "Objects that could not be synced to the site ."
                    ]
                }, 
                "last_changed_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_changed_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }
            }
        }, 
        "GslbDownloadStatus": {
            "name": "GslbDownloadStatus", 
            "properties": {
                "last_changed_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_changed_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "GslbServiceHmonStat": {
            "name": "GslbServiceHmonStat", 
            "properties": {
                "groups": {
                    "doc_type": "GslbPoolHmon", 
                    "py_type": "list", 
                    "name": "groups", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbPoolHmon", 
                    "description": [
                        "Gslb service group runtime information."
                    ]
                }
            }
        }, 
        "GslbDnsUpdate": {
            "name": "GslbDnsUpdate", 
            "properties": {
                "obj_info": {
                    "doc_type": "GslbObjectInfo", 
                    "py_type": "list", 
                    "name": "obj_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbObjectInfo", 
                    "description": [
                        "Gslb, gslbservice objects that is pushed on a per dns basis.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "GslbPoolDetail": {
            "name": "GslbPoolDetail", 
            "properties": {
                "hmon": {
                    "doc_type": "HealthMonitorStatRuntime", 
                    "py_type": "HealthMonitorStatRuntime", 
                    "name": "hmon", 
                    "required": "False", 
                    "ref_type": "HealthMonitorStatRuntime", 
                    "description": []
                }, 
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "stats": {
                    "doc_type": "GslbServiceGroupStats", 
                    "py_type": "GslbServiceGroupStats", 
                    "name": "stats", 
                    "required": "False", 
                    "ref_type": "GslbServiceGroupStats", 
                    "description": []
                }, 
                "members": {
                    "doc_type": "GslbPoolMemberDetail", 
                    "py_type": "list", 
                    "name": "members", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbPoolMemberDetail", 
                    "description": [
                        "Select list of virtual services belonging to this gslb."
                    ]
                }, 
                "algorithm": {
                    "default_value": "GSLB_ALGORITHM_ROUND_ROBIN", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "algorithm", 
                    "required": "False", 
                    "option_values": [
                        "GSLB_ALGORITHM_ROUND_ROBIN", 
                        "GSLB_ALGORITHM_CONSISTENT_HASH", 
                        "GSLB_ALGORITHM_GEO"
                    ], 
                    "description": [
                        "The load balancing algorithm will pick a local member within the gslb service list of available members.", 
                        "Enum options - GSLB_ALGORITHM_ROUND_ROBIN, GSLB_ALGORITHM_CONSISTENT_HASH, GSLB_ALGORITHM_GEO."
                    ]
                }
            }
        }, 
        "GslbPoolHmon": {
            "name": "GslbPoolHmon", 
            "properties": {
                "hmon": {
                    "doc_type": "HealthMonitorStatRuntime", 
                    "py_type": "list", 
                    "name": "hmon", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HealthMonitorStatRuntime", 
                    "description": []
                }
            }
        }, 
        "GslbServiceRuntime": {
            "name": "GslbServiceRuntime", 
            "properties": {
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "flr_state": {
                    "doc_type": "CfgState", 
                    "py_type": "list", 
                    "name": "flr_state", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CfgState", 
                    "description": []
                }, 
                "ldr_state": {
                    "doc_type": "CfgState", 
                    "py_type": "CfgState", 
                    "name": "ldr_state", 
                    "required": "False", 
                    "ref_type": "CfgState", 
                    "description": []
                }, 
                "groups": {
                    "doc_type": "GslbPoolRuntime", 
                    "py_type": "list", 
                    "name": "groups", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbPoolRuntime", 
                    "description": []
                }
            }
        }, 
        "GslbRuntime": {
            "name": "GslbRuntime", 
            "properties": {
                "third_party_sites": {
                    "doc_type": "GslbThirdPartySiteRuntime", 
                    "py_type": "list", 
                    "name": "third_party_sites", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbThirdPartySiteRuntime", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "flr_state": {
                    "doc_type": "CfgState", 
                    "py_type": "list", 
                    "name": "flr_state", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CfgState", 
                    "description": []
                }, 
                "event_cache": {
                    "doc_type": "EventCache", 
                    "py_type": "EventCache", 
                    "name": "event_cache", 
                    "required": "False", 
                    "ref_type": "EventCache", 
                    "description": []
                }, 
                "ldr_state": {
                    "doc_type": "CfgState", 
                    "py_type": "CfgState", 
                    "name": "ldr_state", 
                    "required": "False", 
                    "ref_type": "CfgState", 
                    "description": []
                }, 
                "site": {
                    "doc_type": "GslbSiteRuntime", 
                    "py_type": "list", 
                    "name": "site", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbSiteRuntime", 
                    "description": []
                }
            }
        }, 
        "GslbPoolMemberRuntimeInfo": {
            "name": "GslbPoolMemberRuntimeInfo", 
            "properties": {
                "vserver_l7_metrics": {
                    "doc_type": "VserverL7MetricsObj", 
                    "py_type": "VserverL7MetricsObj", 
                    "name": "vserver_l7_metrics", 
                    "required": "False", 
                    "ref_type": "VserverL7MetricsObj", 
                    "description": [
                        "Front end l7 metrics of the virtual service."
                    ]
                }, 
                "controller_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "controller_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": [
                        "Controller retrieved member status at the site."
                    ]
                }, 
                "vserver_l4_metrics": {
                    "doc_type": "VserverL4MetricsObj", 
                    "py_type": "VserverL4MetricsObj", 
                    "name": "vserver_l4_metrics", 
                    "required": "False", 
                    "ref_type": "VserverL4MetricsObj", 
                    "description": [
                        "Front end l4 metrics of the virtual service."
                    ]
                }, 
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Gslb pool member's configured vip."
                    ]
                }, 
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": [
                        "Pool member's consolidated operational status ."
                    ]
                }, 
                "services": {
                    "doc_type": "Service", 
                    "py_type": "list", 
                    "name": "services", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Service", 
                    "description": [
                        "Services configured on the virtual service."
                    ]
                }, 
                "datapath_status": {
                    "doc_type": "GslbPoolMemberDatapathStatus", 
                    "py_type": "list", 
                    "name": "datapath_status", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbPoolMemberDatapathStatus", 
                    "description": [
                        "Dns computed member status from different sites."
                    ]
                }, 
                "oper_ips": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "oper_ips", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Operational vips of the member  that can map to multiple vs ip addresses such as private, public and floating addresses."
                    ]
                }
            }
        }, 
        "GslbGeoDbProfileRuntime": {
            "name": "GslbGeoDbProfileRuntime", 
            "properties": {
                "flr_state": {
                    "doc_type": "CfgState", 
                    "py_type": "list", 
                    "name": "flr_state", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CfgState", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "ldr_state": {
                    "doc_type": "CfgState", 
                    "py_type": "CfgState", 
                    "name": "ldr_state", 
                    "required": "False", 
                    "ref_type": "CfgState", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "GslbDnsGeoUpdate": {
            "name": "GslbDnsGeoUpdate", 
            "properties": {
                "obj_info": {
                    "doc_type": "GslbObjectInfo", 
                    "py_type": "list", 
                    "name": "obj_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbObjectInfo", 
                    "description": [
                        "Gslbgeodbprofile object that is pushed on on a per dns basis.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "CfgState": {
            "name": "CfgState", 
            "properties": {
                "status": {
                    "default_value": "SYSERR_SUCCESS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "status", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Status of the object.", 
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }, 
                "last_changed_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_changed_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }
            }
        }, 
        "GslbPoolMemberDetail": {
            "name": "GslbPoolMemberDetail", 
            "properties": {
                "health_status": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "health_status", 
                    "required": "False", 
                    "description": []
                }, 
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address of the gslb pool member."
                    ]
                }, 
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "ratio": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ratio", 
                    "required": "False", 
                    "range": "1-20", 
                    "description": [
                        "Overrides the default ratio of 1.", 
                        "Reduces the percentage the lb algorithm would pick the server in relation to its peers.", 
                        "Allowed values are 1-20."
                    ]
                }, 
                "health_check_failures": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "health_check_failures", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "ConfigInfo": {
            "name": "ConfigInfo", 
            "properties": {
                "queue": {
                    "doc_type": "VersionInfo", 
                    "py_type": "list", 
                    "name": "queue", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VersionInfo", 
                    "description": []
                }
            }
        }, 
        "GslbHealthMonitorRuntime": {
            "name": "GslbHealthMonitorRuntime", 
            "properties": {
                "flr_state": {
                    "doc_type": "CfgState", 
                    "py_type": "list", 
                    "name": "flr_state", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CfgState", 
                    "description": []
                }, 
                "ldr_state": {
                    "doc_type": "CfgState", 
                    "py_type": "CfgState", 
                    "name": "ldr_state", 
                    "required": "False", 
                    "ref_type": "CfgState", 
                    "description": []
                }
            }
        }, 
        "GslbConsistencyChecker": {
            "name": "GslbConsistencyChecker", 
            "properties": {
                "info": {
                    "doc_type": "GslbInfo", 
                    "py_type": "list", 
                    "name": "info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbInfo", 
                    "description": []
                }
            }
        }, 
        "GslbApplicationPersistenceProfileRuntime": {
            "name": "GslbApplicationPersistenceProfileRuntime", 
            "properties": {
                "flr_state": {
                    "doc_type": "CfgState", 
                    "py_type": "list", 
                    "name": "flr_state", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CfgState", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "ldr_state": {
                    "doc_type": "CfgState", 
                    "py_type": "CfgState", 
                    "name": "ldr_state", 
                    "required": "False", 
                    "ref_type": "CfgState", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "GslbThirdPartySiteRuntime": {
            "name": "GslbThirdPartySiteRuntime", 
            "properties": {
                "site_info": {
                    "doc_type": "GslbSiteRuntimeInfo", 
                    "py_type": "GslbSiteRuntimeInfo", 
                    "name": "site_info", 
                    "required": "False", 
                    "ref_type": "GslbSiteRuntimeInfo", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "GslbDnsGsStatus": {
            "name": "GslbDnsGsStatus", 
            "properties": {
                "partial_update_threshold": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "partial_update_threshold", 
                    "required": "False", 
                    "description": [
                        "Threshold after which a full gs status is sent.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "last_changed_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_changed_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "GslbSiteRuntime": {
            "name": "GslbSiteRuntime", 
            "properties": {
                "site_info": {
                    "doc_type": "GslbSiteRuntimeInfo", 
                    "py_type": "GslbSiteRuntimeInfo", 
                    "name": "site_info", 
                    "required": "False", 
                    "ref_type": "GslbSiteRuntimeInfo", 
                    "description": []
                }, 
                "rxed_site_hs": {
                    "doc_type": "GslbSiteHealthStatus", 
                    "py_type": "GslbSiteHealthStatus", 
                    "name": "rxed_site_hs", 
                    "required": "False", 
                    "ref_type": "GslbSiteHealthStatus", 
                    "description": []
                }, 
                "site_cfg": {
                    "doc_type": "GslbSiteRuntimeCfg", 
                    "py_type": "GslbSiteRuntimeCfg", 
                    "name": "site_cfg", 
                    "required": "False", 
                    "ref_type": "GslbSiteRuntimeCfg", 
                    "description": []
                }, 
                "site_stats": {
                    "doc_type": "GslbSiteRuntimeStats", 
                    "py_type": "GslbSiteRuntimeStats", 
                    "name": "site_stats", 
                    "required": "False", 
                    "ref_type": "GslbSiteRuntimeStats", 
                    "description": []
                }
            }
        }, 
        "GslbDnsInfo": {
            "name": "GslbDnsInfo", 
            "properties": {
                "se_table": {
                    "doc_type": "GslbDnsSeInfo", 
                    "py_type": "list", 
                    "name": "se_table", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbDnsSeInfo", 
                    "description": [
                        "This tables holds all the se-related info across all dns-vs(es).", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "gs_status": {
                    "doc_type": "GslbDnsGsStatus", 
                    "py_type": "GslbDnsGsStatus", 
                    "name": "gs_status", 
                    "required": "False", 
                    "ref_type": "GslbDnsGsStatus", 
                    "description": [
                        "This field encapsulates the gs-status edge-triggered framework.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "dns_vs_states": {
                    "doc_type": "GslbPerDnsState", 
                    "py_type": "list", 
                    "name": "dns_vs_states", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbPerDnsState", 
                    "description": []
                }
            }
        }
    }, 
    "license": {
        "ControllerLicense": {
            "name": "ControllerLicense", 
            "properties": {
                "licenses": {
                    "doc_type": "SingleLicense", 
                    "py_type": "list", 
                    "name": "licenses", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SingleLicense", 
                    "description": []
                }
            }
        }
    }, 
    "content_rewrite_profile": {
        "MatchReplacePair": {
            "name": "MatchReplacePair", 
            "properties": {
                "replacement_string": {
                    "doc_type": "ReplaceStringVar", 
                    "py_type": "ReplaceStringVar", 
                    "name": "replacement_string", 
                    "required": "False", 
                    "ref_type": "ReplaceStringVar", 
                    "description": [
                        "Replacement string."
                    ]
                }
            }
        }, 
        "ContentRewriteProfile": {
            "name": "ContentRewriteProfile", 
            "properties": {
                "response_rewrite_enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "response_rewrite_enabled", 
                    "required": "False", 
                    "description": [
                        "Enable rewrite on response body."
                    ]
                }, 
                "request_rewrite_enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "request_rewrite_enabled", 
                    "required": "False", 
                    "description": [
                        "Enable rewrite on request body."
                    ]
                }, 
                "req_match_replace_pair": {
                    "doc_type": "MatchReplacePair", 
                    "py_type": "list", 
                    "name": "req_match_replace_pair", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MatchReplacePair", 
                    "description": [
                        "Strings to be matched and replaced with on the request body."
                    ]
                }, 
                "rsp_match_replace_pair": {
                    "doc_type": "MatchReplacePair", 
                    "py_type": "list", 
                    "name": "rsp_match_replace_pair", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MatchReplacePair", 
                    "description": [
                        "Strings to be matched and replaced with on the response body."
                    ]
                }
            }
        }
    }, 
    "cloud_properties": {
        "CloudInfo": {
            "name": "CloudInfo", 
            "properties": {
                "flavor_props": {
                    "doc_type": "CloudFlavor", 
                    "py_type": "list", 
                    "name": "flavor_props", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CloudFlavor", 
                    "description": [
                        "Flavor properties specific to this cloud type."
                    ]
                }, 
                "cca_props": {
                    "doc_type": "CC_AgentProperties", 
                    "py_type": "CC_AgentProperties", 
                    "name": "cca_props", 
                    "required": "False", 
                    "ref_type": "CC_AgentProperties", 
                    "description": [
                        "Cloudconnectoragent properties specific to this cloud type."
                    ]
                }, 
                "controller_props": {
                    "doc_type": "ControllerProperties", 
                    "py_type": "ControllerProperties", 
                    "name": "controller_props", 
                    "required": "False", 
                    "ref_type": "ControllerProperties", 
                    "description": [
                        "Controller properties specific to this cloud type."
                    ]
                }
            }
        }, 
        "CC_Properties": {
            "name": "CC_Properties", 
            "properties": {
                "rpc_queue_size": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "rpc_queue_size", 
                    "required": "False", 
                    "description": []
                }, 
                "rpc_poll_interval": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "rpc_poll_interval", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "CloudFlavor": {
            "name": "CloudFlavor", 
            "properties": {
                "meta": {
                    "doc_type": "CloudMeta", 
                    "py_type": "list", 
                    "name": "meta", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CloudMeta", 
                    "description": []
                }, 
                "public": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "public", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "CC_AgentProperties": {
            "name": "CC_AgentProperties", 
            "properties": {
                "vnic_retries_delay": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vnic_retries_delay", 
                    "required": "False", 
                    "description": [
                        "Delay between each vnic status poll check."
                    ]
                }, 
                "async_retries_delay": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "async_retries_delay", 
                    "required": "False", 
                    "description": [
                        "Delay between each async job status poll check."
                    ]
                }, 
                "vnic_retries": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vnic_retries", 
                    "required": "False", 
                    "description": [
                        "Maximum polls to check for vnics to be attached to vm."
                    ]
                }, 
                "poll_duration_target": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "poll_duration_target", 
                    "required": "False", 
                    "description": [
                        "Discovery poll target duration; a scale factor of 1+ is computed with the actual discovery (actual/target) and used to tweak slow and fast poll", 
                        "intervals."
                    ]
                }, 
                "poll_slow_target": {
                    "default_value": 240, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "poll_slow_target", 
                    "required": "False", 
                    "description": [
                        "Slow poll interval."
                    ]
                }, 
                "poll_fast_target": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "poll_fast_target", 
                    "required": "False", 
                    "description": [
                        "Fast poll interval."
                    ]
                }, 
                "async_retries": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "async_retries", 
                    "required": "False", 
                    "description": [
                        "Maximum polls to check for async jobs to finish."
                    ]
                }
            }
        }, 
        "CloudProperties": {
            "name": "CloudProperties", 
            "properties": {
                "info": {
                    "doc_type": "CloudInfo", 
                    "py_type": "list", 
                    "name": "info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CloudInfo", 
                    "description": [
                        "Properties specific to a cloud type."
                    ]
                }, 
                "hyp_props": {
                    "doc_type": "Hypervisor_Properties", 
                    "py_type": "list", 
                    "name": "hyp_props", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Hypervisor_Properties", 
                    "description": [
                        "Hypervisor properties."
                    ]
                }, 
                "cc_props": {
                    "doc_type": "CC_Properties", 
                    "py_type": "CC_Properties", 
                    "name": "cc_props", 
                    "required": "False", 
                    "ref_type": "CC_Properties", 
                    "description": [
                        "Cloudconnector properties."
                    ]
                }
            }
        }
    }, 
    "application_persistence_profile": {
        "ApplicationPersistenceProfile": {
            "name": "ApplicationPersistenceProfile", 
            "properties": {
                "app_cookie_persistence_profile": {
                    "doc_type": "AppCookiePersistenceProfile", 
                    "py_type": "AppCookiePersistenceProfile", 
                    "name": "app_cookie_persistence_profile", 
                    "required": "False", 
                    "ref_type": "AppCookiePersistenceProfile", 
                    "description": [
                        "Specifies the application cookie persistence profile parameters."
                    ]
                }, 
                "persistence_type": {
                    "default_value": "PERSISTENCE_TYPE_CLIENT_IP_ADDRESS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "persistence_type", 
                    "required": "True", 
                    "option_values": [
                        "PERSISTENCE_TYPE_CLIENT_IP_ADDRESS", 
                        "PERSISTENCE_TYPE_HTTP_COOKIE", 
                        "PERSISTENCE_TYPE_TLS", 
                        "PERSISTENCE_TYPE_CLIENT_IPV6_ADDRESS", 
                        "PERSISTENCE_TYPE_CUSTOM_HTTP_HEADER", 
                        "PERSISTENCE_TYPE_APP_COOKIE", 
                        "PERSISTENCE_TYPE_GSLB_SITE"
                    ], 
                    "description": [
                        "Method used to persist clients to the same server for a duration of time or a session.", 
                        "Enum options - PERSISTENCE_TYPE_CLIENT_IP_ADDRESS, PERSISTENCE_TYPE_HTTP_COOKIE, PERSISTENCE_TYPE_TLS, PERSISTENCE_TYPE_CLIENT_IPV6_ADDRESS,", 
                        "PERSISTENCE_TYPE_CUSTOM_HTTP_HEADER, PERSISTENCE_TYPE_APP_COOKIE, PERSISTENCE_TYPE_GSLB_SITE."
                    ]
                }, 
                "server_hm_down_recovery": {
                    "default_value": "HM_DOWN_PICK_NEW_SERVER", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "server_hm_down_recovery", 
                    "required": "False", 
                    "option_values": [
                        "HM_DOWN_PICK_NEW_SERVER", 
                        "HM_DOWN_ABORT_CONNECTION", 
                        "HM_DOWN_CONTINUE_PERSISTENT_SERVER"
                    ], 
                    "description": [
                        "Specifies behavior when a persistent server has been marked down by a health monitor.", 
                        "Enum options - HM_DOWN_PICK_NEW_SERVER, HM_DOWN_ABORT_CONNECTION, HM_DOWN_CONTINUE_PERSISTENT_SERVER."
                    ]
                }, 
                "is_federated": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_federated", 
                    "required": "False", 
                    "description": [
                        "This field describes the object's replication scope.", 
                        "If the field is set to false, then the object is visible within the controller-cluster and its associated service-engines.", 
                        "If the field is set to true, then the object is replicated across the federation.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "http_cookie_persistence_profile": {
                    "doc_type": "HttpCookiePersistenceProfile", 
                    "py_type": "HttpCookiePersistenceProfile", 
                    "name": "http_cookie_persistence_profile", 
                    "required": "False", 
                    "ref_type": "HttpCookiePersistenceProfile", 
                    "description": [
                        "Specifies the http cookie persistence profile parameters."
                    ]
                }, 
                "ip_persistence_profile": {
                    "doc_type": "IPPersistenceProfile", 
                    "py_type": "IPPersistenceProfile", 
                    "name": "ip_persistence_profile", 
                    "required": "False", 
                    "ref_type": "IPPersistenceProfile", 
                    "description": [
                        "Specifies the client ip persistence profile parameters."
                    ]
                }, 
                "hdr_persistence_profile": {
                    "doc_type": "HdrPersistenceProfile", 
                    "py_type": "HdrPersistenceProfile", 
                    "name": "hdr_persistence_profile", 
                    "required": "False", 
                    "ref_type": "HdrPersistenceProfile", 
                    "description": [
                        "Specifies the custom http header persistence profile parameters."
                    ]
                }
            }
        }, 
        "AppCookiePersistenceProfile": {
            "name": "AppCookiePersistenceProfile", 
            "properties": {
                "timeout": {
                    "default_value": 20, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "timeout", 
                    "required": "False", 
                    "range": "1-720", 
                    "description": [
                        "The length of time after a client's connections have closed before expiring the client's persistence to a server.", 
                        "Allowed values are 1-720."
                    ]
                }
            }
        }, 
        "HttpCookiePersistenceProfile": {
            "name": "HttpCookiePersistenceProfile", 
            "properties": {
                "always_send_cookie": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "always_send_cookie", 
                    "required": "False", 
                    "description": [
                        "If no persistence cookie was received from the client, always send it."
                    ]
                }, 
                "timeout": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "timeout", 
                    "required": "False", 
                    "range": "1-14400", 
                    "special_values": [
                        "'No Timeout'"
                    ], 
                    "description": [
                        "The length of time after a client's connections have closed before expiring the client's persistence to a server.", 
                        "No value or 'zero' indicates no timeout.", 
                        "Allowed values are 1-14400.", 
                        "Special values are 0- 'no timeout'."
                    ]
                }, 
                "key": {
                    "doc_type": "HttpCookiePersistenceKey", 
                    "py_type": "list", 
                    "name": "key", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HttpCookiePersistenceKey", 
                    "description": []
                }
            }
        }, 
        "IPPersistenceProfile": {
            "name": "IPPersistenceProfile", 
            "properties": {
                "ip_persistent_timeout": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ip_persistent_timeout", 
                    "required": "False", 
                    "range": "1-720", 
                    "description": [
                        "The length of time after a client's connections have closed before expiring the client's persistence to a server.", 
                        "Allowed values are 1-720."
                    ]
                }
            }
        }
    }, 
    "anomalyzer": {
        "AnomalyEventDetails": {
            "name": "AnomalyEventDetails", 
            "properties": {
                "deviation": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "deviation", 
                    "required": "False", 
                    "description": []
                }, 
                "model": {
                    "default_value": "EXPONENTIAL_WEIGHTED_MOVING_AVG", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "model", 
                    "required": "False", 
                    "option_values": [
                        "EXPONENTIAL_MOVING_AVG", 
                        "EXPONENTIAL_WEIGHTED_MOVING_AVG", 
                        "HOLTWINTERS_AT_AS", 
                        "HOLTWINTERS_AT_MS"
                    ], 
                    "description": [
                        "Deprecated.", 
                        "Enum options - EXPONENTIAL_MOVING_AVG, EXPONENTIAL_WEIGHTED_MOVING_AVG, HOLTWINTERS_AT_AS, HOLTWINTERS_AT_MS."
                    ]
                }
            }
        }
    }, 
    "se_runtime": {
        "ServiceEngineRuntimeSummary": {
            "name": "ServiceEngineRuntimeSummary", 
            "properties": {
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "version": {
                    "default_value": "0.0.0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "version", 
                    "required": "False", 
                    "description": []
                }, 
                "migrate_state": {
                    "default_value": "SE_MIGRATE_STATE_IDLE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "migrate_state", 
                    "required": "False", 
                    "option_values": [
                        "SE_MIGRATE_STATE_IDLE", 
                        "SE_MIGRATE_STATE_STARTED", 
                        "SE_MIGRATE_STATE_FINISHED_WITH_FAILURE", 
                        "SE_MIGRATE_STATE_FINISHED"
                    ], 
                    "description": [
                        "This state is used to indicate the current state of disable se process.", 
                        "Enum options - SE_MIGRATE_STATE_IDLE, SE_MIGRATE_STATE_STARTED, SE_MIGRATE_STATE_FINISHED_WITH_FAILURE, SE_MIGRATE_STATE_FINISHED.", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "hb_status": {
                    "doc_type": "SeHbStatus", 
                    "py_type": "SeHbStatus", 
                    "name": "hb_status", 
                    "required": "False", 
                    "ref_type": "SeHbStatus", 
                    "description": []
                }
            }
        }, 
        "ServiceEngineRuntime": {
            "name": "ServiceEngineRuntime", 
            "properties": {
                "vnic": {
                    "doc_type": "VnicRuntime", 
                    "py_type": "list", 
                    "name": "vnic", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VnicRuntime", 
                    "description": []
                }, 
                "prev_se_connected": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "prev_se_connected", 
                    "required": "False", 
                    "description": []
                }, 
                "migrate_state": {
                    "default_value": "SE_MIGRATE_STATE_IDLE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "migrate_state", 
                    "required": "False", 
                    "option_values": [
                        "SE_MIGRATE_STATE_IDLE", 
                        "SE_MIGRATE_STATE_STARTED", 
                        "SE_MIGRATE_STATE_FINISHED_WITH_FAILURE", 
                        "SE_MIGRATE_STATE_FINISHED"
                    ], 
                    "description": [
                        "Enum options - SE_MIGRATE_STATE_IDLE, SE_MIGRATE_STATE_STARTED, SE_MIGRATE_STATE_FINISHED_WITH_FAILURE, SE_MIGRATE_STATE_FINISHED."
                    ]
                }, 
                "state_name": {
                    "default_value": "SeMgrFsmMap::Inactive", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "state_name", 
                    "required": "False", 
                    "description": []
                }, 
                "consumers": {
                    "doc_type": "ConInfo", 
                    "py_type": "list", 
                    "name": "consumers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ConInfo", 
                    "description": []
                }, 
                "inband_mgmt": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "inband_mgmt", 
                    "required": "False", 
                    "description": [
                        "Indicates if this se has an inband management interface i.e.", 
                        "The management interface se uses to talk to the controller is also used for datapath traffic."
                    ]
                }, 
                "se_connected": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "se_connected", 
                    "required": "False", 
                    "description": []
                }, 
                "migrate_timestamp": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "migrate_timestamp", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "gcp_info": {
                    "doc_type": "GcpInfo", 
                    "py_type": "GcpInfo", 
                    "name": "gcp_info", 
                    "required": "False", 
                    "ref_type": "GcpInfo", 
                    "description": [
                        "Google cloud info for this se instance."
                    ]
                }, 
                "hb_status": {
                    "doc_type": "SeHbStatus", 
                    "py_type": "SeHbStatus", 
                    "name": "hb_status", 
                    "required": "False", 
                    "ref_type": "SeHbStatus", 
                    "description": []
                }, 
                "gateway_up": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "gateway_up", 
                    "required": "False", 
                    "description": [
                        "Indicates if se is able to connect to gateway."
                    ]
                }, 
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "version": {
                    "default_value": "0.0.0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "version", 
                    "required": "False", 
                    "description": []
                }, 
                "vinfra_discovered": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "vinfra_discovered", 
                    "required": "False", 
                    "description": []
                }, 
                "power_state": {
                    "default_value": "SE_POWER_ON", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "power_state", 
                    "required": "False", 
                    "option_values": [
                        "SE_POWER_OFF", 
                        "SE_POWER_ON", 
                        "SE_SUSPENDED"
                    ], 
                    "description": [
                        "Enum options - SE_POWER_OFF, SE_POWER_ON, SE_SUSPENDED."
                    ]
                }, 
                "creation_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "creation_in_progress", 
                    "required": "False", 
                    "description": []
                }, 
                "counters": {
                    "doc_type": "ServiceEngineCounters", 
                    "py_type": "ServiceEngineCounters", 
                    "name": "counters", 
                    "required": "False", 
                    "ref_type": "ServiceEngineCounters", 
                    "description": []
                }, 
                "at_curr_ver": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "at_curr_ver", 
                    "required": "False", 
                    "description": []
                }, 
                "owned_by_controller": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "owned_by_controller", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VnicRuntime": {
            "name": "VnicRuntime", 
            "properties": {
                "is_portchannel": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_portchannel", 
                    "required": "False", 
                    "description": []
                }, 
                "is_hsm": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_hsm", 
                    "required": "False", 
                    "description": []
                }, 
                "is_avi_internal_network": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_avi_internal_network", 
                    "required": "False", 
                    "description": []
                }, 
                "present_in_se": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "present_in_se", 
                    "required": "False", 
                    "description": []
                }, 
                "mtu": {
                    "default_value": 1500, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "mtu", 
                    "required": "False", 
                    "description": []
                }, 
                "is_mgmt": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_mgmt", 
                    "required": "False", 
                    "description": []
                }, 
                "vnic_networks": {
                    "doc_type": "vNICNetwork", 
                    "py_type": "list", 
                    "name": "vnic_networks", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "vNICNetwork", 
                    "description": []
                }, 
                "present_in_vinfra": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "present_in_vinfra", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "ServiceEngineRuntimeDetail": {
            "name": "ServiceEngineRuntimeDetail", 
            "properties": {
                "vnic": {
                    "doc_type": "VnicRuntime", 
                    "py_type": "list", 
                    "name": "vnic", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VnicRuntime", 
                    "description": []
                }, 
                "migrate_state": {
                    "default_value": "SE_MIGRATE_STATE_IDLE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "migrate_state", 
                    "required": "False", 
                    "option_values": [
                        "SE_MIGRATE_STATE_IDLE", 
                        "SE_MIGRATE_STATE_STARTED", 
                        "SE_MIGRATE_STATE_FINISHED_WITH_FAILURE", 
                        "SE_MIGRATE_STATE_FINISHED"
                    ], 
                    "description": [
                        "This state is used to indicate the current state of disable se process.", 
                        "Enum options - SE_MIGRATE_STATE_IDLE, SE_MIGRATE_STATE_STARTED, SE_MIGRATE_STATE_FINISHED_WITH_FAILURE, SE_MIGRATE_STATE_FINISHED.", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "hb_status": {
                    "doc_type": "SeHbStatus", 
                    "py_type": "SeHbStatus", 
                    "name": "hb_status", 
                    "required": "False", 
                    "ref_type": "SeHbStatus", 
                    "description": []
                }, 
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "version": {
                    "default_value": "0.0.0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "version", 
                    "required": "False", 
                    "description": []
                }, 
                "resources": {
                    "doc_type": "SeResources", 
                    "py_type": "SeResources", 
                    "name": "resources", 
                    "required": "False", 
                    "ref_type": "SeResources", 
                    "description": []
                }, 
                "counters": {
                    "doc_type": "ServiceEngineCounters", 
                    "py_type": "ServiceEngineCounters", 
                    "name": "counters", 
                    "required": "False", 
                    "ref_type": "ServiceEngineCounters", 
                    "description": []
                }
            }
        }, 
        "ServiceEngineStateDBCacheSummary": {
            "name": "ServiceEngineStateDBCacheSummary", 
            "properties": {
                "summary": {
                    "doc_type": "ServiceEngineRuntimeSummary", 
                    "py_type": "ServiceEngineRuntimeSummary", 
                    "name": "summary", 
                    "required": "False", 
                    "ref_type": "ServiceEngineRuntimeSummary", 
                    "description": []
                }
            }
        }, 
        "ServiceEngineCounters": {
            "name": "ServiceEngineCounters", 
            "properties": {
                "se_down_cnt": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_down_cnt", 
                    "required": "False", 
                    "description": []
                }, 
                "reg_fail_cnt": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "reg_fail_cnt", 
                    "required": "False", 
                    "description": []
                }, 
                "se_up_cnt": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_up_cnt", 
                    "required": "False", 
                    "description": []
                }, 
                "reg_cnt": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "reg_cnt", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SeGatewayMonitorReq": {
            "name": "SeGatewayMonitorReq", 
            "properties": {
                "gateway_up": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "gateway_up", 
                    "required": "False", 
                    "description": [
                        "Indicates if se is able to connect to gateway."
                    ]
                }
            }
        }
    }, 
    "action": {
        "HTTPRedirectAction": {
            "name": "HTTPRedirectAction", 
            "properties": {
                "keep_query": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "keep_query", 
                    "required": "False", 
                    "description": [
                        "Keep or drop the query of the incoming request uri in the redirected uri."
                    ]
                }, 
                "path": {
                    "doc_type": "URIParam", 
                    "py_type": "URIParam", 
                    "name": "path", 
                    "required": "False", 
                    "ref_type": "URIParam", 
                    "description": [
                        "Path config."
                    ]
                }, 
                "host": {
                    "doc_type": "URIParam", 
                    "py_type": "URIParam", 
                    "name": "host", 
                    "required": "False", 
                    "ref_type": "URIParam", 
                    "description": [
                        "Host config."
                    ]
                }, 
                "port": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "port", 
                    "required": "False", 
                    "range": "1-65535", 
                    "description": [
                        "Port to which redirect the request.", 
                        "Allowed values are 1-65535."
                    ]
                }, 
                "status_code": {
                    "default_value": "HTTP_REDIRECT_STATUS_CODE_302", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "status_code", 
                    "required": "False", 
                    "option_values": [
                        "HTTP_REDIRECT_STATUS_CODE_301", 
                        "HTTP_REDIRECT_STATUS_CODE_302", 
                        "HTTP_REDIRECT_STATUS_CODE_307"
                    ], 
                    "description": [
                        "Http redirect status code.", 
                        "Enum options - HTTP_REDIRECT_STATUS_CODE_301, HTTP_REDIRECT_STATUS_CODE_302, HTTP_REDIRECT_STATUS_CODE_307."
                    ]
                }
            }
        }, 
        "HTTPRewriteURLAction": {
            "name": "HTTPRewriteURLAction", 
            "properties": {
                "host_hdr": {
                    "doc_type": "URIParam", 
                    "py_type": "URIParam", 
                    "name": "host_hdr", 
                    "required": "False", 
                    "ref_type": "URIParam", 
                    "description": [
                        "Host config."
                    ]
                }, 
                "query": {
                    "doc_type": "URIParamQuery", 
                    "py_type": "URIParamQuery", 
                    "name": "query", 
                    "required": "False", 
                    "ref_type": "URIParamQuery", 
                    "description": [
                        "Query config."
                    ]
                }, 
                "path": {
                    "doc_type": "URIParam", 
                    "py_type": "URIParam", 
                    "name": "path", 
                    "required": "False", 
                    "ref_type": "URIParam", 
                    "description": [
                        "Path config."
                    ]
                }
            }
        }, 
        "URIParam": {
            "name": "URIParam", 
            "properties": {
                "tokens": {
                    "doc_type": "URIParamToken", 
                    "py_type": "list", 
                    "name": "tokens", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "URIParamToken", 
                    "description": [
                        "Token config either for the uri components or a constant string."
                    ]
                }
            }
        }, 
        "HTTPSwitchingAction": {
            "name": "HTTPSwitchingAction", 
            "properties": {
                "file": {
                    "doc_type": "HTTPLocalFile", 
                    "py_type": "HTTPLocalFile", 
                    "name": "file", 
                    "required": "False", 
                    "ref_type": "HTTPLocalFile", 
                    "description": [
                        "File from which to serve local response to the request."
                    ]
                }, 
                "server": {
                    "doc_type": "PoolServer", 
                    "py_type": "PoolServer", 
                    "name": "server", 
                    "required": "False", 
                    "ref_type": "PoolServer", 
                    "description": [
                        "Specific pool server to select."
                    ]
                }
            }
        }, 
        "HTTPHdrAction": {
            "name": "HTTPHdrAction", 
            "properties": {
                "cookie": {
                    "doc_type": "HTTPCookieData", 
                    "py_type": "HTTPCookieData", 
                    "name": "cookie", 
                    "required": "False", 
                    "ref_type": "HTTPCookieData", 
                    "description": [
                        "Cookie information."
                    ]
                }, 
                "hdr": {
                    "doc_type": "HTTPHdrData", 
                    "py_type": "HTTPHdrData", 
                    "name": "hdr", 
                    "required": "False", 
                    "ref_type": "HTTPHdrData", 
                    "description": [
                        "Http header information."
                    ]
                }
            }
        }, 
        "HTTPRewriteLocHdrAction": {
            "name": "HTTPRewriteLocHdrAction", 
            "properties": {
                "keep_query": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "keep_query", 
                    "required": "False", 
                    "description": [
                        "Keep or drop the query from the server side redirect uri."
                    ]
                }, 
                "path": {
                    "doc_type": "URIParam", 
                    "py_type": "URIParam", 
                    "name": "path", 
                    "required": "False", 
                    "ref_type": "URIParam", 
                    "description": [
                        "Path config."
                    ]
                }, 
                "host": {
                    "doc_type": "URIParam", 
                    "py_type": "URIParam", 
                    "name": "host", 
                    "required": "False", 
                    "ref_type": "URIParam", 
                    "description": [
                        "Host config."
                    ]
                }, 
                "port": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "port", 
                    "required": "False", 
                    "range": "1-65535", 
                    "description": [
                        "Port to use in the redirected uri.", 
                        "Allowed values are 1-65535."
                    ]
                }
            }
        }, 
        "URIParamToken": {
            "name": "URIParamToken", 
            "properties": {
                "end_index": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "end_index", 
                    "required": "False", 
                    "range": "0-65534", 
                    "special_values": [
                        "'end of string'"
                    ], 
                    "description": [
                        "Index of the ending token in the incoming uri.", 
                        "Allowed values are 0-65534.", 
                        "Special values are 65535 - 'end of string'."
                    ]
                }
            }
        }, 
        "PoolServer": {
            "name": "PoolServer", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address of the server in the poool."
                    ]
                }, 
                "port": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "port", 
                    "required": "False", 
                    "range": "1-65535", 
                    "description": [
                        "Port of the pool server listening for http/https.", 
                        "Default value is the default port in the pool.", 
                        "Allowed values are 1-65535."
                    ]
                }
            }
        }, 
        "HTTPHdrData": {
            "name": "HTTPHdrData", 
            "properties": {
                "value": {
                    "doc_type": "HTTPHdrValue", 
                    "py_type": "HTTPHdrValue", 
                    "name": "value", 
                    "required": "False", 
                    "ref_type": "HTTPHdrValue", 
                    "description": [
                        "Http header value."
                    ]
                }
            }
        }, 
        "URIParamQuery": {
            "name": "URIParamQuery", 
            "properties": {
                "keep_query": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "keep_query", 
                    "required": "False", 
                    "description": [
                        "Use or drop the query of the incoming request uri in the request uri to the backend server."
                    ]
                }
            }
        }
    }, 
    "se_agent_runtime": {
        "SeAgentVrfRuntime": {
            "name": "SeAgentVrfRuntime", 
            "properties": {
                "vnic": {
                    "doc_type": "SeAgentVnicRuntime", 
                    "py_type": "list", 
                    "name": "vnic", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeAgentVnicRuntime", 
                    "description": []
                }, 
                "vrf_context": {
                    "doc_type": "VrfContext", 
                    "py_type": "VrfContext", 
                    "name": "vrf_context", 
                    "required": "True", 
                    "ref_type": "VrfContext", 
                    "description": []
                }, 
                "route": {
                    "doc_type": "SeAgentRoute", 
                    "py_type": "list", 
                    "name": "route", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeAgentRoute", 
                    "description": []
                }
            }
        }, 
        "SeAgentVnicNwRuntime": {
            "name": "SeAgentVnicNwRuntime", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "ip", 
                    "required": "True", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }
            }
        }, 
        "SeAgentVnicRuntime": {
            "name": "SeAgentVnicRuntime", 
            "properties": {
                "nw": {
                    "doc_type": "SeAgentVnicNwRuntime", 
                    "py_type": "list", 
                    "name": "nw", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeAgentVnicNwRuntime", 
                    "description": []
                }
            }
        }, 
        "SeAgentGraphDBNodeStats": {
            "name": "SeAgentGraphDBNodeStats", 
            "properties": {
                "delete_stats": {
                    "doc_type": "SeAgentGraphDBNodeTxnStats", 
                    "py_type": "SeAgentGraphDBNodeTxnStats", 
                    "name": "delete_stats", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeTxnStats", 
                    "description": []
                }, 
                "read_stats": {
                    "doc_type": "SeAgentGraphDBNodeTxnStats", 
                    "py_type": "SeAgentGraphDBNodeTxnStats", 
                    "name": "read_stats", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeTxnStats", 
                    "description": []
                }, 
                "update_stats": {
                    "doc_type": "SeAgentGraphDBNodeTxnStats", 
                    "py_type": "SeAgentGraphDBNodeTxnStats", 
                    "name": "update_stats", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeTxnStats", 
                    "description": []
                }
            }
        }, 
        "SeAgentGraphDBNodeObject": {
            "name": "SeAgentGraphDBNodeObject", 
            "properties": {
                "stats": {
                    "doc_type": "SeAgentGraphDBNodeStats", 
                    "py_type": "SeAgentGraphDBNodeStats", 
                    "name": "stats", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeStats", 
                    "description": []
                }, 
                "config": {
                    "doc_type": "SeAgentGraphDBNodeConfig", 
                    "py_type": "SeAgentGraphDBNodeConfig", 
                    "name": "config", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeConfig", 
                    "description": []
                }
            }
        }, 
        "SeAgentGraphDBRuntime": {
            "name": "SeAgentGraphDBRuntime", 
            "properties": {
                "total_obj_active": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "total_obj_active", 
                    "required": "False", 
                    "description": []
                }, 
                "virtualservice": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "virtualservice", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "serviceenginegroup": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "serviceenginegroup", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "ipaddrgroup": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "ipaddrgroup", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "vsdatascriptset": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "vsdatascriptset", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "total_obj_awaiting_dp": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "total_obj_awaiting_dp", 
                    "required": "False", 
                    "description": []
                }, 
                "httpresponsepolicy": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "httpresponsepolicy", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "gslb": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "gslb", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "cloud": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "cloud", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "networkprofile": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "networkprofile", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "total_obj_error": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "total_obj_error", 
                    "required": "False", 
                    "description": []
                }, 
                "httpsecuritypolicy": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "httpsecuritypolicy", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "analyticsprofile": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "analyticsprofile", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "sslprofile": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "sslprofile", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "gslbgeodbprofile": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "gslbgeodbprofile", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "pool": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "pool", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "graph_version": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "graph_version", 
                    "required": "False", 
                    "description": []
                }, 
                "total_obj_ew_subnet_error": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "total_obj_ew_subnet_error", 
                    "required": "False", 
                    "description": []
                }, 
                "sslkeyandcertificate": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "sslkeyandcertificate", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "gslbhealthmonitor": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "gslbhealthmonitor", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": [
                        "Field deprecated in 17.1.3."
                    ]
                }, 
                "gslbservice": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "gslbservice", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "networksecuritypolicy": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "networksecuritypolicy", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "stringgroup": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "stringgroup", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "tenant": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "tenant", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "applicationpersistenceprofile": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "applicationpersistenceprofile", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "total_obj": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "total_obj", 
                    "required": "True", 
                    "description": []
                }, 
                "httprequestpolicy": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "httprequestpolicy", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "applicationprofile": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "applicationprofile", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "microservice": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "microservice", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }, 
                "healthmonitor": {
                    "doc_type": "SeAgentGraphDBNodeInfo", 
                    "py_type": "SeAgentGraphDBNodeInfo", 
                    "name": "healthmonitor", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeInfo", 
                    "description": []
                }
            }
        }, 
        "SeAgentSharedDBStats": {
            "name": "SeAgentSharedDBStats", 
            "properties": {
                "dp_to_redis_set_exnx_err": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_set_exnx_err", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_config_set_kea_err_not_ok": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_config_set_kea_err_not_ok", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_del": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_del", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_select_db_err_not_ok": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_select_db_err_not_ok", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_pipeline_flush_err_not_ok": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_pipeline_flush_err_not_ok", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_get_err_not_ok": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_get_err_not_ok", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_scan_err_not_ok": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_scan_err_not_ok", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_config_get_port": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_config_get_port", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_get_all_keys_err": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_get_all_keys_err", 
                    "required": "False", 
                    "description": []
                }, 
                "from_redis_expired_delete": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "from_redis_expired_delete", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_config_set_kea": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_config_set_kea", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_pipeline_flush": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_pipeline_flush", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_sync_err": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_sync_err", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_sync": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_sync", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_scan_err": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_scan_err", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_config_get_port_err": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_config_get_port_err", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_scan_batch_size": {
                    "default_value": 1000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_scan_batch_size", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_set_ex_err": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_set_ex_err", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_get_val": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_get_val", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_scan_mget_val": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_scan_mget_val", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_del_err": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_del_err", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_all_keys_get_val_err": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_all_keys_get_val_err", 
                    "required": "False", 
                    "description": []
                }, 
                "from_redis_update": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "from_redis_update", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_get_val_err_not_conn": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_get_val_err_not_conn", 
                    "required": "False", 
                    "description": []
                }, 
                "from_redis_delete": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "from_redis_delete", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_config_get_port_err_not_conn": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_config_get_port_err_not_conn", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_set_exnx_err_not_ok": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_set_exnx_err_not_ok", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_get_val_err": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_get_val_err", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_scan_mget_val_err_not_ok": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_scan_mget_val_err_not_ok", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_all_keys_get_val_err_not_conn": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_all_keys_get_val_err_not_conn", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_get_val_err_not_ok": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_get_val_err_not_ok", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_flushdb_err": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_flushdb_err", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_get_err_not_conn": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_get_err_not_conn", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_select_db_err": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_select_db_err", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_sync_err_not_ok": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_sync_err_not_ok", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_get_all_keys": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_get_all_keys", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_all_keys_get_val_err_not_ok": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_all_keys_get_val_err_not_ok", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_get_all_keys_err_not_ok": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_get_all_keys_err_not_ok", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_flushdb_err_not_conn": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_flushdb_err_not_conn", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_pipeline_size": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_pipeline_size", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_select_db_err_not_conn": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_select_db_err_not_conn", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_select_db": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_select_db", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_flushdb": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_flushdb", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_set_exnx": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_set_exnx", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_config_set_kea_err": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_config_set_kea_err", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_scan_err_not_conn": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_scan_err_not_conn", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_del_err_not_ok": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_del_err_not_ok", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_get_all_keys_err_not_conn": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_get_all_keys_err_not_conn", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_config_get_port_err_not_ok": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_config_get_port_err_not_ok", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_all_keys_get_val": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_all_keys_get_val", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_set_exnx_err_not_conn": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_set_exnx_err_not_conn", 
                    "required": "False", 
                    "description": []
                }, 
                "from_redis_full_sync": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "from_redis_full_sync", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_flushdb_err_not_ok": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_flushdb_err_not_ok", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_set_ex_err_not_ok": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_set_ex_err_not_ok", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_set_ex": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_set_ex", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_scan_mget_val_err_not_conn": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_scan_mget_val_err_not_conn", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_config_set_kea_err_not_conn": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_config_set_kea_err_not_conn", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_get_err": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_get_err", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_sync_err_not_conn": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_sync_err_not_conn", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_scan_mget_val_err": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_scan_mget_val_err", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_del_err_not_conn": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_del_err_not_conn", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_get": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_get", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_scan": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_scan", 
                    "required": "False", 
                    "description": []
                }, 
                "to_redis_pipeline_flush_err": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "to_redis_pipeline_flush_err", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_to_redis_set_ex_err_not_conn": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_to_redis_set_ex_err_not_conn", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SeAgentStateRuntime": {
            "name": "SeAgentStateRuntime", 
            "properties": {
                "last_register_failed_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_register_failed_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "last_se_headless_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_se_headless_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "vs_redis_map": {
                    "doc_type": "VsRedisMap", 
                    "py_type": "list", 
                    "name": "vs_redis_map", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VsRedisMap", 
                    "description": []
                }, 
                "sdb_stats": {
                    "doc_type": "SeAgentSharedDBStats", 
                    "py_type": "list", 
                    "name": "sdb_stats", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeAgentSharedDBStats", 
                    "description": []
                }, 
                "last_register_success_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_register_success_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "last_se_ready_sent_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_se_ready_sent_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "last_heartbeat_recv_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_heartbeat_recv_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "last_se_online_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_se_online_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "last_heartbeat_miss_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_heartbeat_miss_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "last_vs_deleted_on_sync_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_vs_deleted_on_sync_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "last_register_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_register_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }
            }
        }, 
        "SeAgentGraphDBNodeInfo": {
            "name": "SeAgentGraphDBNodeInfo", 
            "properties": {
                "num_obj": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_obj", 
                    "required": "False", 
                    "description": []
                }, 
                "obj": {
                    "doc_type": "SeAgentGraphDBNodeObject", 
                    "py_type": "list", 
                    "name": "obj", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeAgentGraphDBNodeObject", 
                    "description": []
                }, 
                "num_obj_awaiting_dp": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_obj_awaiting_dp", 
                    "required": "False", 
                    "description": []
                }, 
                "num_obj_active": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_obj_active", 
                    "required": "False", 
                    "description": []
                }, 
                "num_obj_error": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_obj_error", 
                    "required": "False", 
                    "description": []
                }, 
                "num_obj_ew_subnet_error": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_obj_ew_subnet_error", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SeAgentGraphDBNodeConfig": {
            "name": "SeAgentGraphDBNodeConfig", 
            "properties": {
                "analytics_profile": {
                    "doc_type": "AnalyticsProfile", 
                    "py_type": "AnalyticsProfile", 
                    "name": "analytics_profile", 
                    "required": "False", 
                    "ref_type": "AnalyticsProfile", 
                    "description": []
                }, 
                "ssl_profile": {
                    "doc_type": "SSLProfile", 
                    "py_type": "SSLProfile", 
                    "name": "ssl_profile", 
                    "required": "False", 
                    "ref_type": "SSLProfile", 
                    "description": []
                }, 
                "serviceenginegroup": {
                    "doc_type": "ServiceEngineGroup", 
                    "py_type": "ServiceEngineGroup", 
                    "name": "serviceenginegroup", 
                    "required": "False", 
                    "ref_type": "ServiceEngineGroup", 
                    "description": []
                }, 
                "pool_group": {
                    "doc_type": "PoolGroup", 
                    "py_type": "PoolGroup", 
                    "name": "pool_group", 
                    "required": "False", 
                    "ref_type": "PoolGroup", 
                    "description": []
                }, 
                "microservice": {
                    "doc_type": "MicroService", 
                    "py_type": "MicroService", 
                    "name": "microservice", 
                    "required": "False", 
                    "ref_type": "MicroService", 
                    "description": []
                }, 
                "gslb": {
                    "doc_type": "Gslb", 
                    "py_type": "Gslb", 
                    "name": "gslb", 
                    "required": "False", 
                    "ref_type": "Gslb", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "cloud": {
                    "doc_type": "Cloud", 
                    "py_type": "Cloud", 
                    "name": "cloud", 
                    "required": "False", 
                    "ref_type": "Cloud", 
                    "description": []
                }, 
                "health_monitor": {
                    "doc_type": "HealthMonitor", 
                    "py_type": "HealthMonitor", 
                    "name": "health_monitor", 
                    "required": "False", 
                    "ref_type": "HealthMonitor", 
                    "description": []
                }, 
                "ip_addr_group": {
                    "doc_type": "IpAddrGroup", 
                    "py_type": "IpAddrGroup", 
                    "name": "ip_addr_group", 
                    "required": "False", 
                    "ref_type": "IpAddrGroup", 
                    "description": []
                }, 
                "http_security_policy": {
                    "doc_type": "HTTPSecurityPolicy", 
                    "py_type": "HTTPSecurityPolicy", 
                    "name": "http_security_policy", 
                    "required": "False", 
                    "ref_type": "HTTPSecurityPolicy", 
                    "description": []
                }, 
                "network_profile": {
                    "doc_type": "NetworkProfile", 
                    "py_type": "NetworkProfile", 
                    "name": "network_profile", 
                    "required": "False", 
                    "ref_type": "NetworkProfile", 
                    "description": []
                }, 
                "gslbgeodbprofile": {
                    "doc_type": "GslbGeoDbProfile", 
                    "py_type": "GslbGeoDbProfile", 
                    "name": "gslbgeodbprofile", 
                    "required": "False", 
                    "ref_type": "GslbGeoDbProfile", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "pool": {
                    "doc_type": "Pool", 
                    "py_type": "Pool", 
                    "name": "pool", 
                    "required": "False", 
                    "ref_type": "Pool", 
                    "description": []
                }, 
                "http_request_policy": {
                    "doc_type": "HTTPRequestPolicy", 
                    "py_type": "HTTPRequestPolicy", 
                    "name": "http_request_policy", 
                    "required": "False", 
                    "ref_type": "HTTPRequestPolicy", 
                    "description": []
                }, 
                "vs_data_script": {
                    "doc_type": "VSDataScriptSet", 
                    "py_type": "VSDataScriptSet", 
                    "name": "vs_data_script", 
                    "required": "False", 
                    "ref_type": "VSDataScriptSet", 
                    "description": []
                }, 
                "network_security_policy": {
                    "doc_type": "NetworkSecurityPolicy", 
                    "py_type": "NetworkSecurityPolicy", 
                    "name": "network_security_policy", 
                    "required": "False", 
                    "ref_type": "NetworkSecurityPolicy", 
                    "description": []
                }, 
                "gslbservice": {
                    "doc_type": "GslbService", 
                    "py_type": "GslbService", 
                    "name": "gslbservice", 
                    "required": "False", 
                    "ref_type": "GslbService", 
                    "description": []
                }, 
                "application_persistence_profile": {
                    "doc_type": "ApplicationPersistenceProfile", 
                    "py_type": "ApplicationPersistenceProfile", 
                    "name": "application_persistence_profile", 
                    "required": "False", 
                    "ref_type": "ApplicationPersistenceProfile", 
                    "description": []
                }, 
                "tenant": {
                    "doc_type": "Tenant", 
                    "py_type": "Tenant", 
                    "name": "tenant", 
                    "required": "False", 
                    "ref_type": "Tenant", 
                    "description": []
                }, 
                "application_profile": {
                    "doc_type": "ApplicationProfile", 
                    "py_type": "ApplicationProfile", 
                    "name": "application_profile", 
                    "required": "False", 
                    "ref_type": "ApplicationProfile", 
                    "description": []
                }, 
                "string_group": {
                    "doc_type": "StringGroup", 
                    "py_type": "StringGroup", 
                    "name": "string_group", 
                    "required": "False", 
                    "ref_type": "StringGroup", 
                    "description": []
                }, 
                "ssl_key_and_certificate": {
                    "doc_type": "SSLKeyAndCertificate", 
                    "py_type": "SSLKeyAndCertificate", 
                    "name": "ssl_key_and_certificate", 
                    "required": "False", 
                    "ref_type": "SSLKeyAndCertificate", 
                    "description": []
                }, 
                "priority_labels": {
                    "doc_type": "PriorityLabels", 
                    "py_type": "PriorityLabels", 
                    "name": "priority_labels", 
                    "required": "False", 
                    "ref_type": "PriorityLabels", 
                    "description": []
                }, 
                "http_response_policy": {
                    "doc_type": "HTTPResponsePolicy", 
                    "py_type": "HTTPResponsePolicy", 
                    "name": "http_response_policy", 
                    "required": "False", 
                    "ref_type": "HTTPResponsePolicy", 
                    "description": []
                }, 
                "virtual_service_se": {
                    "doc_type": "VirtualServiceSe", 
                    "py_type": "VirtualServiceSe", 
                    "name": "virtual_service_se", 
                    "required": "False", 
                    "ref_type": "VirtualServiceSe", 
                    "description": []
                }
            }
        }, 
        "SeAgentGraphDBNodeTxnStats": {
            "name": "SeAgentGraphDBNodeTxnStats", 
            "properties": {
                "longest_txn": {
                    "doc_type": "SeAgentGraphDBNodeTxnDetail", 
                    "py_type": "SeAgentGraphDBNodeTxnDetail", 
                    "name": "longest_txn", 
                    "required": "False", 
                    "ref_type": "SeAgentGraphDBNodeTxnDetail", 
                    "description": []
                }, 
                "history": {
                    "doc_type": "SeAgentGraphDBNodeTxnDetail", 
                    "py_type": "list", 
                    "name": "history", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeAgentGraphDBNodeTxnDetail", 
                    "description": []
                }
            }
        }, 
        "SeAgentVnicDBRuntime": {
            "name": "SeAgentVnicDBRuntime", 
            "properties": {
                "vnic": {
                    "doc_type": "SeAgentVnicRuntime", 
                    "py_type": "list", 
                    "name": "vnic", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeAgentVnicRuntime", 
                    "description": []
                }, 
                "vrf": {
                    "doc_type": "SeAgentVrfRuntime", 
                    "py_type": "list", 
                    "name": "vrf", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeAgentVrfRuntime", 
                    "description": []
                }
            }
        }, 
        "SeAgentRoute": {
            "name": "SeAgentRoute", 
            "properties": {
                "dst_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "dst_ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "gateway": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "gateway", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "InterfaceLacpRuntime": {
            "name": "InterfaceLacpRuntime", 
            "properties": {
                "interface_lacp_entry": {
                    "doc_type": "InterfaceLacpEntry", 
                    "py_type": "list", 
                    "name": "interface_lacp_entry", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "InterfaceLacpEntry", 
                    "description": []
                }
            }
        }
    }, 
    "options": {
        "MetricsAnomalyModelOptions": {
            "name": "MetricsAnomalyModelOptions", 
            "properties": {
                "anomaly_model": {
                    "default_value": "EXPONENTIAL_WEIGHTED_MOVING_AVG", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "anomaly_model", 
                    "required": "False", 
                    "option_values": [
                        "EXPONENTIAL_MOVING_AVG", 
                        "EXPONENTIAL_WEIGHTED_MOVING_AVG", 
                        "HOLTWINTERS_AT_AS", 
                        "HOLTWINTERS_AT_MS"
                    ], 
                    "description": [
                        "The model to use.", 
                        "For holt winters methods, thealpha, beta, gamma, are set with inputs from the paper  aberrant behavior detection in time series for network", 
                        "monitoring.", 
                        "Enum options - EXPONENTIAL_MOVING_AVG, EXPONENTIAL_WEIGHTED_MOVING_AVG, HOLTWINTERS_AT_AS, HOLTWINTERS_AT_MS."
                    ]
                }, 
                "alpha": {
                    "default_value": 0.22, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "alpha", 
                    "required": "False", 
                    "description": [
                        "Hw  alpha.", 
                        "Gives 95% weight to (5min) samples in the last hour (12 samples)."
                    ]
                }, 
                "beta": {
                    "default_value": 0.00034, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "beta", 
                    "required": "False", 
                    "description": [
                        "Hw  beta.", 
                        "Gives 50% weight to (5min) samples in the last week (2016 samples)."
                    ]
                }, 
                "gamma": {
                    "default_value": 0.22, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "gamma", 
                    "required": "False", 
                    "description": [
                        "Hw  gamma."
                    ]
                }, 
                "delta": {
                    "default_value": 0.22, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "delta", 
                    "required": "False", 
                    "description": [
                        "Hw  delta."
                    ]
                }
            }
        }, 
        "IpAddrPrefix": {
            "name": "IpAddrPrefix", 
            "properties": {
                "ip_addr": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip_addr", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "AlertOptions": {
            "name": "AlertOptions", 
            "properties": {
                "threshold": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "threshold", 
                    "required": "False", 
                    "description": []
                }, 
                "cfg_scope": {
                    "default_value": "ALERT_CONFIG_SCOPE_TENANT", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cfg_scope", 
                    "required": "False", 
                    "option_values": [
                        "ALERT_CONFIG_SCOPE_TENANT", 
                        "ALERT_CONFIG_SCOPE_ADMIN"
                    ], 
                    "description": [
                        "Enum options - ALERT_CONFIG_SCOPE_TENANT, ALERT_CONFIG_SCOPE_ADMIN."
                    ]
                }, 
                "name": {
                    "default_value": "System-Default", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "name", 
                    "required": "True", 
                    "description": []
                }
            }
        }, 
        "MetricsAnomalyzerOptions": {
            "name": "MetricsAnomalyzerOptions", 
            "properties": {
                "anomaly_model_opts": {
                    "doc_type": "MetricsAnomalyModelOptions", 
                    "py_type": "list", 
                    "name": "anomaly_model_opts", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MetricsAnomalyModelOptions", 
                    "description": []
                }, 
                "anomaly_interpretation": {
                    "default_value": "COMBINE_MODELS_ALL", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "anomaly_interpretation", 
                    "required": "False", 
                    "option_values": [
                        "COMBINE_MODELS_ALL", 
                        "COMBINE_MODELS_ANY"
                    ], 
                    "description": [
                        "Enum options - COMBINE_MODELS_ALL, COMBINE_MODELS_ANY."
                    ]
                }, 
                "skip_eval_period": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "skip_eval_period", 
                    "required": "False", 
                    "description": [
                        "Skip the training period for anomaly.", 
                        "Should only be used for special error cases where we don't wantto wait for exponential moving average to learn the pattern."
                    ]
                }
            }
        }, 
        "MetricIdOptions": {
            "name": "MetricIdOptions", 
            "properties": {
                "is_hs_contributor": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_hs_contributor", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "MetricsOptions": {
            "name": "MetricsOptions", 
            "properties": {
                "archive_policy": {
                    "default_value": "METRICS_DB_TABLE_ARCHIVE_ALL", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "archive_policy", 
                    "required": "False", 
                    "option_values": [
                        "METRICS_DB_TABLE_ARCHIVE_NONE", 
                        "METRICS_DB_TABLE_ARCHIVE_ALL", 
                        "METRICS_DB_TABLE_ARCHIVE_HIGHEST", 
                        "METRICS_DB_TABLE_ARCHIVE_LOWEST", 
                        "METRICS_DB_TABLE_ARCHIVE_DAY", 
                        "METRICS_DB_TABLE_ARCHIVE_DAY_WEEK", 
                        "METRICS_DB_TABLE_ARCHIVE_DAY_YEAR"
                    ], 
                    "description": [
                        "Enum options - METRICS_DB_TABLE_ARCHIVE_NONE, METRICS_DB_TABLE_ARCHIVE_ALL, METRICS_DB_TABLE_ARCHIVE_HIGHEST, METRICS_DB_TABLE_ARCHIVE_LOWEST,", 
                        "METRICS_DB_TABLE_ARCHIVE_DAY, METRICS_DB_TABLE_ARCHIVE_DAY_WEEK, METRICS_DB_TABLE_ARCHIVE_DAY_YEAR."
                    ]
                }
            }
        }, 
        "MetricsDerivationData": {
            "name": "MetricsDerivationData", 
            "properties": {
                "include_derivation_metrics": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "include_derivation_metrics", 
                    "required": "False", 
                    "description": []
                }, 
                "exclude_derived_metric": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "exclude_derived_metric", 
                    "required": "False", 
                    "description": []
                }, 
                "result_has_additional_fields": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "result_has_additional_fields", 
                    "required": "False", 
                    "description": []
                }, 
                "skip_backend_derivation": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "skip_backend_derivation", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "MetricsRuleOptions": {
            "name": "MetricsRuleOptions", 
            "properties": {
                "only_positive_anomalies": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "only_positive_anomalies", 
                    "required": "False", 
                    "description": [
                        "Generate events only for positive deviations.", 
                        "Used only for the generate events on anomaly option."
                    ]
                }
            }
        }
    }, 
    "unittest": {
        "MostDifficultObjectEver": {
            "name": "MostDifficultObjectEver", 
            "properties": {
                "nonref_2": {
                    "doc_type": "NonReferencable2", 
                    "py_type": "NonReferencable2", 
                    "name": "nonref_2", 
                    "required": "True", 
                    "ref_type": "NonReferencable2", 
                    "description": []
                }, 
                "optional_nonref_2": {
                    "doc_type": "NonReferencable2", 
                    "py_type": "NonReferencable2", 
                    "name": "optional_nonref_2", 
                    "required": "False", 
                    "ref_type": "NonReferencable2", 
                    "description": []
                }, 
                "repeated_nonref_2": {
                    "doc_type": "NonReferencable2", 
                    "py_type": "list", 
                    "name": "repeated_nonref_2", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NonReferencable2", 
                    "description": []
                }
            }
        }, 
        "HasOptionalNonReferencable": {
            "name": "HasOptionalNonReferencable", 
            "properties": {
                "non_referencable": {
                    "doc_type": "NonReferencable", 
                    "py_type": "NonReferencable", 
                    "name": "non_referencable", 
                    "required": "False", 
                    "ref_type": "NonReferencable", 
                    "description": []
                }
            }
        }, 
        "HasSingleNonReferencable": {
            "name": "HasSingleNonReferencable", 
            "properties": {
                "non_referencable": {
                    "doc_type": "NonReferencable", 
                    "py_type": "NonReferencable", 
                    "name": "non_referencable", 
                    "required": "True", 
                    "ref_type": "NonReferencable", 
                    "description": []
                }
            }
        }, 
        "HasRepeatedNonReferencable": {
            "name": "HasRepeatedNonReferencable", 
            "properties": {
                "non_referencables": {
                    "doc_type": "NonReferencable", 
                    "py_type": "list", 
                    "name": "non_referencables", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NonReferencable", 
                    "description": []
                }
            }
        }, 
        "IsOwnedReference": {
            "name": "IsOwnedReference", 
            "properties": {
                "data": {
                    "doc_type": "NonReferencable", 
                    "py_type": "NonReferencable", 
                    "name": "data", 
                    "required": "True", 
                    "ref_type": "NonReferencable", 
                    "description": []
                }
            }
        }, 
        "UltimateTestRepeated": {
            "name": "UltimateTestRepeated", 
            "properties": {
                "most_difficult": {
                    "doc_type": "MostDifficultObjectEver", 
                    "py_type": "list", 
                    "name": "most_difficult", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MostDifficultObjectEver", 
                    "description": []
                }
            }
        }, 
        "HasOwnedReferences": {
            "name": "HasOwnedReferences", 
            "properties": {
                "multiple_ref": {
                    "doc_type": "IsOwnedReference", 
                    "py_type": "list", 
                    "name": "multiple_ref", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IsOwnedReference", 
                    "description": []
                }
            }
        }, 
        "UltimateTest": {
            "name": "UltimateTest", 
            "properties": {
                "most_difficult": {
                    "doc_type": "MostDifficultObjectEver", 
                    "py_type": "MostDifficultObjectEver", 
                    "name": "most_difficult", 
                    "required": "True", 
                    "ref_type": "MostDifficultObjectEver", 
                    "description": []
                }
            }
        }
    }, 
    "nsx": {
        "NsxFault": {
            "name": "NsxFault", 
            "properties": {
                "get_fault": {
                    "doc_type": "RestApiFault", 
                    "py_type": "RestApiFault", 
                    "name": "get_fault", 
                    "required": "True", 
                    "ref_type": "RestApiFault", 
                    "description": [
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "post_fault": {
                    "doc_type": "RestApiFault", 
                    "py_type": "RestApiFault", 
                    "name": "post_fault", 
                    "required": "True", 
                    "ref_type": "RestApiFault", 
                    "description": [
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "put_fault": {
                    "doc_type": "RestApiFault", 
                    "py_type": "RestApiFault", 
                    "name": "put_fault", 
                    "required": "True", 
                    "ref_type": "RestApiFault", 
                    "description": [
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "del_fault": {
                    "doc_type": "RestApiFault", 
                    "py_type": "RestApiFault", 
                    "name": "del_fault", 
                    "required": "True", 
                    "ref_type": "RestApiFault", 
                    "description": [
                        "Field introduced in 17.1.2."
                    ]
                }
            }
        }, 
        "IpsetInfoCli": {
            "name": "IpsetInfoCli", 
            "properties": {
                "obj_map": {
                    "doc_type": "ObjIpMapCli", 
                    "py_type": "list", 
                    "name": "obj_map", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ObjIpMapCli", 
                    "description": [
                        "Ip for each object like se.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "NsxAgentInternalCli": {
            "name": "NsxAgentInternalCli", 
            "properties": {
                "l3_section": {
                    "doc_type": "NsxL3SectionCli", 
                    "py_type": "list", 
                    "name": "l3_section", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NsxL3SectionCli", 
                    "description": [
                        "List of nsx dfw sections created by the controller.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "vs_se_ipsets": {
                    "doc_type": "IpsetInfoCli", 
                    "py_type": "list", 
                    "name": "vs_se_ipsets", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpsetInfoCli", 
                    "description": [
                        "List of ipsets created for se.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "avi_obj_app_map": {
                    "doc_type": "AviObjAppMapCli", 
                    "py_type": "list", 
                    "name": "avi_obj_app_map", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "AviObjAppMapCli", 
                    "description": [
                        "List of internal pool specific nsx application objects created by avi.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "avi_app_map": {
                    "doc_type": "AviAppMapCli", 
                    "py_type": "list", 
                    "name": "avi_app_map", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "AviAppMapCli", 
                    "description": [
                        "List of internal nsx application objects created by avi.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "rules": {
                    "doc_type": "NsxDfwRuleCli", 
                    "py_type": "list", 
                    "name": "rules", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NsxDfwRuleCli", 
                    "description": [
                        "List of nsx dfw rules created by the controller.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "sg_map": {
                    "doc_type": "ObjMapCli", 
                    "py_type": "list", 
                    "name": "sg_map", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ObjMapCli", 
                    "description": [
                        "List of internal security group maps.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "sg_ips": {
                    "doc_type": "ObjMapCli", 
                    "py_type": "list", 
                    "name": "sg_ips", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ObjMapCli", 
                    "description": [
                        "List of internal security group ips.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "mgmt_ipsets": {
                    "doc_type": "IpsetInfoCli", 
                    "py_type": "list", 
                    "name": "mgmt_ipsets", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpsetInfoCli", 
                    "description": [
                        "List of ipsets created for controller/se management.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "NsxFaultParams": {
            "name": "NsxFaultParams", 
            "properties": {
                "count": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "count", 
                    "required": "True", 
                    "description": [
                        "The number of times fault should occur.", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "delay": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "delay", 
                    "required": "True", 
                    "description": [
                        "The number of secs the fault should delay the response.", 
                        "Field introduced in 17.1.2."
                    ]
                }
            }
        }, 
        "NsxDfwRuleCli": {
            "name": "NsxDfwRuleCli", 
            "properties": {
                "apply_to": {
                    "doc_type": "NsxObjCli", 
                    "py_type": "list", 
                    "name": "apply_to", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NsxObjCli", 
                    "description": [
                        "List of objects where the policy is applied.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "sources": {
                    "doc_type": "NsxObjCli", 
                    "py_type": "list", 
                    "name": "sources", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NsxObjCli", 
                    "description": [
                        "List of sources for the rule.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "applications": {
                    "doc_type": "NsxObjCli", 
                    "py_type": "list", 
                    "name": "applications", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NsxObjCli", 
                    "description": [
                        "List of applications for the rule.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "destinations": {
                    "doc_type": "NsxObjCli", 
                    "py_type": "list", 
                    "name": "destinations", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NsxObjCli", 
                    "description": [
                        "List of destinations for the rule.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "NsxSgIps": {
            "name": "NsxSgIps", 
            "properties": {
                "sg_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "sg_ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Security group ips retrieved from nsx manager.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "RestApiFault": {
            "name": "RestApiFault", 
            "properties": {
                "count": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "count", 
                    "required": "False", 
                    "description": [
                        "The number of times fault should occur.", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "delay": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "delay", 
                    "required": "False", 
                    "description": [
                        "The number of secs the fault should delay the response.", 
                        "Field introduced in 17.1.2."
                    ]
                }
            }
        }, 
        "NsxInternalParams": {
            "name": "NsxInternalParams", 
            "properties": {
                "rules": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "rules", 
                    "required": "False", 
                    "description": [
                        "Rules option for cli display.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "maps": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "maps", 
                    "required": "False", 
                    "description": [
                        "Nsx agent maps option for cli display.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "ipsets": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "ipsets", 
                    "required": "False", 
                    "description": [
                        "Ipsets option for cli display.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "apps": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "apps", 
                    "required": "False", 
                    "description": [
                        "Avi nsx application option for cli display.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }
    }, 
    "network_policy": {
        "NetworkSecurityPolicyDosInfo": {
            "name": "NetworkSecurityPolicyDosInfo", 
            "properties": {
                "rules": {
                    "doc_type": "NetworkSecurityRule", 
                    "py_type": "list", 
                    "name": "rules", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NetworkSecurityRule", 
                    "description": []
                }, 
                "ip_count": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ip_count", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "NetworkSecurityPolicyDos": {
            "name": "NetworkSecurityPolicyDos", 
            "properties": {
                "rules": {
                    "doc_type": "NetworkSecurityRuleDos", 
                    "py_type": "list", 
                    "name": "rules", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NetworkSecurityRuleDos", 
                    "description": []
                }
            }
        }, 
        "NetworkSecurityRule": {
            "name": "NetworkSecurityRule", 
            "properties": {
                "rl_param": {
                    "doc_type": "NetworkSecurityPolicyActionRLParam", 
                    "py_type": "NetworkSecurityPolicyActionRLParam", 
                    "name": "rl_param", 
                    "required": "False", 
                    "ref_type": "NetworkSecurityPolicyActionRLParam", 
                    "description": []
                }, 
                "age": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "age", 
                    "required": "False", 
                    "range": "1-4294967295", 
                    "special_values": [
                        "'blocked for ever'"
                    ], 
                    "description": [
                        "Time in minutes after which rule will be deleted.", 
                        "Allowed values are 1-4294967295.", 
                        "Special values are 0- 'blocked for ever'."
                    ]
                }, 
                "log": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "log", 
                    "required": "False", 
                    "description": []
                }, 
                "match": {
                    "doc_type": "NetworkSecurityMatchTarget", 
                    "py_type": "NetworkSecurityMatchTarget", 
                    "name": "match", 
                    "required": "True", 
                    "ref_type": "NetworkSecurityMatchTarget", 
                    "description": []
                }
            }
        }, 
        "NetworkSecurityPolicy": {
            "name": "NetworkSecurityPolicy", 
            "properties": {
                "rules": {
                    "doc_type": "NetworkSecurityRule", 
                    "py_type": "list", 
                    "name": "rules", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NetworkSecurityRule", 
                    "description": []
                }
            }
        }, 
        "NetworkSecurityRuleDos": {
            "name": "NetworkSecurityRuleDos", 
            "properties": {
                "rl_param": {
                    "doc_type": "NetworkSecurityPolicyActionRLParam", 
                    "py_type": "NetworkSecurityPolicyActionRLParam", 
                    "name": "rl_param", 
                    "required": "False", 
                    "ref_type": "NetworkSecurityPolicyActionRLParam", 
                    "description": []
                }, 
                "age": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "age", 
                    "required": "False", 
                    "range": "1-4294967295", 
                    "special_values": [
                        "'blocked for ever'"
                    ], 
                    "description": [
                        "Time in minutes after which rule will be deleted.", 
                        "Allowed values are 1-4294967295.", 
                        "Special values are 0- 'blocked for ever'."
                    ]
                }, 
                "log": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "log", 
                    "required": "False", 
                    "description": []
                }, 
                "match": {
                    "doc_type": "NetworkSecurityMatchTarget", 
                    "py_type": "NetworkSecurityMatchTarget", 
                    "name": "match", 
                    "required": "True", 
                    "ref_type": "NetworkSecurityMatchTarget", 
                    "description": []
                }
            }
        }, 
        "NetworkSecurityPolicyActionRLParam": {
            "name": "NetworkSecurityPolicyActionRLParam", 
            "properties": {
                "max_rate": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_rate", 
                    "required": "True", 
                    "range": "1-4294967295", 
                    "description": [
                        "Maximum number of connections or requests or packets per second.", 
                        "Allowed values are 1-4294967295."
                    ]
                }, 
                "burst_size": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "burst_size", 
                    "required": "True", 
                    "description": [
                        "Maximum number of connections or requests or packets to be rate limited instantaneously."
                    ]
                }
            }
        }, 
        "NetworkSecurityMatchTarget": {
            "name": "NetworkSecurityMatchTarget", 
            "properties": {
                "microservice": {
                    "doc_type": "MicroServiceMatch", 
                    "py_type": "MicroServiceMatch", 
                    "name": "microservice", 
                    "required": "False", 
                    "ref_type": "MicroServiceMatch", 
                    "description": []
                }, 
                "client_ip": {
                    "doc_type": "IpAddrMatch", 
                    "py_type": "IpAddrMatch", 
                    "name": "client_ip", 
                    "required": "False", 
                    "ref_type": "IpAddrMatch", 
                    "description": []
                }, 
                "vs_port": {
                    "doc_type": "PortMatch", 
                    "py_type": "PortMatch", 
                    "name": "vs_port", 
                    "required": "False", 
                    "ref_type": "PortMatch", 
                    "description": []
                }
            }
        }, 
        "NetworkSecurityPolicyDosUnblock": {
            "name": "NetworkSecurityPolicyDosUnblock", 
            "properties": {
                "ips": {
                    "doc_type": "IpAddrMatch", 
                    "py_type": "IpAddrMatch", 
                    "name": "ips", 
                    "required": "True", 
                    "ref_type": "IpAddrMatch", 
                    "description": []
                }
            }
        }
    }, 
    "rpc_request": {
        "RPCRequestMetaData": {
            "name": "RPCRequestMetaData", 
            "properties": {
                "page_size": {
                    "default_value": 25, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "page_size", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "RPCRequestResource": {
            "name": "RPCRequestResource", 
            "properties": {
                "microservice_group": {
                    "doc_type": "MicroServiceGroup", 
                    "py_type": "MicroServiceGroup", 
                    "name": "microservice_group", 
                    "required": "False", 
                    "ref_type": "MicroServiceGroup", 
                    "description": []
                }, 
                "analytics_profile": {
                    "doc_type": "AnalyticsProfile", 
                    "py_type": "AnalyticsProfile", 
                    "name": "analytics_profile", 
                    "required": "False", 
                    "ref_type": "AnalyticsProfile", 
                    "description": []
                }, 
                "ssl_profile": {
                    "doc_type": "SSLProfile", 
                    "py_type": "SSLProfile", 
                    "name": "ssl_profile", 
                    "required": "False", 
                    "ref_type": "SSLProfile", 
                    "description": []
                }, 
                "virtual_service": {
                    "doc_type": "VirtualService", 
                    "py_type": "VirtualService", 
                    "name": "virtual_service", 
                    "required": "False", 
                    "ref_type": "VirtualService", 
                    "description": []
                }, 
                "gs_ops": {
                    "doc_type": "GslbSiteOps", 
                    "py_type": "GslbSiteOps", 
                    "name": "gs_ops", 
                    "required": "False", 
                    "ref_type": "GslbSiteOps", 
                    "description": []
                }, 
                "vs_logmgr_map": {
                    "doc_type": "VirtualServiceLogmgrMap", 
                    "py_type": "VirtualServiceLogmgrMap", 
                    "name": "vs_logmgr_map", 
                    "required": "False", 
                    "ref_type": "VirtualServiceLogmgrMap", 
                    "description": []
                }, 
                "vrf_context": {
                    "doc_type": "VrfContext", 
                    "py_type": "VrfContext", 
                    "name": "vrf_context", 
                    "required": "False", 
                    "ref_type": "VrfContext", 
                    "description": []
                }, 
                "pool_group": {
                    "doc_type": "PoolGroup", 
                    "py_type": "PoolGroup", 
                    "name": "pool_group", 
                    "required": "False", 
                    "ref_type": "PoolGroup", 
                    "description": []
                }, 
                "microservice": {
                    "doc_type": "MicroService", 
                    "py_type": "MicroService", 
                    "name": "microservice", 
                    "required": "False", 
                    "ref_type": "MicroService", 
                    "description": []
                }, 
                "system_configuration": {
                    "doc_type": "SystemConfiguration", 
                    "py_type": "SystemConfiguration", 
                    "name": "system_configuration", 
                    "required": "False", 
                    "ref_type": "SystemConfiguration", 
                    "description": []
                }, 
                "cloud": {
                    "doc_type": "Cloud", 
                    "py_type": "Cloud", 
                    "name": "cloud", 
                    "required": "False", 
                    "ref_type": "Cloud", 
                    "description": []
                }, 
                "service_engine": {
                    "doc_type": "ServiceEngine", 
                    "py_type": "ServiceEngine", 
                    "name": "service_engine", 
                    "required": "False", 
                    "ref_type": "ServiceEngine", 
                    "description": []
                }, 
                "network": {
                    "doc_type": "Network", 
                    "py_type": "Network", 
                    "name": "network", 
                    "required": "False", 
                    "ref_type": "Network", 
                    "description": []
                }, 
                "application_profile": {
                    "doc_type": "ApplicationProfile", 
                    "py_type": "ApplicationProfile", 
                    "name": "application_profile", 
                    "required": "False", 
                    "ref_type": "ApplicationProfile", 
                    "description": []
                }, 
                "debug_virtual_service": {
                    "doc_type": "DebugVirtualService", 
                    "py_type": "DebugVirtualService", 
                    "name": "debug_virtual_service", 
                    "required": "False", 
                    "ref_type": "DebugVirtualService", 
                    "description": []
                }, 
                "ip_addr_group": {
                    "doc_type": "IpAddrGroup", 
                    "py_type": "IpAddrGroup", 
                    "name": "ip_addr_group", 
                    "required": "False", 
                    "ref_type": "IpAddrGroup", 
                    "description": []
                }, 
                "se_props": {
                    "doc_type": "SeProperties", 
                    "py_type": "SeProperties", 
                    "name": "se_props", 
                    "required": "False", 
                    "ref_type": "SeProperties", 
                    "description": []
                }, 
                "network_profile": {
                    "doc_type": "NetworkProfile", 
                    "py_type": "NetworkProfile", 
                    "name": "network_profile", 
                    "required": "False", 
                    "ref_type": "NetworkProfile", 
                    "description": []
                }, 
                "dns_policy": {
                    "doc_type": "DnsPolicy", 
                    "py_type": "DnsPolicy", 
                    "name": "dns_policy", 
                    "required": "False", 
                    "ref_type": "DnsPolicy", 
                    "description": []
                }, 
                "gslb_dns_update": {
                    "doc_type": "GslbDnsUpdate", 
                    "py_type": "GslbDnsUpdate", 
                    "name": "gslb_dns_update", 
                    "required": "False", 
                    "ref_type": "GslbDnsUpdate", 
                    "description": []
                }, 
                "gslb_service_runtime": {
                    "doc_type": "GslbServiceRuntime", 
                    "py_type": "list", 
                    "name": "gslb_service_runtime", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbServiceRuntime", 
                    "description": []
                }, 
                "service_engine_group": {
                    "doc_type": "ServiceEngineGroup", 
                    "py_type": "ServiceEngineGroup", 
                    "name": "service_engine_group", 
                    "required": "False", 
                    "ref_type": "ServiceEngineGroup", 
                    "description": []
                }, 
                "auth_profile": {
                    "doc_type": "AuthProfile", 
                    "py_type": "AuthProfile", 
                    "name": "auth_profile", 
                    "required": "False", 
                    "ref_type": "AuthProfile", 
                    "description": []
                }, 
                "apic_transaction": {
                    "doc_type": "APICTransaction", 
                    "py_type": "APICTransaction", 
                    "name": "apic_transaction", 
                    "required": "False", 
                    "ref_type": "APICTransaction", 
                    "description": []
                }, 
                "debug_controller": {
                    "doc_type": "DebugController", 
                    "py_type": "DebugController", 
                    "name": "debug_controller", 
                    "required": "False", 
                    "ref_type": "DebugController", 
                    "description": []
                }, 
                "http_policy_set": {
                    "doc_type": "HTTPPolicySet", 
                    "py_type": "HTTPPolicySet", 
                    "name": "http_policy_set", 
                    "required": "False", 
                    "ref_type": "HTTPPolicySet", 
                    "description": []
                }, 
                "traffic_clone_profile": {
                    "doc_type": "TrafficCloneProfile", 
                    "py_type": "TrafficCloneProfile", 
                    "name": "traffic_clone_profile", 
                    "required": "False", 
                    "ref_type": "TrafficCloneProfile", 
                    "description": []
                }, 
                "auto_scale_launch_config": {
                    "doc_type": "AutoScaleLaunchConfig", 
                    "py_type": "AutoScaleLaunchConfig", 
                    "name": "auto_scale_launch_config", 
                    "required": "False", 
                    "ref_type": "AutoScaleLaunchConfig", 
                    "description": []
                }, 
                "hardwaresecuritymodule_group": {
                    "doc_type": "HardwareSecurityModuleGroup", 
                    "py_type": "HardwareSecurityModuleGroup", 
                    "name": "hardwaresecuritymodule_group", 
                    "required": "False", 
                    "ref_type": "HardwareSecurityModuleGroup", 
                    "description": []
                }, 
                "network_security_policy": {
                    "doc_type": "NetworkSecurityPolicy", 
                    "py_type": "NetworkSecurityPolicy", 
                    "name": "network_security_policy", 
                    "required": "False", 
                    "ref_type": "NetworkSecurityPolicy", 
                    "description": []
                }, 
                "application_persistence_profile": {
                    "doc_type": "ApplicationPersistenceProfile", 
                    "py_type": "ApplicationPersistenceProfile", 
                    "name": "application_persistence_profile", 
                    "required": "False", 
                    "ref_type": "ApplicationPersistenceProfile", 
                    "description": []
                }, 
                "server_auto_scale_policy": {
                    "doc_type": "ServerAutoScalePolicy", 
                    "py_type": "ServerAutoScalePolicy", 
                    "name": "server_auto_scale_policy", 
                    "required": "False", 
                    "ref_type": "ServerAutoScalePolicy", 
                    "description": []
                }, 
                "cloud_props": {
                    "doc_type": "CloudProperties", 
                    "py_type": "CloudProperties", 
                    "name": "cloud_props", 
                    "required": "False", 
                    "ref_type": "CloudProperties", 
                    "description": []
                }, 
                "pool": {
                    "doc_type": "Pool", 
                    "py_type": "Pool", 
                    "name": "pool", 
                    "required": "False", 
                    "ref_type": "Pool", 
                    "description": []
                }, 
                "gslb_service": {
                    "doc_type": "GslbService", 
                    "py_type": "GslbService", 
                    "name": "gslb_service", 
                    "required": "False", 
                    "ref_type": "GslbService", 
                    "description": []
                }, 
                "health_monitor": {
                    "doc_type": "HealthMonitor", 
                    "py_type": "HealthMonitor", 
                    "name": "health_monitor", 
                    "required": "False", 
                    "ref_type": "HealthMonitor", 
                    "description": []
                }, 
                "pki_profile": {
                    "doc_type": "PKIProfile", 
                    "py_type": "PKIProfile", 
                    "name": "pki_profile", 
                    "required": "False", 
                    "ref_type": "PKIProfile", 
                    "description": []
                }, 
                "pool_group_deployment_policy": {
                    "doc_type": "PoolGroupDeploymentPolicy", 
                    "py_type": "PoolGroupDeploymentPolicy", 
                    "name": "pool_group_deployment_policy", 
                    "required": "False", 
                    "ref_type": "PoolGroupDeploymentPolicy", 
                    "description": []
                }, 
                "gslb_geodb": {
                    "doc_type": "GslbGeoDbProfile", 
                    "py_type": "GslbGeoDbProfile", 
                    "name": "gslb_geodb", 
                    "required": "False", 
                    "ref_type": "GslbGeoDbProfile", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "string_group": {
                    "doc_type": "StringGroup", 
                    "py_type": "StringGroup", 
                    "name": "string_group", 
                    "required": "False", 
                    "ref_type": "StringGroup", 
                    "description": []
                }, 
                "ssl_key_and_certificate": {
                    "doc_type": "SSLKeyAndCertificate", 
                    "py_type": "SSLKeyAndCertificate", 
                    "name": "ssl_key_and_certificate", 
                    "required": "False", 
                    "ref_type": "SSLKeyAndCertificate", 
                    "description": []
                }, 
                "priority_labels": {
                    "doc_type": "PriorityLabels", 
                    "py_type": "PriorityLabels", 
                    "name": "priority_labels", 
                    "required": "False", 
                    "ref_type": "PriorityLabels", 
                    "description": []
                }, 
                "apic_configuration": {
                    "doc_type": "APICConfiguration", 
                    "py_type": "APICConfiguration", 
                    "name": "apic_configuration", 
                    "required": "False", 
                    "ref_type": "APICConfiguration", 
                    "description": []
                }, 
                "vsdatascriptset": {
                    "doc_type": "VSDataScriptSet", 
                    "py_type": "VSDataScriptSet", 
                    "name": "vsdatascriptset", 
                    "required": "False", 
                    "ref_type": "VSDataScriptSet", 
                    "description": []
                }, 
                "debug_service_engine": {
                    "doc_type": "DebugServiceEngine", 
                    "py_type": "DebugServiceEngine", 
                    "name": "debug_service_engine", 
                    "required": "False", 
                    "ref_type": "DebugServiceEngine", 
                    "description": []
                }, 
                "controller_props": {
                    "doc_type": "ControllerProperties", 
                    "py_type": "ControllerProperties", 
                    "name": "controller_props", 
                    "required": "False", 
                    "ref_type": "ControllerProperties", 
                    "description": []
                }, 
                "gslb_dns_geo_update": {
                    "doc_type": "GslbDnsGeoUpdate", 
                    "py_type": "GslbDnsGeoUpdate", 
                    "name": "gslb_dns_geo_update", 
                    "required": "False", 
                    "ref_type": "GslbDnsGeoUpdate", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "ipam_dns_records": {
                    "doc_type": "DnsRecord", 
                    "py_type": "list", 
                    "name": "ipam_dns_records", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsRecord", 
                    "description": []
                }
            }
        }, 
        "RPCRequestFilter": {
            "name": "RPCRequestFilter", 
            "properties": {
                "vi_host_resource_filter": {
                    "doc_type": "VIHostResourceFilter", 
                    "py_type": "VIHostResourceFilter", 
                    "name": "vi_host_resource_filter", 
                    "required": "False", 
                    "ref_type": "VIHostResourceFilter", 
                    "description": []
                }, 
                "placement_status_filter": {
                    "doc_type": "PlacementStatusFilter", 
                    "py_type": "PlacementStatusFilter", 
                    "name": "placement_status_filter", 
                    "required": "False", 
                    "ref_type": "PlacementStatusFilter", 
                    "description": []
                }, 
                "vi_retrieve_pg_names": {
                    "doc_type": "VIRetrievePGNames", 
                    "py_type": "VIRetrievePGNames", 
                    "name": "vi_retrieve_pg_names", 
                    "required": "False", 
                    "ref_type": "VIRetrievePGNames", 
                    "description": []
                }, 
                "candidate_se_host_filter": {
                    "doc_type": "CandidateSeHostFilter", 
                    "py_type": "CandidateSeHostFilter", 
                    "name": "candidate_se_host_filter", 
                    "required": "False", 
                    "ref_type": "CandidateSeHostFilter", 
                    "description": []
                }, 
                "delete_filter": {
                    "doc_type": "DeleteFilter", 
                    "py_type": "DeleteFilter", 
                    "name": "delete_filter", 
                    "required": "False", 
                    "ref_type": "DeleteFilter", 
                    "description": []
                }, 
                "corenum_filter": {
                    "doc_type": "CorenumFilter", 
                    "py_type": "CorenumFilter", 
                    "name": "corenum_filter", 
                    "required": "False", 
                    "ref_type": "CorenumFilter", 
                    "description": []
                }, 
                "ms_filter": {
                    "doc_type": "SeMicroServiceFilter", 
                    "py_type": "SeMicroServiceFilter", 
                    "name": "ms_filter", 
                    "required": "False", 
                    "ref_type": "SeMicroServiceFilter", 
                    "description": []
                }, 
                "gs_filter": {
                    "doc_type": "GsFilter", 
                    "py_type": "GsFilter", 
                    "name": "gs_filter", 
                    "required": "False", 
                    "ref_type": "GsFilter", 
                    "description": []
                }, 
                "geo_location_filter": {
                    "doc_type": "GeoLocationFilter", 
                    "py_type": "GeoLocationFilter", 
                    "name": "geo_location_filter", 
                    "required": "False", 
                    "ref_type": "GeoLocationFilter", 
                    "description": []
                }, 
                "httpcache_obj_filter": {
                    "doc_type": "HttpCacheObjFilter", 
                    "py_type": "HttpCacheObjFilter", 
                    "name": "httpcache_obj_filter", 
                    "required": "False", 
                    "ref_type": "HttpCacheObjFilter", 
                    "description": []
                }, 
                "vstype_filter": {
                    "doc_type": "VstypeFilter", 
                    "py_type": "VstypeFilter", 
                    "name": "vstype_filter", 
                    "required": "False", 
                    "ref_type": "VstypeFilter", 
                    "description": []
                }, 
                "nsx_sg_filter": {
                    "doc_type": "NsxSgFilter", 
                    "py_type": "NsxSgFilter", 
                    "name": "nsx_sg_filter", 
                    "required": "False", 
                    "ref_type": "NsxSgFilter", 
                    "description": []
                }, 
                "cc_params": {
                    "doc_type": "GslbSiteOpsConsistencyChecker", 
                    "py_type": "GslbSiteOpsConsistencyChecker", 
                    "name": "cc_params", 
                    "required": "False", 
                    "ref_type": "GslbSiteOpsConsistencyChecker", 
                    "description": []
                }, 
                "connection_filter": {
                    "doc_type": "ConnectionFilter", 
                    "py_type": "ConnectionFilter", 
                    "name": "connection_filter", 
                    "required": "False", 
                    "ref_type": "ConnectionFilter", 
                    "description": []
                }, 
                "nsx_fault_params": {
                    "doc_type": "NsxFaultParams", 
                    "py_type": "NsxFaultParams", 
                    "name": "nsx_fault_params", 
                    "required": "False", 
                    "ref_type": "NsxFaultParams", 
                    "description": []
                }, 
                "vs_metrics_filter": {
                    "doc_type": "VsMetricsFilter", 
                    "py_type": "VsMetricsFilter", 
                    "name": "vs_metrics_filter", 
                    "required": "False", 
                    "ref_type": "VsMetricsFilter", 
                    "description": []
                }, 
                "arp_table_filter": {
                    "doc_type": "ArpTableFilter", 
                    "py_type": "ArpTableFilter", 
                    "name": "arp_table_filter", 
                    "required": "False", 
                    "ref_type": "ArpTableFilter", 
                    "description": []
                }, 
                "gs_params_filter": {
                    "doc_type": "GSParamsFilter", 
                    "py_type": "GSParamsFilter", 
                    "name": "gs_params_filter", 
                    "required": "False", 
                    "ref_type": "GSParamsFilter", 
                    "description": []
                }, 
                "con_filter": {
                    "doc_type": "SeConsumerFilter", 
                    "py_type": "SeConsumerFilter", 
                    "name": "con_filter", 
                    "required": "False", 
                    "ref_type": "SeConsumerFilter", 
                    "description": []
                }, 
                "nsx_sg_params": {
                    "doc_type": "NsxSgParams", 
                    "py_type": "NsxSgParams", 
                    "name": "nsx_sg_params", 
                    "required": "False", 
                    "ref_type": "NsxSgParams", 
                    "description": []
                }, 
                "apic_cli_login": {
                    "doc_type": "ApicCliLogin", 
                    "py_type": "ApicCliLogin", 
                    "name": "apic_cli_login", 
                    "required": "False", 
                    "ref_type": "ApicCliLogin", 
                    "description": []
                }, 
                "res_filter": {
                    "doc_type": "SeResourceFilter", 
                    "py_type": "SeResourceFilter", 
                    "name": "res_filter", 
                    "required": "False", 
                    "ref_type": "SeResourceFilter", 
                    "description": []
                }, 
                "vip_filter": {
                    "doc_type": "SeVipFilter", 
                    "py_type": "SeVipFilter", 
                    "name": "vip_filter", 
                    "required": "False", 
                    "ref_type": "SeVipFilter", 
                    "description": []
                }, 
                "apic_epg_filter": {
                    "doc_type": "APICEpgFilter", 
                    "py_type": "APICEpgFilter", 
                    "name": "apic_epg_filter", 
                    "required": "False", 
                    "ref_type": "APICEpgFilter", 
                    "description": []
                }, 
                "server_filter": {
                    "doc_type": "ServerFilter", 
                    "py_type": "ServerFilter", 
                    "name": "server_filter", 
                    "required": "False", 
                    "ref_type": "ServerFilter", 
                    "description": []
                }, 
                "vi_network_subnet_filter": {
                    "doc_type": "VINetworkSubnetFilter", 
                    "py_type": "VINetworkSubnetFilter", 
                    "name": "vi_network_subnet_filter", 
                    "required": "False", 
                    "ref_type": "VINetworkSubnetFilter", 
                    "description": []
                }, 
                "vi_subfolder_filtler": {
                    "doc_type": "VISubfolderFilter", 
                    "py_type": "VISubfolderFilter", 
                    "name": "vi_subfolder_filtler", 
                    "required": "False", 
                    "ref_type": "VISubfolderFilter", 
                    "description": []
                }, 
                "core_filter": {
                    "doc_type": "CoreFilter", 
                    "py_type": "CoreFilter", 
                    "name": "core_filter", 
                    "required": "False", 
                    "ref_type": "CoreFilter", 
                    "description": []
                }, 
                "nsx_internal_params": {
                    "doc_type": "NsxInternalParams", 
                    "py_type": "NsxInternalParams", 
                    "name": "nsx_internal_params", 
                    "required": "False", 
                    "ref_type": "NsxInternalParams", 
                    "description": []
                }, 
                "vi_datastore_filtler": {
                    "doc_type": "VIDatastoreFilter", 
                    "py_type": "VIDatastoreFilter", 
                    "name": "vi_datastore_filtler", 
                    "required": "False", 
                    "ref_type": "VIDatastoreFilter", 
                    "description": []
                }, 
                "connpool_filter": {
                    "doc_type": "ConnpoolFilter", 
                    "py_type": "ConnpoolFilter", 
                    "name": "connpool_filter", 
                    "required": "False", 
                    "ref_type": "ConnpoolFilter", 
                    "description": []
                }, 
                "cps_doser_filter": {
                    "doc_type": "CpsDoserFilter", 
                    "py_type": "CpsDoserFilter", 
                    "name": "cps_doser_filter", 
                    "required": "False", 
                    "ref_type": "CpsDoserFilter", 
                    "description": []
                }, 
                "flowtable_entry_filter": {
                    "doc_type": "FlowtableEntryFilter", 
                    "py_type": "FlowtableEntryFilter", 
                    "name": "flowtable_entry_filter", 
                    "required": "False", 
                    "ref_type": "FlowtableEntryFilter", 
                    "description": []
                }, 
                "flowtable_intf_filter": {
                    "doc_type": "FlowtableIntfFilter", 
                    "py_type": "FlowtableIntfFilter", 
                    "name": "flowtable_intf_filter", 
                    "required": "False", 
                    "ref_type": "FlowtableIntfFilter", 
                    "description": []
                }, 
                "tcp_stat_filter": {
                    "doc_type": "TcpStatFilter", 
                    "py_type": "TcpStatFilter", 
                    "name": "tcp_stat_filter", 
                    "required": "False", 
                    "ref_type": "TcpStatFilter", 
                    "description": []
                }, 
                "se_params_filter": {
                    "doc_type": "SeParamsFilter", 
                    "py_type": "SeParamsFilter", 
                    "name": "se_params_filter", 
                    "required": "False", 
                    "ref_type": "SeParamsFilter", 
                    "description": []
                }, 
                "apic_all_tenant_filter": {
                    "doc_type": "APICEpgAllTenantFilter", 
                    "py_type": "APICEpgAllTenantFilter", 
                    "name": "apic_all_tenant_filter", 
                    "required": "False", 
                    "ref_type": "APICEpgAllTenantFilter", 
                    "description": []
                }, 
                "vrf_filter": {
                    "doc_type": "PlacementVrfFilter", 
                    "py_type": "PlacementVrfFilter", 
                    "name": "vrf_filter", 
                    "required": "False", 
                    "ref_type": "PlacementVrfFilter", 
                    "description": []
                }, 
                "persistence_filter": {
                    "doc_type": "PersistenceFilter", 
                    "py_type": "PersistenceFilter", 
                    "name": "persistence_filter", 
                    "required": "False", 
                    "ref_type": "PersistenceFilter", 
                    "description": []
                }, 
                "nsx_login": {
                    "doc_type": "NsxLogin", 
                    "py_type": "NsxLogin", 
                    "name": "nsx_login", 
                    "required": "False", 
                    "ref_type": "NsxLogin", 
                    "description": []
                }, 
                "udp_stat_filter": {
                    "doc_type": "UdpStatFilter", 
                    "py_type": "UdpStatFilter", 
                    "name": "udp_stat_filter", 
                    "required": "False", 
                    "ref_type": "UdpStatFilter", 
                    "description": []
                }, 
                "se_metrics_filter": {
                    "doc_type": "SeMetricsFilter", 
                    "py_type": "SeMetricsFilter", 
                    "name": "se_metrics_filter", 
                    "required": "False", 
                    "ref_type": "SeMetricsFilter", 
                    "description": []
                }, 
                "apic_login": {
                    "doc_type": "ApicLogin", 
                    "py_type": "ApicLogin", 
                    "name": "apic_login", 
                    "required": "False", 
                    "ref_type": "ApicLogin", 
                    "description": []
                }, 
                "glb_params_filter": {
                    "doc_type": "GlbParamsFilter", 
                    "py_type": "GlbParamsFilter", 
                    "name": "glb_params_filter", 
                    "required": "False", 
                    "ref_type": "GlbParamsFilter", 
                    "description": []
                }, 
                "listeningsock_filter": {
                    "doc_type": "ListeningsockFilter", 
                    "py_type": "ListeningsockFilter", 
                    "name": "listeningsock_filter", 
                    "required": "False", 
                    "ref_type": "ListeningsockFilter", 
                    "description": []
                }, 
                "vcenter_login": {
                    "doc_type": "VcenterLogin", 
                    "py_type": "VcenterLogin", 
                    "name": "vcenter_login", 
                    "required": "False", 
                    "ref_type": "VcenterLogin", 
                    "description": []
                }, 
                "vi_redis_datastore_filter": {
                    "doc_type": "VIRedisDatastoreFilter", 
                    "py_type": "VIRedisDatastoreFilter", 
                    "name": "vi_redis_datastore_filter", 
                    "required": "False", 
                    "ref_type": "VIRedisDatastoreFilter", 
                    "description": []
                }, 
                "metrics_agent_filter": {
                    "doc_type": "MetricsAgentFilter", 
                    "py_type": "MetricsAgentFilter", 
                    "name": "metrics_agent_filter", 
                    "required": "False", 
                    "ref_type": "MetricsAgentFilter", 
                    "description": []
                }, 
                "metrics_mgr_filter": {
                    "doc_type": "MetricsMgrFilter", 
                    "py_type": "MetricsMgrFilter", 
                    "name": "metrics_mgr_filter", 
                    "required": "False", 
                    "ref_type": "MetricsMgrFilter", 
                    "description": []
                }
            }
        }, 
        "RPCRequestActionParams": {
            "name": "RPCRequestActionParams", 
            "properties": {
                "apic_clear_req": {
                    "doc_type": "APICClearReq", 
                    "py_type": "APICClearReq", 
                    "name": "apic_clear_req", 
                    "required": "False", 
                    "ref_type": "APICClearReq", 
                    "description": []
                }, 
                "vcenter_cloud_status_req": {
                    "doc_type": "VcenterCloudStatusReq", 
                    "py_type": "VcenterCloudStatusReq", 
                    "name": "vcenter_cloud_status_req", 
                    "required": "False", 
                    "ref_type": "VcenterCloudStatusReq", 
                    "description": []
                }, 
                "dispatcher_stat_clear": {
                    "doc_type": "DispatcherStatClear", 
                    "py_type": "DispatcherStatClear", 
                    "name": "dispatcher_stat_clear", 
                    "required": "False", 
                    "ref_type": "DispatcherStatClear", 
                    "description": []
                }, 
                "dispatcher_table_dump_clear": {
                    "doc_type": "DispatcherTableDumpClear", 
                    "py_type": "DispatcherTableDumpClear", 
                    "name": "dispatcher_table_dump_clear", 
                    "required": "False", 
                    "ref_type": "DispatcherTableDumpClear", 
                    "description": []
                }, 
                "event_gen_params": {
                    "doc_type": "EventGenParams", 
                    "py_type": "EventGenParams", 
                    "name": "event_gen_params", 
                    "required": "False", 
                    "ref_type": "EventGenParams", 
                    "description": []
                }, 
                "gs_ops": {
                    "doc_type": "GslbSiteOps", 
                    "py_type": "GslbSiteOps", 
                    "name": "gs_ops", 
                    "required": "False", 
                    "ref_type": "GslbSiteOps", 
                    "description": []
                }, 
                "connpool_filter": {
                    "doc_type": "ConnpoolFilter", 
                    "py_type": "ConnpoolFilter", 
                    "name": "connpool_filter", 
                    "required": "False", 
                    "ref_type": "ConnpoolFilter", 
                    "description": []
                }, 
                "rediscover_vcenter_param": {
                    "doc_type": "RediscoverVcenterParam", 
                    "py_type": "RediscoverVcenterParam", 
                    "name": "rediscover_vcenter_param", 
                    "required": "False", 
                    "ref_type": "RediscoverVcenterParam", 
                    "description": []
                }, 
                "httpcache_obj_filter": {
                    "doc_type": "HttpCacheObjFilter", 
                    "py_type": "HttpCacheObjFilter", 
                    "name": "httpcache_obj_filter", 
                    "required": "False", 
                    "ref_type": "HttpCacheObjFilter", 
                    "description": []
                }, 
                "apic_login": {
                    "doc_type": "ApicLogin", 
                    "py_type": "ApicLogin", 
                    "name": "apic_login", 
                    "required": "False", 
                    "ref_type": "ApicLogin", 
                    "description": []
                }, 
                "ft_entry_delete": {
                    "doc_type": "FlowtableEntryFilter", 
                    "py_type": "FlowtableEntryFilter", 
                    "name": "ft_entry_delete", 
                    "required": "False", 
                    "ref_type": "FlowtableEntryFilter", 
                    "description": []
                }, 
                "connection_filter": {
                    "doc_type": "ConnectionClearFilter", 
                    "py_type": "ConnectionClearFilter", 
                    "name": "connection_filter", 
                    "required": "False", 
                    "ref_type": "ConnectionClearFilter", 
                    "description": []
                }, 
                "retry_placement_params": {
                    "doc_type": "RetryPlacementParams", 
                    "py_type": "RetryPlacementParams", 
                    "name": "retry_placement_params", 
                    "required": "False", 
                    "ref_type": "RetryPlacementParams", 
                    "description": []
                }, 
                "server_scalein_params": {
                    "doc_type": "ServerScaleInParams", 
                    "py_type": "ServerScaleInParams", 
                    "name": "server_scalein_params", 
                    "required": "False", 
                    "ref_type": "ServerScaleInParams", 
                    "description": []
                }, 
                "vi_delete_network_filter": {
                    "doc_type": "VIDeleteNetworkFilter", 
                    "py_type": "VIDeleteNetworkFilter", 
                    "name": "vi_delete_network_filter", 
                    "required": "False", 
                    "ref_type": "VIDeleteNetworkFilter", 
                    "description": []
                }, 
                "rebalance_params": {
                    "doc_type": "RebalanceParams", 
                    "py_type": "RebalanceParams", 
                    "name": "rebalance_params", 
                    "required": "False", 
                    "ref_type": "RebalanceParams", 
                    "description": []
                }, 
                "nsx_fault_params": {
                    "doc_type": "NsxFaultParams", 
                    "py_type": "NsxFaultParams", 
                    "name": "nsx_fault_params", 
                    "required": "False", 
                    "ref_type": "NsxFaultParams", 
                    "description": []
                }, 
                "arp_table_filter": {
                    "doc_type": "ArpTableFilter", 
                    "py_type": "ArpTableFilter", 
                    "name": "arp_table_filter", 
                    "required": "False", 
                    "ref_type": "ArpTableFilter", 
                    "description": []
                }, 
                "vi_create_se_req": {
                    "doc_type": "VICreateSEReq", 
                    "py_type": "VICreateSEReq", 
                    "name": "vi_create_se_req", 
                    "required": "False", 
                    "ref_type": "VICreateSEReq", 
                    "description": []
                }, 
                "vs_scalein_params": {
                    "doc_type": "VsScaleinParams", 
                    "py_type": "VsScaleinParams", 
                    "name": "vs_scalein_params", 
                    "required": "False", 
                    "ref_type": "VsScaleinParams", 
                    "description": []
                }, 
                "vs_switchover_params": {
                    "doc_type": "VsSwitchoverParams", 
                    "py_type": "VsSwitchoverParams", 
                    "name": "vs_switchover_params", 
                    "required": "False", 
                    "ref_type": "VsSwitchoverParams", 
                    "description": []
                }, 
                "vi_set_vnic_nw_req": {
                    "doc_type": "VISetvNicNwReq", 
                    "py_type": "VISetvNicNwReq", 
                    "name": "vi_set_vnic_nw_req", 
                    "required": "False", 
                    "ref_type": "VISetvNicNwReq", 
                    "description": []
                }, 
                "vca_login": {
                    "doc_type": "VCALogin", 
                    "py_type": "VCALogin", 
                    "name": "vca_login", 
                    "required": "False", 
                    "ref_type": "VCALogin", 
                    "description": []
                }, 
                "vi_fault_injection": {
                    "doc_type": "VIFaultInjection", 
                    "py_type": "VIFaultInjection", 
                    "name": "vi_fault_injection", 
                    "required": "False", 
                    "ref_type": "VIFaultInjection", 
                    "description": []
                }, 
                "apic_vs_placement_req": {
                    "doc_type": "ApicVSPlacementReq", 
                    "py_type": "ApicVSPlacementReq", 
                    "name": "apic_vs_placement_req", 
                    "required": "False", 
                    "ref_type": "ApicVSPlacementReq", 
                    "description": []
                }, 
                "apic_disable_enable_vs_params": {
                    "doc_type": "APICDisableEnableVsParams", 
                    "py_type": "APICDisableEnableVsParams", 
                    "name": "apic_disable_enable_vs_params", 
                    "required": "False", 
                    "ref_type": "APICDisableEnableVsParams", 
                    "description": []
                }, 
                "oshiftk8s_login": {
                    "doc_type": "OShiftK8SLogin", 
                    "py_type": "OShiftK8SLogin", 
                    "name": "oshiftk8s_login", 
                    "required": "False", 
                    "ref_type": "OShiftK8SLogin", 
                    "description": []
                }, 
                "openstack_login": {
                    "doc_type": "OpenstackLogin", 
                    "py_type": "OpenstackLogin", 
                    "name": "openstack_login", 
                    "required": "False", 
                    "ref_type": "OpenstackLogin", 
                    "description": []
                }, 
                "vs_scaleout_params": {
                    "doc_type": "VsScaleoutParams", 
                    "py_type": "VsScaleoutParams", 
                    "name": "vs_scaleout_params", 
                    "required": "False", 
                    "ref_type": "VsScaleoutParams", 
                    "description": []
                }, 
                "apic_txn_params": {
                    "doc_type": "APICTransactionFlapParams", 
                    "py_type": "APICTransactionFlapParams", 
                    "name": "apic_txn_params", 
                    "required": "False", 
                    "ref_type": "APICTransactionFlapParams", 
                    "description": []
                }, 
                "cs_login": {
                    "doc_type": "CloudStackLogin", 
                    "py_type": "CloudStackLogin", 
                    "name": "cs_login", 
                    "required": "False", 
                    "ref_type": "CloudStackLogin", 
                    "description": []
                }, 
                "server_scaleout_params": {
                    "doc_type": "ServerScaleOutParams", 
                    "py_type": "ServerScaleOutParams", 
                    "name": "server_scaleout_params", 
                    "required": "False", 
                    "ref_type": "ServerScaleOutParams", 
                    "description": []
                }, 
                "se_fault_inject_exhaust_param": {
                    "doc_type": "SEFaultInjectExhaustParam", 
                    "py_type": "SEFaultInjectExhaustParam", 
                    "name": "se_fault_inject_exhaust_param", 
                    "required": "False", 
                    "ref_type": "SEFaultInjectExhaustParam", 
                    "description": []
                }, 
                "alert_test_syslog_snmp_params": {
                    "doc_type": "AlertTestSyslogSnmpParams", 
                    "py_type": "AlertTestSyslogSnmpParams", 
                    "name": "alert_test_syslog_snmp_params", 
                    "required": "False", 
                    "ref_type": "AlertTestSyslogSnmpParams", 
                    "description": []
                }, 
                "se_upgrade_params": {
                    "doc_type": "SeUpgradeParams", 
                    "py_type": "SeUpgradeParams", 
                    "name": "se_upgrade_params", 
                    "required": "False", 
                    "ref_type": "SeUpgradeParams", 
                    "description": []
                }, 
                "nsx_internal_params": {
                    "doc_type": "NsxInternalParams", 
                    "py_type": "NsxInternalParams", 
                    "name": "nsx_internal_params", 
                    "required": "False", 
                    "ref_type": "NsxInternalParams", 
                    "description": []
                }, 
                "nsx_sg_params": {
                    "doc_type": "NsxSgParams", 
                    "py_type": "NsxSgParams", 
                    "name": "nsx_sg_params", 
                    "required": "False", 
                    "ref_type": "NsxSgParams", 
                    "description": []
                }, 
                "vi_set_mgmt_ip_se_req": {
                    "doc_type": "VISetMgmtIpSEReq", 
                    "py_type": "VISetMgmtIpSEReq", 
                    "name": "vi_set_mgmt_ip_se_req", 
                    "required": "False", 
                    "ref_type": "VISetMgmtIpSEReq", 
                    "description": []
                }, 
                "cps_doser_filter": {
                    "doc_type": "CpsDoserFilter", 
                    "py_type": "CpsDoserFilter", 
                    "name": "cps_doser_filter", 
                    "required": "False", 
                    "ref_type": "CpsDoserFilter", 
                    "description": []
                }, 
                "nsx_login": {
                    "doc_type": "NsxLogin", 
                    "py_type": "NsxLogin", 
                    "name": "nsx_login", 
                    "required": "False", 
                    "ref_type": "NsxLogin", 
                    "description": []
                }, 
                "vs_resync_params": {
                    "doc_type": "VsResyncParams", 
                    "py_type": "VsResyncParams", 
                    "name": "vs_resync_params", 
                    "required": "False", 
                    "ref_type": "VsResyncParams", 
                    "description": []
                }, 
                "vi_retrieve_pg_names": {
                    "doc_type": "VIRetrievePGNames", 
                    "py_type": "VIRetrievePGNames", 
                    "name": "vi_retrieve_pg_names", 
                    "required": "False", 
                    "ref_type": "VIRetrievePGNames", 
                    "description": []
                }, 
                "alert_mgr_params": {
                    "doc_type": "AlertMgrParams", 
                    "py_type": "AlertMgrParams", 
                    "name": "alert_mgr_params", 
                    "required": "False", 
                    "ref_type": "AlertMgrParams", 
                    "description": []
                }, 
                "persistence_filter": {
                    "doc_type": "PersistenceFilter", 
                    "py_type": "PersistenceFilter", 
                    "name": "persistence_filter", 
                    "required": "False", 
                    "ref_type": "PersistenceFilter", 
                    "description": []
                }, 
                "aws_login": {
                    "doc_type": "AWSLogin", 
                    "py_type": "AWSLogin", 
                    "name": "aws_login", 
                    "required": "False", 
                    "ref_type": "AWSLogin", 
                    "description": []
                }, 
                "sys_test_email_params": {
                    "doc_type": "SysTestEmailParams", 
                    "py_type": "SysTestEmailParams", 
                    "name": "sys_test_email_params", 
                    "required": "False", 
                    "ref_type": "SysTestEmailParams", 
                    "description": []
                }, 
                "vi_delete_se_req": {
                    "doc_type": "VIDeleteSEReq", 
                    "py_type": "VIDeleteSEReq", 
                    "name": "vi_delete_se_req", 
                    "required": "False", 
                    "ref_type": "VIDeleteSEReq", 
                    "description": []
                }, 
                "vs_migrate_params": {
                    "doc_type": "VsMigrateParams", 
                    "py_type": "VsMigrateParams", 
                    "name": "vs_migrate_params", 
                    "required": "False", 
                    "ref_type": "VsMigrateParams", 
                    "description": []
                }, 
                "ms_login": {
                    "doc_type": "MesosLogin", 
                    "py_type": "MesosLogin", 
                    "name": "ms_login", 
                    "required": "False", 
                    "ref_type": "MesosLogin", 
                    "description": []
                }, 
                "vs_apic_extension": {
                    "doc_type": "VsApicExtension", 
                    "py_type": "VsApicExtension", 
                    "name": "vs_apic_extension", 
                    "required": "False", 
                    "ref_type": "VsApicExtension", 
                    "description": []
                }, 
                "docker_login": {
                    "doc_type": "DockerLogin", 
                    "py_type": "DockerLogin", 
                    "name": "docker_login", 
                    "required": "False", 
                    "ref_type": "DockerLogin", 
                    "description": []
                }, 
                "vcenter_login": {
                    "doc_type": "VcenterLogin", 
                    "py_type": "VcenterLogin", 
                    "name": "vcenter_login", 
                    "required": "False", 
                    "ref_type": "VcenterLogin", 
                    "description": []
                }, 
                "pool_server_state": {
                    "doc_type": "PoolServerState", 
                    "py_type": "PoolServerState", 
                    "name": "pool_server_state", 
                    "required": "False", 
                    "ref_type": "PoolServerState", 
                    "description": []
                }, 
                "se_switchover_params": {
                    "doc_type": "SeSwitchoverParams", 
                    "py_type": "SeSwitchoverParams", 
                    "name": "se_switchover_params", 
                    "required": "False", 
                    "ref_type": "SeSwitchoverParams", 
                    "description": []
                }, 
                "alert_test_email_params": {
                    "doc_type": "AlertTestEmailParams", 
                    "py_type": "AlertTestEmailParams", 
                    "name": "alert_test_email_params", 
                    "required": "False", 
                    "ref_type": "AlertTestEmailParams", 
                    "description": []
                }, 
                "vcenter_inventory_diag_req": {
                    "doc_type": "VcenterInventoryDiagReq", 
                    "py_type": "VcenterInventoryDiagReq", 
                    "name": "vcenter_inventory_diag_req", 
                    "required": "False", 
                    "ref_type": "VcenterInventoryDiagReq", 
                    "description": []
                }
            }
        }
    }, 
    "se_properties": {
        "SeBootupProperties": {
            "name": "SeBootupProperties", 
            "properties": {
                "distribute_queues": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "distribute_queues", 
                    "required": "False", 
                    "description": [
                        "Distributes queue ownership among cores so multiple cores handle dispatcher duties.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "se_dpdk_pmd": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_dpdk_pmd", 
                    "required": "False", 
                    "description": [
                        "Controls the use of dpdk poll mode driver      0        automatically determine based on hypervisor/nic type    1        unconditionally use dpdk", 
                        "poll mode driver    ~[0,1]   don't use dpdk poll mode driver."
                    ]
                }, 
                "se_pcap_pkt_count": {
                    "default_value": 256, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_pcap_pkt_count", 
                    "required": "False", 
                    "description": [
                        "Max number of packets the pcap interface can hold."
                    ]
                }, 
                "docker_backend_portstart": {
                    "default_value": 20480, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "docker_backend_portstart", 
                    "required": "False", 
                    "description": [
                        "Start of the local tcp port range used by se for backend connections in docker environment."
                    ]
                }, 
                "se_log_buffer_chunk_count": {
                    "default_value": 1024, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_log_buffer_chunk_count", 
                    "required": "False", 
                    "description": [
                        "Number of internal buffer chunks to use on service engine.", 
                        "Can be fine tuned for better performance of data plane in specific environments."
                    ]
                }, 
                "se_rum_sampling_res_interval": {
                    "default_value": 2, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_rum_sampling_res_interval", 
                    "required": "False", 
                    "description": [
                        "When sampling for resource timing data from the end user client.", 
                        "Minimum time to wait on server between samples."
                    ]
                }, 
                "se_dp_compression": {
                    "doc_type": "SeBootupCompressionProperties", 
                    "py_type": "SeBootupCompressionProperties", 
                    "name": "se_dp_compression", 
                    "required": "False", 
                    "ref_type": "SeBootupCompressionProperties", 
                    "description": []
                }, 
                "se_tunnel_mode": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_tunnel_mode", 
                    "required": "False", 
                    "description": [
                        "Determines if dsr from secondary se is active or not      0        automatically determine based on hypervisor type    1        disable dsr", 
                        "unconditionally    ~[0,1]   enable dsr unconditionally.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "se_rum_sampling_nav_percent": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_rum_sampling_nav_percent", 
                    "required": "False", 
                    "description": [
                        "Percentage of navigation timing data to sample from the end user client for client insights."
                    ]
                }, 
                "se_use_dpdk": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_use_dpdk", 
                    "required": "False", 
                    "description": [
                        "Determines if dpdk library should be used or not       0        automatically determine based on hypervisor type    1        use dpdk", 
                        "unconditionally    ~[0,1]   don't use dpdk."
                    ]
                }, 
                "se_emulated_cores": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_emulated_cores", 
                    "required": "False", 
                    "description": [
                        "Use this to emulate more/less cpus than is actually available.", 
                        "One datapath process is started for each core."
                    ]
                }, 
                "distribute_vnics": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "distribute_vnics", 
                    "required": "False", 
                    "description": [
                        "Distributes vnic ownership among cores so multiple cores handle dispatcher duties."
                    ]
                }, 
                "se_log_buffer_conn_blocking_dequeue": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "se_log_buffer_conn_blocking_dequeue", 
                    "required": "False", 
                    "description": [
                        "Internal flag that blocks dataplane until all connection logs are flushed to log-agent process."
                    ]
                }, 
                "se_lro": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_lro", 
                    "required": "False", 
                    "description": [
                        "Enable or disable large receive optimization for vnics."
                    ]
                }, 
                "l7_resvd_listen_conns_per_core": {
                    "default_value": 256, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "l7_resvd_listen_conns_per_core", 
                    "required": "False", 
                    "description": []
                }, 
                "se_log_buffer_connlog_size": {
                    "default_value": 1024, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_log_buffer_connlog_size", 
                    "required": "False", 
                    "description": [
                        "Internal connection log buffer size to use on service engine.", 
                        "Can be fine tuned for better performance of data plane in specific environments."
                    ]
                }, 
                "docker_backend_portend": {
                    "default_value": 30720, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "docker_backend_portend", 
                    "required": "False", 
                    "description": [
                        "End of the local tcp port range used by se for backend connections in docker environment."
                    ]
                }, 
                "se_rum_sampling_nav_interval": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_rum_sampling_nav_interval", 
                    "required": "False", 
                    "description": [
                        "When sampling for navigation timing data from the end user client.", 
                        "Minimum time to wait on server between samples."
                    ]
                }, 
                "se_log_buffer_events_blocking_dequeue": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "se_log_buffer_events_blocking_dequeue", 
                    "required": "False", 
                    "description": [
                        "Internal flag that blocks dataplane until all outstanding events are flushed to log-agent process."
                    ]
                }, 
                "tcp_syncache_hashsize": {
                    "default_value": 8192, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "tcp_syncache_hashsize", 
                    "required": "False", 
                    "description": [
                        "Size of the tcp syn cache hash table."
                    ]
                }, 
                "se_tx_batch_size": {
                    "default_value": 64, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_tx_batch_size", 
                    "required": "False", 
                    "description": [
                        "Number of packets to batch for transmit to the nic."
                    ]
                }, 
                "se_pcap_pkt_sz": {
                    "default_value": 65536, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_pcap_pkt_sz", 
                    "required": "False", 
                    "description": [
                        "Max size of each packet in the pcap interface."
                    ]
                }, 
                "geo_db_granularity": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "geo_db_granularity", 
                    "required": "False", 
                    "range": "1-20", 
                    "description": [
                        "Granularity or resolution of co-ordinates used.", 
                        "When the value is 1 the co-ordinates provided in the geo-db are used as is (highest resolution.this value provides a 'zoom-out' value so that", 
                        "coarser co-ordinates are used.", 
                        "With higher resolution, logs can contain finer location information.", 
                        "But, lower resolution provides significant memory and cpu benefits on the service engine.", 
                        "Besides, given a smaller number of members that are separated geographically, a lower resolution is sufficient for correct load-balancing.", 
                        "Allowed values are 1-20.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "se_log_buffer_app_blocking_dequeue": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "se_log_buffer_app_blocking_dequeue", 
                    "required": "False", 
                    "description": [
                        "Internal flag that blocks dataplane until all application logs are flushed to log-agent process."
                    ]
                }, 
                "fair_queueing_enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "fair_queueing_enabled", 
                    "required": "False", 
                    "description": [
                        "Enable or disable fair queueing for packet transmission among virtualservices on an se."
                    ]
                }, 
                "log_agent_debug_enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "log_agent_debug_enabled", 
                    "required": "False", 
                    "description": [
                        "Enable debug logs by default on service engine.", 
                        "This includes all other debugging logs.", 
                        "Debug logs can also be explcitly enabled from the cli shell."
                    ]
                }, 
                "se_ip_encap_ipc": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_ip_encap_ipc", 
                    "required": "False", 
                    "description": [
                        "Determines if se-se ipc messages are encapsulated in an ip header       0        automatically determine based on hypervisor type    1        use", 
                        "ip encap unconditionally    ~[0,1]   don't use ip encap."
                    ]
                }, 
                "se_log_buffer_applog_size": {
                    "default_value": 4096, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_log_buffer_applog_size", 
                    "required": "False", 
                    "description": [
                        "Internal application log buffer size to use on service engine.", 
                        "Can be fine tuned for better performance of data plane in specific environments."
                    ]
                }, 
                "se_rum_sampling_res_percent": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_rum_sampling_res_percent", 
                    "required": "False", 
                    "description": [
                        "Percentage of resource timing data to sample from the end user client for client insights."
                    ]
                }, 
                "se_log_buffer_events_size": {
                    "default_value": 512, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_log_buffer_events_size", 
                    "required": "False", 
                    "description": [
                        "Internal events buffer size to use on service engine.", 
                        "Can be fine tuned for better performance of data plane in specific environments."
                    ]
                }, 
                "ssl_sess_cache_timeout": {
                    "default_value": 86400, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ssl_sess_cache_timeout", 
                    "required": "False", 
                    "description": []
                }, 
                "se_l3_encap_ipc": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_l3_encap_ipc", 
                    "required": "False", 
                    "description": [
                        "Determines if se-se ipc messages use se interface ip instead of vip        0        automatically determine based on hypervisor type    1       ", 
                        "use se interface ip unconditionally    ~[0,1]   don't use se interface ip."
                    ]
                }, 
                "ssl_sess_cache_per_vs": {
                    "default_value": 4096, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ssl_sess_cache_per_vs", 
                    "required": "False", 
                    "description": []
                }, 
                "log_agent_trace_enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "log_agent_trace_enabled", 
                    "required": "False", 
                    "description": [
                        "Enable trace logs by default on service engine.", 
                        "Configuration operations are logged along with other important logs by service engine."
                    ]
                }, 
                "l7_conns_per_core": {
                    "default_value": 16384, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "l7_conns_per_core", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SeRuntimeCompressionProperties": {
            "name": "SeRuntimeCompressionProperties", 
            "properties": {
                "min_length": {
                    "default_value": 128, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "min_length", 
                    "required": "False", 
                    "description": [
                        "Minimum response content length to enable compression."
                    ]
                }, 
                "min_high_rtt": {
                    "default_value": 200, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "min_high_rtt", 
                    "required": "False", 
                    "description": [
                        "If client rtt is higher than this threshold, enable aggressive compression on the response."
                    ]
                }, 
                "max_low_rtt": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_low_rtt", 
                    "required": "False", 
                    "description": [
                        "If client rtt is higher than this threshold, enable normal compression on the response."
                    ]
                }
            }
        }, 
        "SeBootupCompressionProperties": {
            "name": "SeBootupCompressionProperties", 
            "properties": {
                "window_size": {
                    "default_value": 4096, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "window_size", 
                    "required": "False", 
                    "description": [
                        "Window size used by compression, rounded to the last power of 2."
                    ]
                }, 
                "buf_size": {
                    "default_value": 4096, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "buf_size", 
                    "required": "False", 
                    "description": [
                        "Size of each buffer used for compression output, this should ideally be a multiple of pagesize."
                    ]
                }, 
                "level_aggressive": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "level_aggressive", 
                    "required": "False", 
                    "description": [
                        "Level of compression to apply on content selected for aggressive compression."
                    ]
                }, 
                "buf_num": {
                    "default_value": 128, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "buf_num", 
                    "required": "False", 
                    "description": [
                        "Number of buffers to use for compression output."
                    ]
                }, 
                "level_normal": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "level_normal", 
                    "required": "False", 
                    "description": [
                        "Level of compression to apply on content selected for normal compression."
                    ]
                }, 
                "hash_size": {
                    "default_value": 16384, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "hash_size", 
                    "required": "False", 
                    "description": [
                        "Hash size used by compression, rounded to the last power of 2."
                    ]
                }
            }
        }, 
        "SeRateLimiters": {
            "name": "SeRateLimiters", 
            "properties": {
                "rst_rl": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "rst_rl", 
                    "required": "False", 
                    "description": [
                        "Rate limiter for number rst pkts sent in pps."
                    ]
                }, 
                "flow_probe_rl": {
                    "default_value": 250, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "flow_probe_rl", 
                    "required": "False", 
                    "description": [
                        "Rate limiter for number of flow probes in pps."
                    ]
                }, 
                "default_rl": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "default_rl", 
                    "required": "False", 
                    "description": [
                        "Default rate limiter in pps."
                    ]
                }, 
                "icmp_rl": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "icmp_rl", 
                    "required": "False", 
                    "description": [
                        "Rate limiter for icmp requests in pps."
                    ]
                }, 
                "icmp_rsp_rl": {
                    "default_value": 500, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "icmp_rsp_rl", 
                    "required": "False", 
                    "description": [
                        "Rate limiter for icmp response in pps."
                    ]
                }, 
                "arp_rl": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "arp_rl", 
                    "required": "False", 
                    "description": [
                        "Rate limiter for arp packets in pps."
                    ]
                }
            }
        }, 
        "SeRuntimeProperties": {
            "name": "SeRuntimeProperties", 
            "properties": {
                "upstream_connpool_conn_life_tmo": {
                    "default_value": -1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "upstream_connpool_conn_life_tmo", 
                    "required": "False", 
                    "description": []
                }, 
                "log_agent_max_active_adf_files_per_vs": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "log_agent_max_active_adf_files_per_vs", 
                    "required": "False", 
                    "description": [
                        "Maximum number of virtual service log files maintained for significant logs on the service engine."
                    ]
                }, 
                "se_auth_ldap_conns_per_server": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_auth_ldap_conns_per_server", 
                    "required": "False", 
                    "description": [
                        "Number of concurrent connections to ldap server by a single basic auth ldap process."
                    ]
                }, 
                "log_agent_file_sz_appl": {
                    "default_value": 4, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "log_agent_file_sz_appl", 
                    "required": "False", 
                    "description": [
                        "Maximum application log file size before rollover."
                    ]
                }, 
                "se_packet_buffer_max": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_packet_buffer_max", 
                    "required": "False", 
                    "description": [
                        "Internal use only.", 
                        "Used to artificially reduce the available number of packet buffers."
                    ]
                }, 
                "log_agent_max_logmessage_proto_sz": {
                    "default_value": 65536, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "log_agent_max_logmessage_proto_sz", 
                    "required": "False", 
                    "description": [
                        "Maximum size of serialized log message on the service engine."
                    ]
                }, 
                "se_malloc_thresh": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_malloc_thresh", 
                    "required": "False", 
                    "description": [
                        "Deprecated.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "se_hb_persist_fudge_bits": {
                    "default_value": 3, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_hb_persist_fudge_bits", 
                    "required": "False", 
                    "range": "0-7", 
                    "description": [
                        "Internal use only.", 
                        "Allowed values are 0-7."
                    ]
                }, 
                "upstream_connpool_conn_max_reuse": {
                    "default_value": -1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "upstream_connpool_conn_max_reuse", 
                    "required": "False", 
                    "description": []
                }, 
                "upstream_connpool_server_max_cache": {
                    "default_value": -1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "upstream_connpool_server_max_cache", 
                    "required": "False", 
                    "description": []
                }, 
                "dos_profile": {
                    "doc_type": "DosThresholdProfile", 
                    "py_type": "DosThresholdProfile", 
                    "name": "dos_profile", 
                    "required": "False", 
                    "ref_type": "DosThresholdProfile", 
                    "description": []
                }, 
                "dp_aggressive_hb_timeout_count": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_aggressive_hb_timeout_count", 
                    "required": "False", 
                    "description": [
                        "Consecutive hb failures after which failure is reported to controller,when aggressive failure mode detection is enabled."
                    ]
                }, 
                "se_metrics_rt_interval": {
                    "default_value": 1000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_metrics_rt_interval", 
                    "required": "False", 
                    "description": [
                        "Internal use only.", 
                        "Frequency (ms) of realtime metrics updates from se to controller."
                    ]
                }, 
                "service_ip_subnets": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "list", 
                    "name": "service_ip_subnets", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Ip ranges on which there may be virtual services (for configuring iptables/routes)."
                    ]
                }, 
                "persistence_mem_max": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "persistence_mem_max", 
                    "required": "False", 
                    "range": "0-33554432", 
                    "description": [
                        "Maximum memory in bytes allocated for persistence entries.", 
                        "Allowed values are 0-33554432."
                    ]
                }, 
                "http_rum_console_log": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "http_rum_console_log", 
                    "required": "False", 
                    "description": [
                        "Enable javascript console logs on the client browser when collecting client insights."
                    ]
                }, 
                "log_agent_log_storage_min_sz": {
                    "default_value": 1024, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "log_agent_log_storage_min_sz", 
                    "required": "False", 
                    "description": [
                        "Minimum storage allocated for logs irrespective of memory and cores."
                    ]
                }, 
                "se_random_tcp_drops": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "se_random_tcp_drops", 
                    "required": "False", 
                    "description": [
                        "Internal use only.", 
                        "If enabled, randomly packets are dropped."
                    ]
                }, 
                "se_dp_if_state_poll_interval": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_dp_if_state_poll_interval", 
                    "required": "False", 
                    "description": [
                        "Number of jiffies between polling interface state."
                    ]
                }, 
                "se_auth_ldap_cache_size": {
                    "default_value": 100000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_auth_ldap_cache_size", 
                    "required": "False", 
                    "description": [
                        "Size of ldap basicauth credentials cache used on the dataplane."
                    ]
                }, 
                "log_message_max_file_list_size": {
                    "default_value": 64, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "log_message_max_file_list_size", 
                    "required": "False", 
                    "description": [
                        "Maximum number of file names in a log message."
                    ]
                }, 
                "services_accessible_all_interfaces": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "services_accessible_all_interfaces", 
                    "required": "False", 
                    "description": [
                        "Make service ports accessible on all host interfaces in addition to east-west vip and/or bridge ip."
                    ]
                }, 
                "dupip_timeout_count": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dupip_timeout_count", 
                    "required": "False", 
                    "description": [
                        "Number of arp responses received for the vip after which se decides that the vip has been moved and disables the vip."
                    ]
                }, 
                "baremetal_dispatcher_handles_flows": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "baremetal_dispatcher_handles_flows", 
                    "required": "False", 
                    "description": [
                        "Control if dispatcher core also handles tcp flows in baremetal se."
                    ]
                }, 
                "upstream_connpool_cache_thresh": {
                    "default_value": -1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "upstream_connpool_cache_thresh", 
                    "required": "False", 
                    "description": []
                }, 
                "connections_lossy_log_rate_limiter_threshold": {
                    "default_value": 1000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "connections_lossy_log_rate_limiter_threshold", 
                    "required": "False", 
                    "description": [
                        "Rate limit on maximum adf lossy log to pushper second."
                    ]
                }, 
                "upstream_connpool_conn_idle_tmo": {
                    "default_value": -1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "upstream_connpool_conn_idle_tmo", 
                    "required": "False", 
                    "description": []
                }, 
                "log_agent_unknown_vs_timer": {
                    "default_value": 1800, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "log_agent_unknown_vs_timer", 
                    "required": "False", 
                    "description": [
                        "Timeout to purge unknown virtual service logs from the service engine."
                    ]
                }, 
                "upstream_connpool_strategy": {
                    "default_value": -1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "upstream_connpool_strategy", 
                    "required": "False", 
                    "description": []
                }, 
                "upstream_connpool_conn_idle_thresh_tmo": {
                    "default_value": -1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "upstream_connpool_conn_idle_thresh_tmo", 
                    "required": "False", 
                    "description": []
                }, 
                "log_agent_min_storage_per_vs": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "log_agent_min_storage_per_vs", 
                    "required": "False", 
                    "description": [
                        "Minimum storage allocated to any given virtualservice on the service engine."
                    ]
                }, 
                "feproxy_vips_enable_proxy_arp": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "feproxy_vips_enable_proxy_arp", 
                    "required": "False", 
                    "description": [
                        "Enable proxy arp from host interface for front end  proxies."
                    ]
                }, 
                "service_port_ranges": {
                    "doc_type": "PortRange", 
                    "py_type": "list", 
                    "name": "service_port_ranges", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "PortRange", 
                    "description": [
                        "Port ranges on which there may be virtual services (for configuring iptables).", 
                        "Applicable in container ecosystems like mesos."
                    ]
                }, 
                "scaleout_udp_per_pkt": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "scaleout_udp_per_pkt", 
                    "required": "False", 
                    "description": [
                        "Enable punting of udp packets from primary to other service engines.", 
                        "This applies to virtual services with per-packet loadbalancing enabled."
                    ]
                }, 
                "se_dp_log_nf_enqueue_percent": {
                    "default_value": 70, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_dp_log_nf_enqueue_percent", 
                    "required": "False", 
                    "description": [
                        "Internal buffer full indicator on the service engine beyond which the unfiltered logs are abandoned."
                    ]
                }, 
                "log_agent_conn_send_buffer_size": {
                    "default_value": 16384, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "log_agent_conn_send_buffer_size", 
                    "required": "False", 
                    "description": [
                        "Log-agent test property used to simulate slow tcp connections."
                    ]
                }, 
                "flow_table_batch_push_frequency": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "flow_table_batch_push_frequency", 
                    "required": "False", 
                    "description": [
                        "How often to push the flow table ipc messages in the main loop.", 
                        "The value is the number of times through the loop before pushing the batch.", 
                        "I.e, a value of 1 means every time through the loop."
                    ]
                }, 
                "log_agent_file_sz_conn": {
                    "default_value": 4, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "log_agent_file_sz_conn", 
                    "required": "False", 
                    "description": [
                        "Maximum connection log file size before rollover."
                    ]
                }, 
                "se_mac_error_threshold_to_disable_promiscious": {
                    "default_value": 1000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_mac_error_threshold_to_disable_promiscious", 
                    "required": "False", 
                    "description": [
                        "Number of packets with wrong mac after which se attempts to disable promiscious mode."
                    ]
                }, 
                "mcache_store_se_max_size": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "mcache_store_se_max_size", 
                    "required": "False", 
                    "description": []
                }, 
                "disable_flow_probes": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_flow_probes", 
                    "required": "False", 
                    "description": [
                        "Disable flow probes for scaled out vs'es.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "lbaction_rq_per_request_max_retries": {
                    "default_value": 22, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "lbaction_rq_per_request_max_retries", 
                    "required": "False", 
                    "description": [
                        "Maximum retries per request in the request queue."
                    ]
                }, 
                "lbaction_num_requests_to_dispatch": {
                    "default_value": 4, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "lbaction_num_requests_to_dispatch", 
                    "required": "False", 
                    "description": [
                        "Number of requests to dispatch from the request queue at a regular interval."
                    ]
                }, 
                "log_agent_file_sz_debug": {
                    "default_value": 4, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "log_agent_file_sz_debug", 
                    "required": "False", 
                    "description": [
                        "Maximum debug log file size before rollover."
                    ]
                }, 
                "connections_udfnf_log_rate_limiter_threshold": {
                    "default_value": 1000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "connections_udfnf_log_rate_limiter_threshold", 
                    "required": "False", 
                    "description": [
                        "Rate limit on maximum adf udf or nf log to pushper second."
                    ]
                }, 
                "upstream_send_timeout": {
                    "default_value": 3600000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "upstream_send_timeout", 
                    "required": "False", 
                    "description": []
                }, 
                "log_agent_max_storage_ignore_percent": {
                    "default_value": 10.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "log_agent_max_storage_ignore_percent", 
                    "required": "False", 
                    "description": [
                        "Maximum storage on the disk not allocated for logs on the service engine."
                    ]
                }, 
                "se_auth_ldap_reconnect_timeout": {
                    "default_value": 10000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_auth_ldap_reconnect_timeout", 
                    "required": "False", 
                    "description": [
                        "Ldap basicauth default reconnect timeout enforced on connections to ldap server."
                    ]
                }, 
                "log_agent_max_concurrent_rsync": {
                    "default_value": 1024, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "log_agent_max_concurrent_rsync", 
                    "required": "False", 
                    "description": [
                        "Maximum concurrent rsync requests initiated from log-agent to the controller."
                    ]
                }, 
                "log_agent_compress_logs": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "log_agent_compress_logs", 
                    "required": "False", 
                    "description": [
                        "Flag to indicate if log files are compressed upon full on the service engine."
                    ]
                }, 
                "upstream_connpool_core_max_cache": {
                    "default_value": -1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "upstream_connpool_core_max_cache", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_hb_frequency": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_hb_frequency", 
                    "required": "False", 
                    "description": [
                        "Frequency of se - se hb messages when aggressive failure mode detection is not enabled."
                    ]
                }, 
                "dupip_frequency": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dupip_frequency", 
                    "required": "False", 
                    "description": [
                        "Frequency of arp requests sent by se for each vip to detect duplicate ip when it loses conectivity to controller."
                    ]
                }, 
                "se_dp_compression": {
                    "doc_type": "SeRuntimeCompressionProperties", 
                    "py_type": "SeRuntimeCompressionProperties", 
                    "name": "se_dp_compression", 
                    "required": "False", 
                    "ref_type": "SeRuntimeCompressionProperties", 
                    "description": []
                }, 
                "dp_aggressive_hb_frequency": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_aggressive_hb_frequency", 
                    "required": "False", 
                    "description": [
                        "Frequency of se - se hb messages when aggressive failure mode detection is enabled."
                    ]
                }, 
                "log_agent_pause_interval": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "log_agent_pause_interval", 
                    "required": "False", 
                    "description": [
                        "Time interval log-agent pauses between logs obtained from the dataplane."
                    ]
                }, 
                "se_rate_limiters": {
                    "doc_type": "SeRateLimiters", 
                    "py_type": "SeRateLimiters", 
                    "name": "se_rate_limiters", 
                    "required": "False", 
                    "ref_type": "SeRateLimiters", 
                    "description": [
                        "Se rate limiters."
                    ]
                }, 
                "se_metrics_rt_enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "se_metrics_rt_enabled", 
                    "required": "False", 
                    "description": [
                        "Internal use only.", 
                        "Enable or disable real time metrics irrespective of virtualservice or se group configuration."
                    ]
                }, 
                "upstream_connpool_enable": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "upstream_connpool_enable", 
                    "required": "False", 
                    "description": []
                }, 
                "se_dp_vnic_queue_stall_threshold": {
                    "default_value": 10000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_dp_vnic_queue_stall_threshold", 
                    "required": "False", 
                    "description": [
                        "Number of consecutive transmit failures to look for before generating a vnic transmit queue stall event.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "persistence_entries_low_watermark": {
                    "default_value": 20000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "persistence_entries_low_watermark", 
                    "required": "False", 
                    "description": [
                        "Deprecated.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "flow_table_new_syn_max_entries": {
                    "default_value": 40000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "flow_table_new_syn_max_entries", 
                    "required": "False", 
                    "description": [
                        "Maximum number of flow table entries that have not completed tcp three-way handshake yet."
                    ]
                }, 
                "se_auth_ldap_connect_timeout": {
                    "default_value": 10000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_auth_ldap_connect_timeout", 
                    "required": "False", 
                    "description": [
                        "Ldap basicauth default connection timeout enforced on connections to ldap server."
                    ]
                }, 
                "log_agent_export_msg_buffer_size": {
                    "default_value": 524288, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "log_agent_export_msg_buffer_size", 
                    "required": "False", 
                    "description": [
                        "Maximum size of data sent by log-agent to controller over the tcp connection."
                    ]
                }, 
                "log_agent_max_storage_excess_percent": {
                    "default_value": 110, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "log_agent_max_storage_excess_percent", 
                    "required": "False", 
                    "description": [
                        "Excess percentage threshold of disk size to trigger cleanup of logs on the service engine."
                    ]
                }, 
                "se_auth_ldap_request_timeout": {
                    "default_value": 10000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_auth_ldap_request_timeout", 
                    "required": "False", 
                    "description": [
                        "Ldap basicauth default login or group search request timeout enforced on connections to ldap server."
                    ]
                }, 
                "upstream_connect_timeout": {
                    "default_value": 3600000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "upstream_connect_timeout", 
                    "required": "False", 
                    "description": []
                }, 
                "flow_table_max_entries_deprecated": {
                    "default_value": 100000000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "flow_table_max_entries_deprecated", 
                    "required": "False", 
                    "description": [
                        "Deprecated.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "downstream_send_timeout": {
                    "default_value": 3600000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "downstream_send_timeout", 
                    "required": "False", 
                    "description": []
                }, 
                "log_agent_file_sz_event": {
                    "default_value": 4, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "log_agent_file_sz_event", 
                    "required": "False", 
                    "description": [
                        "Maximum event log file size before rollover."
                    ]
                }, 
                "se_dp_log_udf_enqueue_percent": {
                    "default_value": 90, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_dp_log_udf_enqueue_percent", 
                    "required": "False", 
                    "description": [
                        "Internal buffer full indicator on the service engine beyond which the user filtered logs are abandoned."
                    ]
                }, 
                "spdy_fwd_proxy_parse_enable": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "spdy_fwd_proxy_parse_enable", 
                    "required": "False", 
                    "description": []
                }, 
                "se_dp_vnic_queue_stall_timeout": {
                    "default_value": 10000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_dp_vnic_queue_stall_timeout", 
                    "required": "False", 
                    "description": [
                        "Time (in milliseconds) to wait for network/nic recovery on detecting a transmit queue stall after which service engine asserts triggering a", 
                        "failover.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "se_dp_hm_drops": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_dp_hm_drops", 
                    "required": "False", 
                    "description": [
                        "Internal only.", 
                        "Used to simulate se - se hb failure."
                    ]
                }, 
                "se_memory_poison": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "se_memory_poison", 
                    "required": "False", 
                    "description": [
                        "Internal use only.", 
                        "Enables poisoning of freed memory blocks."
                    ]
                }, 
                "lb_fail_max_time": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "lb_fail_max_time", 
                    "required": "False", 
                    "description": [
                        "Deprecated.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "se_metrics_interval": {
                    "default_value": 60000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_metrics_interval", 
                    "required": "False", 
                    "description": [
                        "Internal use only.", 
                        "Frequency (ms) of metrics updates from se to controller."
                    ]
                }, 
                "log_agent_export_wait_time": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "log_agent_export_wait_time", 
                    "required": "False", 
                    "description": [
                        "Time log-agent waits before sending data to the controller."
                    ]
                }, 
                "se_dp_vnic_queue_stall_event_sleep": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_dp_vnic_queue_stall_event_sleep", 
                    "required": "False", 
                    "description": [
                        "Time (in seconds) service engine waits for after generating a vnic transmit queue stall event before asserting totrigger a failover.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "se_auth_ldap_bind_timeout": {
                    "default_value": 5000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_auth_ldap_bind_timeout", 
                    "required": "False", 
                    "description": [
                        "Ldap basicauth default bind timeout enforced on connections to ldap server."
                    ]
                }, 
                "se_auth_ldap_servers_failover_only": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "se_auth_ldap_servers_failover_only", 
                    "required": "False", 
                    "description": [
                        "Ldap basicauth uses multiple ldap servers in the event of a failover only."
                    ]
                }, 
                "http_rum_min_content_length": {
                    "default_value": 64, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "http_rum_min_content_length", 
                    "required": "False", 
                    "description": [
                        "Minimum response size content length to sample for client insights."
                    ]
                }, 
                "global_mtu": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "global_mtu", 
                    "required": "False", 
                    "description": [
                        "Overrides the mtu value received via dhcp or some other means.", 
                        "Use this when the infrastructure advertises an mtu that is not supported by all devices in the network.", 
                        "For example, in aws or when an overlay is used."
                    ]
                }, 
                "upstream_read_timeout": {
                    "default_value": 3600000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "upstream_read_timeout", 
                    "required": "False", 
                    "description": []
                }, 
                "se_handle_interface_routes": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "se_handle_interface_routes", 
                    "required": "False", 
                    "description": [
                        "Accept/ignore interface routes (i.e, no next hop ip address)."
                    ]
                }, 
                "upstream_keepalive": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "upstream_keepalive", 
                    "required": "False", 
                    "description": []
                }, 
                "tcp_syncache_max_retransmit_default": {
                    "default_value": 4, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "tcp_syncache_max_retransmit_default", 
                    "required": "False", 
                    "description": [
                        "Default value for max number of retransmissions for a syn packet."
                    ]
                }, 
                "tcp_syn_cache_max": {
                    "default_value": 32768, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "tcp_syn_cache_max", 
                    "required": "False", 
                    "description": [
                        "Maximum size of the syn cache table.", 
                        "After this limit is reached, syn cookies are used.", 
                        "This is per core of the serviceengine."
                    ]
                }, 
                "log_agent_sleep_interval": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "log_agent_sleep_interval", 
                    "required": "False", 
                    "description": [
                        "Internal timer to stall log-agent and prevent it from hogging cpu cycles on the service engine."
                    ]
                }, 
                "max_throughput": {
                    "default_value": 10000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_throughput", 
                    "required": "False", 
                    "description": [
                        "Deprecated.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "ngx_free_connection_stack": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "ngx_free_connection_stack", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_hb_timeout_count": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_hb_timeout_count", 
                    "required": "False", 
                    "description": [
                        "Consecutive hb failures after which failure is reported to controller, when aggressive failure mode detection is not enabled."
                    ]
                }, 
                "app_headers": {
                    "doc_type": "AppHdr", 
                    "py_type": "list", 
                    "name": "app_headers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "AppHdr", 
                    "description": []
                }
            }
        }, 
        "SeAgentProperties": {
            "name": "SeAgentProperties", 
            "properties": {
                "dp_enq_interval_msec": {
                    "default_value": 20, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_enq_interval_msec", 
                    "required": "False", 
                    "range": "1-1000", 
                    "description": [
                        "Allowed values are 1-1000."
                    ]
                }, 
                "sdb_scan_count": {
                    "default_value": 1000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "sdb_scan_count", 
                    "required": "False", 
                    "range": "1-1000", 
                    "description": [
                        "Sdb scan count.", 
                        "Allowed values are 1-1000."
                    ]
                }, 
                "dp_reg_pending_max_wait_time": {
                    "default_value": 75, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_reg_pending_max_wait_time", 
                    "required": "False", 
                    "description": [
                        "Max time to wait for dp registration before assert."
                    ]
                }, 
                "controller_echo_rpc_aggressive_timeout": {
                    "default_value": 2000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "controller_echo_rpc_aggressive_timeout", 
                    "required": "False", 
                    "description": [
                        "Aggressive timeout used for se health check."
                    ]
                }, 
                "dp_aggressive_enq_interval_msec": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_aggressive_enq_interval_msec", 
                    "required": "False", 
                    "range": "1-1000", 
                    "description": [
                        "Allowed values are 1-1000."
                    ]
                }, 
                "vnic_ip_delete_interval": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vnic_ip_delete_interval", 
                    "required": "False", 
                    "description": [
                        "Wait interval before deleting ip."
                    ]
                }, 
                "dp_max_wait_rsp_time_sec": {
                    "default_value": 12, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_max_wait_rsp_time_sec", 
                    "required": "False", 
                    "description": []
                }, 
                "controller_rpc_timeout": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "controller_rpc_timeout", 
                    "required": "False", 
                    "description": []
                }, 
                "headless_timeout_sec": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "headless_timeout_sec", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_aggressive_deq_interval_msec": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_aggressive_deq_interval_msec", 
                    "required": "False", 
                    "range": "1-1000", 
                    "description": [
                        "Allowed values are 1-1000."
                    ]
                }, 
                "controller_echo_rpc_timeout": {
                    "default_value": 2000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "controller_echo_rpc_timeout", 
                    "required": "False", 
                    "description": [
                        "Timeout used for se health check."
                    ]
                }, 
                "ignore_docker_mac_change": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "ignore_docker_mac_change", 
                    "required": "False", 
                    "description": []
                }, 
                "sdb_pipeline_size": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "sdb_pipeline_size", 
                    "required": "False", 
                    "range": "1-10000", 
                    "description": [
                        "Sdb pipeline size.", 
                        "Allowed values are 1-10000."
                    ]
                }, 
                "cpustats_interval": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "cpustats_interval", 
                    "required": "False", 
                    "description": []
                }, 
                "dp_batch_size": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_batch_size", 
                    "required": "False", 
                    "description": []
                }, 
                "vnic_probe_interval": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vnic_probe_interval", 
                    "required": "False", 
                    "description": [
                        "Probe vnic interval."
                    ]
                }, 
                "debug_mode": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "debug_mode", 
                    "required": "False", 
                    "description": []
                }, 
                "vnic_dhcp_ip_max_retries": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vnic_dhcp_ip_max_retries", 
                    "required": "False", 
                    "description": [
                        "Dhcp ip max retries."
                    ]
                }, 
                "dp_deq_interval_msec": {
                    "default_value": 20, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dp_deq_interval_msec", 
                    "required": "False", 
                    "range": "1-1000", 
                    "description": [
                        "Allowed values are 1-1000."
                    ]
                }, 
                "ctrl_reg_pending_max_wait_time": {
                    "default_value": 150, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ctrl_reg_pending_max_wait_time", 
                    "required": "False", 
                    "range": "1-1000", 
                    "description": [
                        "Max time to wait for ctrl registration before assert.", 
                        "Allowed values are 1-1000."
                    ]
                }, 
                "controller_heartbeat_miss_limit": {
                    "default_value": 6, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "controller_heartbeat_miss_limit", 
                    "required": "False", 
                    "range": "1-20", 
                    "description": [
                        "Allowed values are 1-20."
                    ]
                }, 
                "sdb_flush_interval": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "sdb_flush_interval", 
                    "required": "False", 
                    "range": "1-10000", 
                    "description": [
                        "Sdb pipeline flush interval.", 
                        "Allowed values are 1-10000."
                    ]
                }, 
                "controller_echo_miss_aggressive_limit": {
                    "default_value": 2, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "controller_echo_miss_aggressive_limit", 
                    "required": "False", 
                    "range": "1-1000", 
                    "description": [
                        "Aggressive count of hb misses for se health check failure.", 
                        "Allowed values are 1-1000."
                    ]
                }, 
                "controller_heartbeat_timeout_sec": {
                    "default_value": 12, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "controller_heartbeat_timeout_sec", 
                    "required": "False", 
                    "range": "1-60", 
                    "description": [
                        "Allowed values are 1-60."
                    ]
                }, 
                "controller_registration_timeout_sec": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "controller_registration_timeout_sec", 
                    "required": "False", 
                    "description": []
                }, 
                "controller_echo_miss_limit": {
                    "default_value": 4, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "controller_echo_miss_limit", 
                    "required": "False", 
                    "range": "1-1000", 
                    "description": [
                        "Count of hb misses for se health check failure.", 
                        "Allowed values are 1-1000."
                    ]
                }, 
                "vnic_dhcp_ip_check_interval": {
                    "default_value": 6, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vnic_dhcp_ip_check_interval", 
                    "required": "False", 
                    "range": "1-1000", 
                    "description": [
                        "Dhcp ip check interval.", 
                        "Allowed values are 1-1000."
                    ]
                }
            }
        }, 
        "SeProperties": {
            "name": "SeProperties", 
            "properties": {
                "se_agent_properties": {
                    "doc_type": "SeAgentProperties", 
                    "py_type": "SeAgentProperties", 
                    "name": "se_agent_properties", 
                    "required": "False", 
                    "ref_type": "SeAgentProperties", 
                    "description": []
                }, 
                "se_runtime_properties": {
                    "doc_type": "SeRuntimeProperties", 
                    "py_type": "SeRuntimeProperties", 
                    "name": "se_runtime_properties", 
                    "required": "False", 
                    "ref_type": "SeRuntimeProperties", 
                    "description": []
                }, 
                "se_bootup_properties": {
                    "doc_type": "SeBootupProperties", 
                    "py_type": "SeBootupProperties", 
                    "name": "se_bootup_properties", 
                    "required": "False", 
                    "ref_type": "SeBootupProperties", 
                    "description": []
                }, 
                "uuid": {
                    "default_value": "default", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "uuid", 
                    "required": "True", 
                    "description": []
                }
            }
        }
    }, 
    "se_log": {
        "LogMessage": {
            "name": "LogMessage", 
            "properties": {
                "lcmd": {
                    "doc_type": "LogCommand", 
                    "py_type": "LogCommand", 
                    "name": "lcmd", 
                    "required": "False", 
                    "ref_type": "LogCommand", 
                    "description": []
                }, 
                "matching_files": {
                    "doc_type": "FileInfo", 
                    "py_type": "list", 
                    "name": "matching_files", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "FileInfo", 
                    "description": []
                }, 
                "connlogs": {
                    "doc_type": "ConnectionLog", 
                    "py_type": "list", 
                    "name": "connlogs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ConnectionLog", 
                    "description": []
                }, 
                "eventlogs": {
                    "doc_type": "EventLog", 
                    "py_type": "list", 
                    "name": "eventlogs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "EventLog", 
                    "description": []
                }, 
                "lquery": {
                    "doc_type": "LogQuery", 
                    "py_type": "LogQuery", 
                    "name": "lquery", 
                    "required": "False", 
                    "ref_type": "LogQuery", 
                    "description": []
                }, 
                "alertconfigs": {
                    "doc_type": "AlertConfig", 
                    "py_type": "list", 
                    "name": "alertconfigs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "AlertConfig", 
                    "description": []
                }, 
                "uptodate_files": {
                    "doc_type": "FileInfo", 
                    "py_type": "list", 
                    "name": "uptodate_files", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "FileInfo", 
                    "description": []
                }, 
                "applogs": {
                    "doc_type": "ApplicationLog", 
                    "py_type": "list", 
                    "name": "applogs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ApplicationLog", 
                    "description": []
                }
            }
        }, 
        "LogQuery": {
            "name": "LogQuery", 
            "properties": {
                "format": {
                    "default_value": "json", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "format", 
                    "required": "False", 
                    "description": [
                        "Optional  choose a format for the data; options={'json','csv','txt'}; default='json'."
                    ]
                }, 
                "expstep": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "expstep", 
                    "required": "False", 
                    "description": [
                        "Optional; if set to true, then instead of default linear increases by 'step', we use an exponentially increasing steps; e.g., if step=2 and", 
                        "expstep=true, then the intervals in the responses will be of form  0-1, 1-2, 2-4, 4-8, 8-16, and so on.; default=false."
                    ]
                }, 
                "debug": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "debug", 
                    "required": "False", 
                    "description": [
                        "Optional; boolean; if set to true, then we include extra debugging info in the responses; default=false."
                    ]
                }, 
                "page_size": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "page_size", 
                    "required": "False", 
                    "description": [
                        "Optional; maximum number of records to return; default=10."
                    ]
                }, 
                "qrtype": {
                    "default_value": "QUERY_RANGE_TIME", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "qrtype", 
                    "required": "False", 
                    "option_values": [
                        "QUERY_RANGE_SEQ", 
                        "QUERY_RANGE_TIME"
                    ], 
                    "description": [
                        "Enum options - QUERY_RANGE_SEQ, QUERY_RANGE_TIME."
                    ]
                }, 
                "adf": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "adf", 
                    "required": "False", 
                    "description": [
                        "Optional; search logs matching avi defined (significant) filters; default=true."
                    ]
                }, 
                "start": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "start", 
                    "required": "False", 
                    "description": [
                        "Optional; start time stamp in iso8601 format; default=zero."
                    ]
                }, 
                "step": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "step", 
                    "required": "False", 
                    "description": [
                        "Optional; specify a step value in seconds to group results; this outputs a json object, by default, with counts of logs that fall in each step,", 
                        "along with the timestamp of the end of the step; tbd  summarization functions for other columns default=0."
                    ]
                }, 
                "udf": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "udf", 
                    "required": "False", 
                    "description": [
                        "Optional; search through logs meeting user defined filters; default=false."
                    ]
                }, 
                "nf": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "nf", 
                    "required": "False", 
                    "description": [
                        "Optional; search through the rest of the logs (i.e., logs that match neither adf nor udf); default=false."
                    ]
                }, 
                "timeout": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "timeout", 
                    "required": "False", 
                    "description": [
                        "Optional; specify the timeout (in seconds) for this query; default=5."
                    ]
                }, 
                "download": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "download", 
                    "required": "False", 
                    "description": [
                        "Optional; boolean; if set to true, then the results in the requested format will be downloaded as file.", 
                        "Also, the defaults for other options will be set as follows  format is set to csv; timeout is set to 10 seconds; page is set to 1; page_size is", 
                        "set to 10000; default=false."
                    ]
                }, 
                "type": {
                    "default_value": "QUERY_CONN_LOGS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "type", 
                    "required": "False", 
                    "option_values": [
                        "QUERY_CONN_LOGS", 
                        "QUERY_APP_LOGS", 
                        "QUERY_EVENT_LOGS"
                    ], 
                    "description": [
                        "Optional; type of logs requested; 0  connection logs, 1  application logs, 2  event logs; default=automatically detected based on the vs's app", 
                        "profile.", 
                        "Enum options - QUERY_CONN_LOGS, QUERY_APP_LOGS, QUERY_EVENT_LOGS."
                    ]
                }, 
                "page": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "page", 
                    "required": "False", 
                    "description": [
                        "Optional; for pagination support; default=1."
                    ]
                }
            }
        }, 
        "BackendServerConnection": {
            "name": "BackendServerConnection", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }
    }, 
    "gslb": {
        "GslbGeoDbEntry": {
            "name": "GslbGeoDbEntry", 
            "properties": {
                "priority": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "priority", 
                    "required": "False", 
                    "range": "1-100", 
                    "description": [
                        "Priority of this geodb entry.", 
                        "This value should be unique in a repeated list of geodb entries.", 
                        "Higher the value, then greater is the priority.", 
                        "Allowed values are 1-100.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "file": {
                    "doc_type": "GslbGeoDbFile", 
                    "py_type": "GslbGeoDbFile", 
                    "name": "file", 
                    "required": "False", 
                    "ref_type": "GslbGeoDbFile", 
                    "description": [
                        "This field describes the geodb file.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "GslbHealthMonitorProxy": {
            "name": "GslbHealthMonitorProxy", 
            "properties": {
                "proxy_type": {
                    "default_value": "GSLB_HEALTH_MONITOR_PROXY_PRIVATE_MEMBERS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "proxy_type", 
                    "required": "False", 
                    "option_values": [
                        "GSLB_HEALTH_MONITOR_PROXY_ALL_MEMBERS", 
                        "GSLB_HEALTH_MONITOR_PROXY_PRIVATE_MEMBERS"
                    ], 
                    "description": [
                        "This field identifies the health monitor proxy behavior.", 
                        "The designated site for health monitor proxy can monitor public or private or all the members of a given site.", 
                        "Enum options - GSLB_HEALTH_MONITOR_PROXY_ALL_MEMBERS, GSLB_HEALTH_MONITOR_PROXY_PRIVATE_MEMBERS.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "GslbClientIpAddrGroup": {
            "name": "GslbClientIpAddrGroup", 
            "properties": {
                "ranges": {
                    "doc_type": "IpAddrRange", 
                    "py_type": "list", 
                    "name": "ranges", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrRange", 
                    "description": [
                        "Configure ip address range(s).", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "prefixes": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "list", 
                    "name": "prefixes", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Configure ip address prefix(es).", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "type": {
                    "default_value": "GSLB_IP_PUBLIC", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "type", 
                    "required": "False", 
                    "option_values": [
                        "GSLB_IP_PUBLIC", 
                        "GSLB_IP_PRIVATE"
                    ], 
                    "description": [
                        "Specify whether this client ip address range is public or private.", 
                        "Enum options - GSLB_IP_PUBLIC, GSLB_IP_PRIVATE.", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "addrs": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "addrs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Configure ip address(es).", 
                        "Field introduced in 17.1.2."
                    ]
                }
            }
        }, 
        "GslbPool": {
            "name": "GslbPool", 
            "properties": {
                "priority": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "priority", 
                    "required": "False", 
                    "range": "1-100", 
                    "description": [
                        "Priority of this pool of members.", 
                        "If the priority of this is the highest in the group, dns service picks up only this member for dns responses.", 
                        "Allowed values are 1-100."
                    ]
                }, 
                "consistent_hash_mask": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "consistent_hash_mask", 
                    "required": "False", 
                    "range": "1-31", 
                    "description": [
                        "Mask to be applied on client ip for consistent hash algorithm.", 
                        "Allowed values are 1-31."
                    ]
                }, 
                "members": {
                    "doc_type": "GslbPoolMember", 
                    "py_type": "list", 
                    "name": "members", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbPoolMember", 
                    "description": [
                        "Select list of vips belonging to this gslb service."
                    ]
                }, 
                "algorithm": {
                    "default_value": "GSLB_ALGORITHM_ROUND_ROBIN", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "algorithm", 
                    "required": "False", 
                    "option_values": [
                        "GSLB_ALGORITHM_ROUND_ROBIN", 
                        "GSLB_ALGORITHM_CONSISTENT_HASH", 
                        "GSLB_ALGORITHM_GEO"
                    ], 
                    "description": [
                        "The load balancing algorithm will pick a local member within the gslb service list of available members.", 
                        "Enum options - GSLB_ALGORITHM_ROUND_ROBIN, GSLB_ALGORITHM_CONSISTENT_HASH, GSLB_ALGORITHM_GEO."
                    ]
                }
            }
        }, 
        "GslbService": {
            "name": "GslbService", 
            "properties": {
                "controller_health_status_enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "controller_health_status_enabled", 
                    "required": "False", 
                    "description": [
                        "Gs member's overall health status is derived based on a combination of controller and datapath health-status inputs.", 
                        "Note that the datapath status is determined by the association of health monitor profiles.", 
                        "Only the controller provided status is determined through this configuration."
                    ]
                }, 
                "wildcard_match": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "wildcard_match", 
                    "required": "False", 
                    "description": [
                        "Enable wild-card match of fqdn  if an exact match is not found in the dns table, the longest match is chosen by wild-carding the fqdn in the dns", 
                        "request.", 
                        "Default is false.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "down_response": {
                    "doc_type": "GslbServiceDownResponse", 
                    "py_type": "GslbServiceDownResponse", 
                    "name": "down_response", 
                    "required": "False", 
                    "ref_type": "GslbServiceDownResponse", 
                    "description": [
                        "Response to the client query when the gslb service is down."
                    ]
                }, 
                "enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enabled", 
                    "required": "False", 
                    "description": [
                        "Enable or disable the gslb service.", 
                        "If the gslb service is enabled, then the vips are sent in the dns responses based on reachability and configured algorithm.", 
                        "If the gslb service is disabled, then the vips are no longer available in the dns response."
                    ]
                }, 
                "use_edns_client_subnet": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_edns_client_subnet", 
                    "required": "False", 
                    "description": [
                        "Use the client ip subnet from the edns option as source ipaddress for client geo-location and consistent hash algorithm.", 
                        "Default is true.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "is_federated": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_federated", 
                    "required": "False", 
                    "description": [
                        "This field indicates that this object is replicated across gslb federation.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "num_dns_ip": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_dns_ip", 
                    "required": "False", 
                    "range": "1-20", 
                    "special_values": [
                        "'Return all IP addresses'"
                    ], 
                    "description": [
                        "Number of ip addresses of this gslb service to be returned by the dns service.", 
                        "Enter 0 to return all ip addresses.", 
                        "Allowed values are 1-20.", 
                        "Special values are 0- 'return all ip addresses'."
                    ]
                }, 
                "groups": {
                    "doc_type": "GslbPool", 
                    "py_type": "list", 
                    "name": "groups", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbPool", 
                    "description": [
                        "Select list of pools belonging to this gslb service."
                    ]
                }, 
                "ttl": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ttl", 
                    "required": "False", 
                    "range": "1-86400", 
                    "description": [
                        "Ttl value (in seconds) for records served for this gslb service by the dns service.", 
                        "Allowed values are 1-86400."
                    ]
                }, 
                "health_monitor_scope": {
                    "default_value": "GSLB_SERVICE_HEALTH_MONITOR_ALL_MEMBERS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "health_monitor_scope", 
                    "required": "False", 
                    "option_values": [
                        "GSLB_SERVICE_HEALTH_MONITOR_ALL_MEMBERS", 
                        "GSLB_SERVICE_HEALTH_MONITOR_ONLY_NON_AVI_MEMBERS"
                    ], 
                    "description": [
                        "Health monitor probe can be executed for all the members or it can be executed only for third-party members.", 
                        "This operational mode is useful to reduce the number of health monitor probes in case of a hybrid scenario.", 
                        "In such a case, avi members can have controller derived status while non-avi members can be probed by via health monitor probes in dataplane.", 
                        "Enum options - GSLB_SERVICE_HEALTH_MONITOR_ALL_MEMBERS, GSLB_SERVICE_HEALTH_MONITOR_ONLY_NON_AVI_MEMBERS."
                    ]
                }
            }
        }, 
        "GslbPoolMember": {
            "name": "GslbPoolMember", 
            "properties": {
                "ratio": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ratio", 
                    "required": "False", 
                    "range": "1-20", 
                    "description": [
                        "Overrides the default ratio of 1.", 
                        "Reduces the percentage the lb algorithm would pick the server in relation to its peers.", 
                        "Range is 1-20.", 
                        "Allowed values are 1-20."
                    ]
                }, 
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address of the pool member.", 
                        "If this ip address is hosted via an avi virtual service, then the user should configure the cluster uuid and virtual service uuid.", 
                        "If this ip address is hosted on a third-party device and the device is tagged/tethered to a third-party site, then user can configure the", 
                        "third-party site uuid.", 
                        "User may configure the ip address without the cluster uuid or the virtual service uuid.", 
                        "In this option, some advanced site related features cannot be enabled.", 
                        "If the user has configured a fqdn for the pool member, then it takes precedence and will overwrite the configured ip address."
                    ]
                }, 
                "enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enabled", 
                    "required": "False", 
                    "description": [
                        "Enable or disable member to decide if this address should be provided in dns responses."
                    ]
                }, 
                "public_ip": {
                    "doc_type": "GslbIpAddr", 
                    "py_type": "GslbIpAddr", 
                    "name": "public_ip", 
                    "required": "False", 
                    "ref_type": "GslbIpAddr", 
                    "description": [
                        "Alternate ip addresses of the pool member.", 
                        "In usual deployments, the vip in the virtual service is a private ip address.", 
                        "This gets configured in the 'ip' field of the gslb service.", 
                        "This field is used to host the public ip address for the vip, which gets nated to the private ip by a firewall.", 
                        "Client dns requests coming in from within the intranet should have the private ip served in the a record, and requests from outside this should", 
                        "be served the public ip address.", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "location": {
                    "doc_type": "GslbGeoLocation", 
                    "py_type": "GslbGeoLocation", 
                    "name": "location", 
                    "required": "False", 
                    "ref_type": "GslbGeoLocation", 
                    "description": [
                        "Geographic location of the pool member.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "hm_proxies": {
                    "doc_type": "GslbHealthMonitorProxy", 
                    "py_type": "list", 
                    "name": "hm_proxies", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbHealthMonitorProxy", 
                    "description": [
                        "Internal generated system-field.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "GslbGeoDbFile": {
            "name": "GslbGeoDbFile", 
            "properties": {
                "format": {
                    "default_value": "GSLB_GEODB_FILE_FORMAT_AVI", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "format", 
                    "required": "False", 
                    "option_values": [
                        "GSLB_GEODB_FILE_FORMAT_AVI", 
                        "GSLB_GEODB_FILE_FORMAT_MAXMIND_CITY"
                    ], 
                    "description": [
                        "This field indicates the file format.", 
                        "Enum options - GSLB_GEODB_FILE_FORMAT_AVI, GSLB_GEODB_FILE_FORMAT_MAXMIND_CITY.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "GslbGeoDbProfile": {
            "name": "GslbGeoDbProfile", 
            "properties": {
                "is_federated": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_federated", 
                    "required": "False", 
                    "description": [
                        "This field indicates that this object is replicated across gslb federation.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "entries": {
                    "doc_type": "GslbGeoDbEntry", 
                    "py_type": "list", 
                    "name": "entries", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbGeoDbEntry", 
                    "description": [
                        "List of geodb entries.", 
                        "An entry can either be a geodb file or an ip address group with geo properties.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "GslbIpAddr": {
            "name": "GslbIpAddr", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Public ip address of the pool member.", 
                        "Field introduced in 17.1.2."
                    ]
                }
            }
        }, 
        "GslbSite": {
            "name": "GslbSite", 
            "properties": {
                "ratio": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ratio", 
                    "required": "False", 
                    "range": "1-20", 
                    "description": [
                        "User can overide the individual gslbpoolmember ratio for all the vips/vs(es) of this site.", 
                        "If this field is not  configured then the gslbpoolmember ratio gets applied.", 
                        "Allowed values are 1-20.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "ip_addresses": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "ip_addresses", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address(es) of the site's cluster.", 
                        "For a 3-node cluster, either the cluster vip is provided, or the list of controller ips in the cluster are provided."
                    ]
                }, 
                "enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enabled", 
                    "required": "False", 
                    "description": [
                        "Enable or disable the site.", 
                        "This is useful in maintenance scenarios such as upgrade and routine maintenance.", 
                        "A disabled site's configuration shall be retained but it will not get any new configuration updates.", 
                        "It shall not participate in health-status monitoring.", 
                        "Vips of the virtual services on the disabled site shall not be sent in dns response.", 
                        "When a site transitions from disabled to enabled, it is treated similar to the addition of a new site."
                    ]
                }, 
                "member_type": {
                    "default_value": "GSLB_PASSIVE_MEMBER", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "member_type", 
                    "required": "False", 
                    "option_values": [
                        "GSLB_ACTIVE_MEMBER", 
                        "GSLB_PASSIVE_MEMBER"
                    ], 
                    "description": [
                        "The site's member type  a leader is set to active while allmembers are set to passive.", 
                        "Enum options - GSLB_ACTIVE_MEMBER, GSLB_PASSIVE_MEMBER."
                    ]
                }, 
                "location": {
                    "doc_type": "GslbGeoLocation", 
                    "py_type": "GslbGeoLocation", 
                    "name": "location", 
                    "required": "False", 
                    "ref_type": "GslbGeoLocation", 
                    "description": [
                        "Geographic location of the site.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "hm_proxies": {
                    "doc_type": "GslbHealthMonitorProxy", 
                    "py_type": "list", 
                    "name": "hm_proxies", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbHealthMonitorProxy", 
                    "description": [
                        "User can designate certain avi sites to run health monitor probes for vips/vs(es) for this site.", 
                        "This is useful in network deployments where the vips/vs(es) are reachable only from certain sites.", 
                        "A typical scenario is a firewall between two gslb sites.", 
                        "User may want to run health monitor probes from sites on either side of the firewall so that each designated site can derive a datapath view of", 
                        "the reachable members.", 
                        "If the health monitor proxies are not configured, then the default behavior is to run health monitor probes from all the active sites.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "port": {
                    "default_value": 443, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "port", 
                    "required": "False", 
                    "range": "1-65535", 
                    "description": [
                        "The site controller cluster's rest api port number.", 
                        "Allowed values are 1-65535."
                    ]
                }
            }
        }, 
        "GslbThirdPartySite": {
            "name": "GslbThirdPartySite", 
            "properties": {
                "ratio": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ratio", 
                    "required": "False", 
                    "range": "1-20", 
                    "description": [
                        "User can overide the individual gslbpoolmember ratio for all the vips of this site.", 
                        "If this field is not configured, then the gslbpoolmember ratio gets applied.", 
                        "Allowed values are 1-20.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enabled", 
                    "required": "False", 
                    "description": [
                        "Enable or disable the third-party site.", 
                        "This is useful in maintenance scenarios such as upgrade and routine maintenance.", 
                        "A disabled site's configuration shall be retained  but it will not get any new configuration updates.", 
                        "Vips associated with the disabled site shall not be sent in dns response.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "location": {
                    "doc_type": "GslbGeoLocation", 
                    "py_type": "GslbGeoLocation", 
                    "name": "location", 
                    "required": "False", 
                    "ref_type": "GslbGeoLocation", 
                    "description": [
                        "Geographic location of the site.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "hm_proxies": {
                    "doc_type": "GslbHealthMonitorProxy", 
                    "py_type": "list", 
                    "name": "hm_proxies", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbHealthMonitorProxy", 
                    "description": [
                        "User can designate certain avi sites to run health monitor probes for vips/vs(es) for this site.", 
                        "This is useful in network deployments where the vips/vs(es) are reachable only from certain sites.", 
                        "A typical scenario is a firewall between two gslb sites.", 
                        "User may want to run health monitor probes from sites on either side of the firewall so that each designated site can derive a datapath view of", 
                        "the reachable members.", 
                        "If the health monitor proxies are not configured, then the default behavior is to run health monitor probes from all the active sites.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "GslbServiceDownResponse": {
            "name": "GslbServiceDownResponse", 
            "properties": {
                "type": {
                    "default_value": "GSLB_SERVICE_DOWN_RESPONSE_NONE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "type", 
                    "required": "False", 
                    "option_values": [
                        "GSLB_SERVICE_DOWN_RESPONSE_NONE", 
                        "GSLB_SERVICE_DOWN_RESPONSE_ALL_RECORDS", 
                        "GSLB_SERVICE_DOWN_RESPONSE_FALLBACK_IP", 
                        "GSLB_SERVICE_DOWN_RESPONSE_EMPTY"
                    ], 
                    "description": [
                        "Response from dns service towards the client when the gslb service is down.", 
                        "Enum options - GSLB_SERVICE_DOWN_RESPONSE_NONE, GSLB_SERVICE_DOWN_RESPONSE_ALL_RECORDS, GSLB_SERVICE_DOWN_RESPONSE_FALLBACK_IP,", 
                        "GSLB_SERVICE_DOWN_RESPONSE_EMPTY."
                    ]
                }, 
                "fallback_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "fallback_ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Fallback ip address to use in response to the client query when the gslb service is down."
                    ]
                }
            }
        }, 
        "Gslb": {
            "name": "Gslb", 
            "properties": {
                "view_id": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "view_id", 
                    "required": "False", 
                    "description": [
                        "The view-id is used in maintenance mode to differentiate partitioned groups while they havethe same gslb namespace.", 
                        "Each partitioned groupwill be able to operate independently by using theview-id."
                    ]
                }, 
                "sites": {
                    "doc_type": "GslbSite", 
                    "py_type": "list", 
                    "name": "sites", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbSite", 
                    "description": [
                        "Select avi site member belonging to this gslb."
                    ]
                }, 
                "clear_on_max_retries": {
                    "default_value": 20, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "clear_on_max_retries", 
                    "required": "False", 
                    "range": "1-1024", 
                    "description": [
                        "Max retries after which the remote site is treatedas a fresh start.", 
                        "In fresh start all the configsare downloaded.", 
                        "Allowed values are 1-1024."
                    ]
                }, 
                "send_interval": {
                    "default_value": 15, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "send_interval", 
                    "required": "False", 
                    "range": "1-3600", 
                    "description": [
                        "Frequency with which group members communicate.", 
                        "Allowed values are 1-3600."
                    ]
                }, 
                "dns_configs": {
                    "doc_type": "DNSConfig", 
                    "py_type": "list", 
                    "name": "dns_configs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DNSConfig", 
                    "description": [
                        "Sub domain configuration for the gslb.", 
                        "Gslb service's fqdn must be a match one of these subdomains."
                    ]
                }, 
                "is_federated": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_federated", 
                    "required": "False", 
                    "description": [
                        "This field indicates that this object is replicated across gslb federation.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "client_ip_addr_group": {
                    "doc_type": "GslbClientIpAddrGroup", 
                    "py_type": "GslbClientIpAddrGroup", 
                    "name": "client_ip_addr_group", 
                    "required": "False", 
                    "ref_type": "GslbClientIpAddrGroup", 
                    "description": [
                        "Group to specify if the client ip addresses are public or private.", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "third_party_sites": {
                    "doc_type": "GslbThirdPartySite", 
                    "py_type": "list", 
                    "name": "third_party_sites", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbThirdPartySite", 
                    "description": [
                        "Third party site member belonging to this gslb.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "GslbGeoLocation": {
            "name": "GslbGeoLocation", 
            "properties": {
                "location": {
                    "doc_type": "GeoLocation", 
                    "py_type": "GeoLocation", 
                    "name": "location", 
                    "required": "False", 
                    "ref_type": "GeoLocation", 
                    "description": [
                        "Geographic location of the site.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }
    }, 
    "clustering": {
        "ClusterNode": {
            "name": "ClusterNode", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address of controller vm."
                    ]
                }, 
                "name": {
                    "default_value": "node", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "name", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "ClusterOperationalStatus": {
            "name": "ClusterOperationalStatus", 
            "properties": {
                "last_changed_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_changed_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }
            }
        }, 
        "Cluster": {
            "name": "Cluster", 
            "properties": {
                "nodes": {
                    "doc_type": "ClusterNode", 
                    "py_type": "list", 
                    "name": "nodes", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ClusterNode", 
                    "description": []
                }, 
                "virtual_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "virtual_ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "A virtual ip address.", 
                        "This ip address will be dynamically reconfigured so that it always is the ip of the cluster leader."
                    ]
                }, 
                "rejoin_nodes_automatically": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "rejoin_nodes_automatically", 
                    "required": "False", 
                    "description": [
                        "Re-join cluster nodes automatically in the event one of the node is reset to factory."
                    ]
                }
            }
        }, 
        "ClusterReboot": {
            "name": "ClusterReboot", 
            "properties": {
                "mode": {
                    "default_value": "REBOOT_COLD", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "mode", 
                    "required": "True", 
                    "option_values": [
                        "REBOOT_COLD", 
                        "REBOOT_WARM", 
                        "REBOOT_CLEAN"
                    ], 
                    "description": [
                        "Reboot mode.", 
                        "Enum options - REBOOT_COLD, REBOOT_WARM, REBOOT_CLEAN."
                    ]
                }
            }
        }, 
        "ClusterServiceState": {
            "name": "ClusterServiceState", 
            "properties": {
                "cluster_nodes": {
                    "doc_type": "ClusterNode", 
                    "py_type": "list", 
                    "name": "cluster_nodes", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ClusterNode", 
                    "description": [
                        "Nodes participating in the service."
                    ]
                }
            }
        }, 
        "ClusterRuntime": {
            "name": "ClusterRuntime", 
            "properties": {
                "overall_state": {
                    "default_value": "CONTROLLER_WORKERS_INITIALIZING", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "overall_state", 
                    "required": "False", 
                    "option_values": [
                        "CONTROLLER_WORKERS_INITIALIZING", 
                        "CONTROLLER_WORKERS_ALL_UP"
                    ], 
                    "description": [
                        "Enum options - CONTROLLER_WORKERS_INITIALIZING, CONTROLLER_WORKERS_ALL_UP."
                    ]
                }, 
                "upgrade_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "upgrade_in_progress", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "ClusterState": {
            "name": "ClusterState", 
            "properties": {
                "node_states": {
                    "doc_type": "ClusterNodeState", 
                    "py_type": "list", 
                    "name": "node_states", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ClusterNodeState", 
                    "description": []
                }, 
                "service_states": {
                    "doc_type": "ClusterServiceState", 
                    "py_type": "list", 
                    "name": "service_states", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ClusterServiceState", 
                    "description": []
                }, 
                "cluster_state": {
                    "doc_type": "ClusterOperationalStatus", 
                    "py_type": "ClusterOperationalStatus", 
                    "name": "cluster_state", 
                    "required": "True", 
                    "ref_type": "ClusterOperationalStatus", 
                    "description": []
                }
            }
        }
    }, 
    "snmp": {
        "SnmpTrapProfile": {
            "name": "SnmpTrapProfile", 
            "properties": {
                "trap_servers": {
                    "doc_type": "SnmpTrapServer", 
                    "py_type": "list", 
                    "name": "trap_servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SnmpTrapServer", 
                    "description": [
                        "The ip address or hostname of the snmp trap destination server."
                    ]
                }
            }
        }, 
        "SnmpTrapServer": {
            "name": "SnmpTrapServer", 
            "properties": {
                "ip_addr": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip_addr", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address of the snmp trap destination."
                    ]
                }, 
                "community": {
                    "default_value": "public", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "community", 
                    "required": "True", 
                    "description": [
                        "The community string to communicate with the trap server."
                    ]
                }
            }
        }, 
        "SnmpConfiguration": {
            "name": "SnmpConfiguration", 
            "properties": {
                "sys_contact": {
                    "default_value": "support@avinetworks.com", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "sys_contact", 
                    "required": "False", 
                    "description": [
                        "Sets the syscontact in system mib."
                    ]
                }
            }
        }
    }, 
    "system": {
        "DNSConfiguration": {
            "name": "DNSConfiguration", 
            "properties": {
                "server_list": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "server_list", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": [
                        "List of dns server ip addresses."
                    ]
                }
            }
        }, 
        "SystemConfiguration": {
            "name": "SystemConfiguration", 
            "properties": {
                "email_configuration": {
                    "doc_type": "EmailConfiguration", 
                    "py_type": "EmailConfiguration", 
                    "name": "email_configuration", 
                    "required": "False", 
                    "ref_type": "EmailConfiguration", 
                    "description": []
                }, 
                "global_tenant_config": {
                    "doc_type": "TenantConfiguration", 
                    "py_type": "TenantConfiguration", 
                    "name": "global_tenant_config", 
                    "required": "False", 
                    "ref_type": "TenantConfiguration", 
                    "description": []
                }, 
                "dns_configuration": {
                    "doc_type": "DNSConfiguration", 
                    "py_type": "DNSConfiguration", 
                    "name": "dns_configuration", 
                    "required": "False", 
                    "ref_type": "DNSConfiguration", 
                    "description": []
                }, 
                "proxy_configuration": {
                    "doc_type": "ProxyConfiguration", 
                    "py_type": "ProxyConfiguration", 
                    "name": "proxy_configuration", 
                    "required": "False", 
                    "ref_type": "ProxyConfiguration", 
                    "description": []
                }, 
                "docker_mode": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "docker_mode", 
                    "required": "False", 
                    "description": []
                }, 
                "snmp_configuration": {
                    "doc_type": "SnmpConfiguration", 
                    "py_type": "SnmpConfiguration", 
                    "name": "snmp_configuration", 
                    "required": "False", 
                    "ref_type": "SnmpConfiguration", 
                    "description": []
                }, 
                "linux_configuration": {
                    "doc_type": "LinuxConfiguration", 
                    "py_type": "LinuxConfiguration", 
                    "name": "linux_configuration", 
                    "required": "False", 
                    "ref_type": "LinuxConfiguration", 
                    "description": []
                }, 
                "portal_configuration": {
                    "doc_type": "PortalConfiguration", 
                    "py_type": "PortalConfiguration", 
                    "name": "portal_configuration", 
                    "required": "False", 
                    "ref_type": "PortalConfiguration", 
                    "description": []
                }, 
                "ntp_configuration": {
                    "doc_type": "NTPConfiguration", 
                    "py_type": "NTPConfiguration", 
                    "name": "ntp_configuration", 
                    "required": "False", 
                    "ref_type": "NTPConfiguration", 
                    "description": []
                }, 
                "admin_auth_configuration": {
                    "doc_type": "AdminAuthConfiguration", 
                    "py_type": "AdminAuthConfiguration", 
                    "name": "admin_auth_configuration", 
                    "required": "False", 
                    "ref_type": "AdminAuthConfiguration", 
                    "description": []
                }, 
                "mgmt_ip_access_control": {
                    "doc_type": "MgmtIpAccessControl", 
                    "py_type": "MgmtIpAccessControl", 
                    "name": "mgmt_ip_access_control", 
                    "required": "False", 
                    "ref_type": "MgmtIpAccessControl", 
                    "description": [
                        "Configure ip access control for controller to restrict open access."
                    ]
                }
            }
        }, 
        "NTPAuthenticationKey": {
            "name": "NTPAuthenticationKey", 
            "properties": {
                "key_number": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "key_number", 
                    "required": "False", 
                    "range": "1-65534", 
                    "description": [
                        "Key number to be assigned to the authentication-key.", 
                        "Allowed values are 1-65534."
                    ]
                }, 
                "algorithm": {
                    "default_value": "NTP_AUTH_ALGORITHM_MD5", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "algorithm", 
                    "required": "False", 
                    "option_values": [
                        "NTP_AUTH_ALGORITHM_MD5", 
                        "NTP_AUTH_ALGORITHM_SHA1"
                    ], 
                    "description": [
                        "Message digest algorithm used for ntp authentication.", 
                        "Default is ntp_auth_algorithm_md5.", 
                        "Enum options - NTP_AUTH_ALGORITHM_MD5, NTP_AUTH_ALGORITHM_SHA1."
                    ]
                }
            }
        }, 
        "AdminAuthConfiguration": {
            "name": "AdminAuthConfiguration", 
            "properties": {
                "mapping_rules": {
                    "doc_type": "AuthMappingRule", 
                    "py_type": "list", 
                    "name": "mapping_rules", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "AuthMappingRule", 
                    "description": [
                        "Rules list for tenant or role mapping."
                    ]
                }, 
                "allow_local_user_login": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "allow_local_user_login", 
                    "required": "False", 
                    "description": [
                        "Allow any user created locally to login with local credentials.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "NTPServer": {
            "name": "NTPServer", 
            "properties": {
                "key_number": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "key_number", 
                    "required": "False", 
                    "range": "1-65534", 
                    "description": [
                        "Key number from the list of trusted keys used to authenticate this server.", 
                        "Allowed values are 1-65534."
                    ]
                }, 
                "server": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "server", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address of the ntp server."
                    ]
                }
            }
        }, 
        "EmailConfiguration": {
            "name": "EmailConfiguration", 
            "properties": {
                "mail_server_port": {
                    "default_value": 25, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "mail_server_port", 
                    "required": "False", 
                    "description": [
                        "Mail server port."
                    ]
                }, 
                "mail_server_name": {
                    "default_value": "localhost", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "mail_server_name", 
                    "required": "False", 
                    "description": [
                        "Mail server host."
                    ]
                }, 
                "smtp_type": {
                    "default_value": "SMTP_LOCAL_HOST", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "smtp_type", 
                    "required": "True", 
                    "option_values": [
                        "SMTP_NONE", 
                        "SMTP_LOCAL_HOST", 
                        "SMTP_SERVER", 
                        "SMTP_ANONYMOUS_SERVER"
                    ], 
                    "description": [
                        "Type of smtp mail service.", 
                        "Enum options - SMTP_NONE, SMTP_LOCAL_HOST, SMTP_SERVER, SMTP_ANONYMOUS_SERVER."
                    ]
                }, 
                "from_email": {
                    "default_value": "admin@avicontroller.net", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "from_email", 
                    "required": "False", 
                    "description": [
                        "Email address in from field."
                    ]
                }
            }
        }, 
        "PortalConfiguration": {
            "name": "PortalConfiguration", 
            "properties": {
                "use_uuid_from_input": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_uuid_from_input", 
                    "required": "False", 
                    "description": [
                        "Use uuid in post object data as uuid of the new object, instead of a generated uuid."
                    ]
                }, 
                "redirect_to_https": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "redirect_to_https", 
                    "required": "False", 
                    "description": []
                }, 
                "disable_remote_cli_shell": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_remote_cli_shell", 
                    "required": "False", 
                    "description": [
                        "Disable remote cli shell client access."
                    ]
                }, 
                "enable_clickjacking_protection": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_clickjacking_protection", 
                    "required": "False", 
                    "description": [
                        "Enable/disable clickjacking protection."
                    ]
                }, 
                "enable_https": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_https", 
                    "required": "False", 
                    "description": []
                }, 
                "allow_basic_authentication": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "allow_basic_authentication", 
                    "required": "False", 
                    "description": [
                        "Enable/disable http basic authentication."
                    ]
                }, 
                "password_strength_check": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "password_strength_check", 
                    "required": "False", 
                    "description": [
                        "Strict checking of password strength for user accounts."
                    ]
                }, 
                "enable_http": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_http", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "NTPConfiguration": {
            "name": "NTPConfiguration", 
            "properties": {
                "ntp_servers": {
                    "doc_type": "NTPServer", 
                    "py_type": "list", 
                    "name": "ntp_servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NTPServer", 
                    "description": [
                        "List of ntp servers."
                    ]
                }, 
                "ntp_authentication_keys": {
                    "doc_type": "NTPAuthenticationKey", 
                    "py_type": "list", 
                    "name": "ntp_authentication_keys", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NTPAuthenticationKey", 
                    "description": [
                        "Ntp authentication keys."
                    ]
                }, 
                "ntp_server_list": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "ntp_server_list", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": [
                        "List of ntp server hostnames or ip addresses."
                    ]
                }
            }
        }, 
        "MgmtIpAccessControl": {
            "name": "MgmtIpAccessControl", 
            "properties": {
                "snmp_access": {
                    "doc_type": "IpAddrMatch", 
                    "py_type": "IpAddrMatch", 
                    "name": "snmp_access", 
                    "required": "False", 
                    "ref_type": "IpAddrMatch", 
                    "description": [
                        "Configure ip addresses to access controller using snmp."
                    ]
                }, 
                "api_access": {
                    "doc_type": "IpAddrMatch", 
                    "py_type": "IpAddrMatch", 
                    "name": "api_access", 
                    "required": "False", 
                    "ref_type": "IpAddrMatch", 
                    "description": [
                        "Configure ip addresses to access controller using api."
                    ]
                }, 
                "ssh_access": {
                    "doc_type": "IpAddrMatch", 
                    "py_type": "IpAddrMatch", 
                    "name": "ssh_access", 
                    "required": "False", 
                    "ref_type": "IpAddrMatch", 
                    "description": [
                        "Configure ip addresses to access controller using ssh."
                    ]
                }, 
                "shell_server_access": {
                    "doc_type": "IpAddrMatch", 
                    "py_type": "IpAddrMatch", 
                    "name": "shell_server_access", 
                    "required": "False", 
                    "ref_type": "IpAddrMatch", 
                    "description": [
                        "Configure ip addresses to access controller using cli shell."
                    ]
                }
            }
        }
    }, 
    "network_profile": {
        "TCPProxyProfile": {
            "name": "TCPProxyProfile", 
            "properties": {
                "receive_window": {
                    "default_value": 64, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "receive_window", 
                    "required": "False", 
                    "range": "32-65536", 
                    "description": [
                        "Size of the receive window.", 
                        "Allowed values are 32-65536."
                    ]
                }, 
                "time_wait_delay": {
                    "default_value": 2000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "time_wait_delay", 
                    "required": "False", 
                    "range": "500-2000", 
                    "special_values": [
                        "'immediate'"
                    ], 
                    "description": [
                        "The time (in millisec) to wait before closing a connection in the time_wait state.", 
                        "Allowed values are 500-2000.", 
                        "Special values are 0 - 'immediate'."
                    ]
                }, 
                "cc_algo": {
                    "default_value": "CC_ALGO_NEW_RENO", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cc_algo", 
                    "required": "False", 
                    "option_values": [
                        "CC_ALGO_NEW_RENO", 
                        "CC_ALGO_CUBIC", 
                        "CC_ALGO_HTCP"
                    ], 
                    "description": [
                        "Controls the congestion control algorithm we use.", 
                        "Enum options - CC_ALGO_NEW_RENO, CC_ALGO_CUBIC, CC_ALGO_HTCP."
                    ]
                }, 
                "nagles_algorithm": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "nagles_algorithm", 
                    "required": "False", 
                    "description": [
                        "Consolidates small data packets to send clients fewer but larger packets.", 
                        "Adversely affects real time protocols such as telnet or ssh."
                    ]
                }, 
                "idle_connection_timeout": {
                    "default_value": 600, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "idle_connection_timeout", 
                    "required": "False", 
                    "range": "60-3600", 
                    "special_values": [
                        "'infinite'"
                    ], 
                    "description": [
                        "The duration for keepalive probes or session idle timeout.", 
                        "Max value is 3600 seconds, min is 60.", 
                        "Set to 0 to allow infinite idle time.", 
                        "Allowed values are 60-3600.", 
                        "Special values are 0 - 'infinite'."
                    ]
                }, 
                "ignore_time_wait": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "ignore_time_wait", 
                    "required": "False", 
                    "description": [
                        "A new syn is accepted from the same 4-tuple even if there is already a connection in time_wait state.", 
                        "This is equivalent of setting time wait delay to 0."
                    ]
                }, 
                "max_segment_size": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_segment_size", 
                    "required": "False", 
                    "range": "512-9000", 
                    "special_values": [
                        "'Use Interface MTU'"
                    ], 
                    "description": [
                        "Maximum tcp segment size.", 
                        "Allowed values are 512-9000.", 
                        "Special values are 0 - 'use interface mtu'."
                    ]
                }, 
                "use_interface_mtu": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_interface_mtu", 
                    "required": "False", 
                    "description": [
                        "Use the interface mtu to calculate the tcp max segment size."
                    ]
                }, 
                "idle_connection_type": {
                    "default_value": "KEEP_ALIVE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "idle_connection_type", 
                    "required": "False", 
                    "option_values": [
                        "KEEP_ALIVE", 
                        "CLOSE_IDLE"
                    ], 
                    "description": [
                        "Controls the behavior of idle connections.", 
                        "Enum options - KEEP_ALIVE, CLOSE_IDLE."
                    ]
                }, 
                "aggressive_congestion_avoidance": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "aggressive_congestion_avoidance", 
                    "required": "False", 
                    "description": [
                        "Controls the our congestion window to send, normally it's 1 mss, if this option is turned on, we use 10 msses."
                    ]
                }, 
                "max_retransmissions": {
                    "default_value": 8, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_retransmissions", 
                    "required": "False", 
                    "range": "3-8", 
                    "description": [
                        "The number of attempts at retransmit before closing the connection.", 
                        "Allowed values are 3-8."
                    ]
                }, 
                "ip_dscp": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ip_dscp", 
                    "required": "False", 
                    "range": "0-63", 
                    "special_values": [
                        "'Passthrough'"
                    ], 
                    "description": [
                        "Controls the value of the differentiated services code point field inserted in the ip header.", 
                        "This has two options   set to a specific value, or pass through, which uses the incoming dscp value.", 
                        "Allowed values are 0-63.", 
                        "Special values are max - 'passthrough'."
                    ]
                }, 
                "automatic": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "automatic", 
                    "required": "False", 
                    "description": [
                        "Dynamically pick the relevant parameters for connections."
                    ]
                }, 
                "max_syn_retransmissions": {
                    "default_value": 8, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_syn_retransmissions", 
                    "required": "False", 
                    "range": "3-8", 
                    "description": [
                        "The maximum number of attempts at retransmitting a syn packet before giving up.", 
                        "Allowed values are 3-8."
                    ]
                }
            }
        }, 
        "TCPFastPathProfile": {
            "name": "TCPFastPathProfile", 
            "properties": {
                "session_idle_timeout": {
                    "default_value": 300, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "session_idle_timeout", 
                    "required": "False", 
                    "range": "60-3600", 
                    "special_values": [
                        "'infinite'"
                    ], 
                    "description": [
                        "The amount of time (in sec) for which a connection needs to be idle before it is eligible to be deleted.", 
                        "Allowed values are 60-3600.", 
                        "Special values are 0 - 'infinite'."
                    ]
                }, 
                "enable_syn_protection": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_syn_protection", 
                    "required": "False", 
                    "description": [
                        "When enabled, avi will complete the 3-way handshake with the client before forwarding any packets to the server.", 
                        "This will protect the server from syn flood and half open syn connections."
                    ]
                }
            }
        }, 
        "UDPFastPathProfile": {
            "name": "UDPFastPathProfile", 
            "properties": {
                "per_pkt_loadbalance": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "per_pkt_loadbalance", 
                    "required": "False", 
                    "description": [
                        "When enabled, every udp packet is considered a new transaction and may be load balanced to a different server.", 
                        "When disabled, packets from the same client source ip and port are sent to the same server."
                    ]
                }, 
                "snat": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "snat", 
                    "required": "False", 
                    "description": [
                        "When disabled, source nat will not be performed for all client udp packets."
                    ]
                }, 
                "session_idle_timeout": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "session_idle_timeout", 
                    "required": "False", 
                    "range": "2-300", 
                    "description": [
                        "The amount of time (in sec) for which a flow needs to be idle before it is deleted.", 
                        "Allowed values are 2-300."
                    ]
                }
            }
        }, 
        "NetworkProfileUnion": {
            "name": "NetworkProfileUnion", 
            "properties": {
                "tcp_fast_path_profile": {
                    "doc_type": "TCPFastPathProfile", 
                    "py_type": "TCPFastPathProfile", 
                    "name": "tcp_fast_path_profile", 
                    "required": "False", 
                    "ref_type": "TCPFastPathProfile", 
                    "description": []
                }, 
                "tcp_proxy_profile": {
                    "doc_type": "TCPProxyProfile", 
                    "py_type": "TCPProxyProfile", 
                    "name": "tcp_proxy_profile", 
                    "required": "False", 
                    "ref_type": "TCPProxyProfile", 
                    "description": []
                }, 
                "type": {
                    "default_value": "PROTOCOL_TYPE_TCP_PROXY", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "type", 
                    "required": "True", 
                    "option_values": [
                        "PROTOCOL_TYPE_TCP_PROXY", 
                        "PROTOCOL_TYPE_TCP_FAST_PATH", 
                        "PROTOCOL_TYPE_UDP_FAST_PATH"
                    ], 
                    "description": [
                        "Configure one of either proxy or fast path profiles.", 
                        "Enum options - PROTOCOL_TYPE_TCP_PROXY, PROTOCOL_TYPE_TCP_FAST_PATH, PROTOCOL_TYPE_UDP_FAST_PATH."
                    ]
                }, 
                "udp_fast_path_profile": {
                    "doc_type": "UDPFastPathProfile", 
                    "py_type": "UDPFastPathProfile", 
                    "name": "udp_fast_path_profile", 
                    "required": "False", 
                    "ref_type": "UDPFastPathProfile", 
                    "description": []
                }
            }
        }, 
        "NetworkProfile": {
            "name": "NetworkProfile", 
            "properties": {
                "profile": {
                    "doc_type": "NetworkProfileUnion", 
                    "py_type": "NetworkProfileUnion", 
                    "name": "profile", 
                    "required": "True", 
                    "ref_type": "NetworkProfileUnion", 
                    "description": []
                }
            }
        }
    }, 
    "cli_internal": {
        "TerminalSettings": {
            "name": "TerminalSettings", 
            "properties": {
                "command_timeout": {
                    "default_value": 300, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "command_timeout", 
                    "required": "False", 
                    "description": []
                }, 
                "session_timeout": {
                    "default_value": 15, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "session_timeout", 
                    "required": "False", 
                    "description": []
                }
            }
        }
    }, 
    "debug_controller": {
        "DebugFilterUnion": {
            "name": "DebugFilterUnion", 
            "properties": {
                "mesos_metrics_debug_filter": {
                    "doc_type": "MesosMetricsDebugFilter", 
                    "py_type": "MesosMetricsDebugFilter", 
                    "name": "mesos_metrics_debug_filter", 
                    "required": "False", 
                    "ref_type": "MesosMetricsDebugFilter", 
                    "description": []
                }, 
                "cloud_connector_debug_filter": {
                    "doc_type": "CloudConnectorDebugFilter", 
                    "py_type": "CloudConnectorDebugFilter", 
                    "name": "cloud_connector_debug_filter", 
                    "required": "False", 
                    "ref_type": "CloudConnectorDebugFilter", 
                    "description": []
                }, 
                "metrics_debug_filter": {
                    "doc_type": "MetricsMgrDebugFilter", 
                    "py_type": "MetricsMgrDebugFilter", 
                    "name": "metrics_debug_filter", 
                    "required": "False", 
                    "ref_type": "MetricsMgrDebugFilter", 
                    "description": []
                }, 
                "alert_debug_filter": {
                    "doc_type": "AlertMgrDebugFilter", 
                    "py_type": "AlertMgrDebugFilter", 
                    "name": "alert_debug_filter", 
                    "required": "False", 
                    "ref_type": "AlertMgrDebugFilter", 
                    "description": []
                }, 
                "se_mgr_debug_filter": {
                    "doc_type": "SeMgrDebugFilter", 
                    "py_type": "SeMgrDebugFilter", 
                    "name": "se_mgr_debug_filter", 
                    "required": "False", 
                    "ref_type": "SeMgrDebugFilter", 
                    "description": []
                }, 
                "state_cache_mgr_debug_filter": {
                    "doc_type": "StateCacheMgrDebugFilter", 
                    "py_type": "StateCacheMgrDebugFilter", 
                    "name": "state_cache_mgr_debug_filter", 
                    "required": "False", 
                    "ref_type": "StateCacheMgrDebugFilter", 
                    "description": []
                }, 
                "autoscale_mgr_debug_filter": {
                    "doc_type": "AutoScaleMgrDebugFilter", 
                    "py_type": "AutoScaleMgrDebugFilter", 
                    "name": "autoscale_mgr_debug_filter", 
                    "required": "False", 
                    "ref_type": "AutoScaleMgrDebugFilter", 
                    "description": []
                }, 
                "vs_debug_filter": {
                    "doc_type": "VsDebugFilter", 
                    "py_type": "VsDebugFilter", 
                    "name": "vs_debug_filter", 
                    "required": "False", 
                    "ref_type": "VsDebugFilter", 
                    "description": []
                }, 
                "hs_debug_filter": {
                    "doc_type": "HSMgrDebugFilter", 
                    "py_type": "HSMgrDebugFilter", 
                    "name": "hs_debug_filter", 
                    "required": "False", 
                    "ref_type": "HSMgrDebugFilter", 
                    "description": []
                }
            }
        }, 
        "MesosMetricsDebugFilter": {
            "name": "MesosMetricsDebugFilter", 
            "properties": {
                "metrics_collection_frq": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "metrics_collection_frq", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "AutoScaleMgrDebugFilter": {
            "name": "AutoScaleMgrDebugFilter", 
            "properties": {
                "enable_aws_autoscale_integration": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_aws_autoscale_integration", 
                    "required": "False", 
                    "description": [
                        "Enable aws autoscale integration.", 
                        "This is an alpha feature.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "DebugController": {
            "name": "DebugController", 
            "properties": {
                "filters": {
                    "doc_type": "DebugFilterUnion", 
                    "py_type": "DebugFilterUnion", 
                    "name": "filters", 
                    "required": "False", 
                    "ref_type": "DebugFilterUnion", 
                    "description": []
                }
            }
        }
    }, 
    "dns": {
        "DnsNsRdata": {
            "name": "DnsNsRdata", 
            "properties": {
                "ip_address": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip_address", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address for name server.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "DnsARdata": {
            "name": "DnsARdata", 
            "properties": {
                "ip_address": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip_address", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address for fqdn."
                    ]
                }
            }
        }, 
        "DnsRecord": {
            "name": "DnsRecord", 
            "properties": {
                "wildcard_match": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "wildcard_match", 
                    "required": "False", 
                    "description": [
                        "Enable wild-card match of fqdn  if an exact match is not found in the dns table, the longest match is chosen by wild-carding the fqdn in the dns", 
                        "request.", 
                        "Default is false.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "algorithm": {
                    "default_value": "DNS_RECORD_RESPONSE_ROUND_ROBIN", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "algorithm", 
                    "required": "False", 
                    "option_values": [
                        "DNS_RECORD_RESPONSE_ROUND_ROBIN", 
                        "DNS_RECORD_RESPONSE_CONSISTENT_HASH"
                    ], 
                    "description": [
                        "Specifies the algorithm to pick the ip address(es) to be returned, when multiple entries are configured.", 
                        "This does not apply if num_records_in_response is 0.", 
                        "Default is round-robin.", 
                        "Enum options - DNS_RECORD_RESPONSE_ROUND_ROBIN, DNS_RECORD_RESPONSE_CONSISTENT_HASH.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "num_records_in_response": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_records_in_response", 
                    "required": "False", 
                    "range": "0-20", 
                    "special_values": [
                        "'Return all records'"
                    ], 
                    "description": [
                        "Specifies the number of records returned by the dns service.", 
                        "Enter 0 to return all records.", 
                        "Default is 0.", 
                        "Allowed values are 0-20.", 
                        "Special values are 0- 'return all records'.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "cname": {
                    "doc_type": "DnsCnameRdata", 
                    "py_type": "DnsCnameRdata", 
                    "name": "cname", 
                    "required": "False", 
                    "ref_type": "DnsCnameRdata", 
                    "description": [
                        "Canonical name in cname record."
                    ]
                }, 
                "service_locator": {
                    "doc_type": "DnsSrvRdata", 
                    "py_type": "list", 
                    "name": "service_locator", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsSrvRdata", 
                    "description": [
                        "Service locator info in srv record."
                    ]
                }, 
                "delegated": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "delegated", 
                    "required": "False", 
                    "description": [
                        "Configured fqdns are delegated domains (i.e.", 
                        "They represent a zone cut).", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "ns": {
                    "doc_type": "DnsNsRdata", 
                    "py_type": "list", 
                    "name": "ns", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsNsRdata", 
                    "description": [
                        "Name server information in ns record.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "ip_address": {
                    "doc_type": "DnsARdata", 
                    "py_type": "list", 
                    "name": "ip_address", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsARdata", 
                    "description": [
                        "Ip address in a record."
                    ]
                }
            }
        }, 
        "DnsSrvRdata": {
            "name": "DnsSrvRdata", 
            "properties": {
                "priority": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "priority", 
                    "required": "False", 
                    "range": "0-65535", 
                    "description": [
                        "Priority of the target hosting the service, low value implies higher priority for this service record.", 
                        "Allowed values are 0-65535."
                    ]
                }, 
                "target": {
                    "default_value": "default.host", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "target", 
                    "required": "False", 
                    "description": [
                        "Canonical hostname, of the machine hosting the service, with no trailing period.", 
                        "'default.host' is valid but not 'default.host.'."
                    ]
                }, 
                "weight": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "weight", 
                    "required": "False", 
                    "range": "0-65535", 
                    "description": [
                        "Relative weight for service records with same priority, high value implies higher preference for this service record.", 
                        "Allowed values are 0-65535."
                    ]
                }, 
                "port": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "port", 
                    "required": "True", 
                    "range": "0-65535", 
                    "description": [
                        "Service port.", 
                        "Allowed values are 0-65535."
                    ]
                }
            }
        }, 
        "DnsInfo": {
            "name": "DnsInfo", 
            "properties": {
                "num_records_in_response": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_records_in_response", 
                    "required": "False", 
                    "range": "0-20", 
                    "special_values": [
                        "'Return all records'"
                    ], 
                    "description": [
                        "Specifies the number of records returned for this fqdn.", 
                        "Enter 0 to return all records.", 
                        "Default is 0.", 
                        "Allowed values are 0-20.", 
                        "Special values are 0- 'return all records'.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "type": {
                    "default_value": "DNS_RECORD_A", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "type", 
                    "required": "False", 
                    "option_values": [
                        "DNS_RECORD_OTHER", 
                        "DNS_RECORD_A", 
                        "DNS_RECORD_NS", 
                        "DNS_RECORD_CNAME", 
                        "DNS_RECORD_SOA", 
                        "DNS_RECORD_PTR", 
                        "DNS_RECORD_HINFO", 
                        "DNS_RECORD_MX", 
                        "DNS_RECORD_TXT", 
                        "DNS_RECORD_RP", 
                        "DNS_RECORD_DNSKEY", 
                        "DNS_RECORD_AAAA", 
                        "DNS_RECORD_SRV", 
                        "DNS_RECORD_OPT", 
                        "DNS_RECORD_RRSIG", 
                        "DNS_RECORD_AXFR", 
                        "DNS_RECORD_ANY"
                    ], 
                    "description": [
                        "Dns record type.", 
                        "Enum options - DNS_RECORD_OTHER, DNS_RECORD_A, DNS_RECORD_NS, DNS_RECORD_CNAME, DNS_RECORD_SOA, DNS_RECORD_PTR, DNS_RECORD_HINFO, DNS_RECORD_MX,", 
                        "DNS_RECORD_TXT, DNS_RECORD_RP, DNS_RECORD_DNSKEY, DNS_RECORD_AAAA, DNS_RECORD_SRV, DNS_RECORD_OPT, DNS_RECORD_RRSIG, DNS_RECORD_AXFR,", 
                        "DNS_RECORD_ANY."
                    ]
                }, 
                "algorithm": {
                    "default_value": "DNS_RECORD_RESPONSE_CONSISTENT_HASH", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "algorithm", 
                    "required": "False", 
                    "option_values": [
                        "DNS_RECORD_RESPONSE_ROUND_ROBIN", 
                        "DNS_RECORD_RESPONSE_CONSISTENT_HASH"
                    ], 
                    "description": [
                        "Specifies the algorithm to pick the ip address(es) to be returned, when multiple entries are configured.", 
                        "This does not apply if num_records_in_response is 0.", 
                        "Default is consistent hash.", 
                        "Enum options - DNS_RECORD_RESPONSE_ROUND_ROBIN, DNS_RECORD_RESPONSE_CONSISTENT_HASH.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }
    }, 
    "controller_properties": {
        "ControllerProperties": {
            "name": "ControllerProperties", 
            "properties": {
                "vs_se_ping_fail": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vs_se_ping_fail", 
                    "required": "False", 
                    "description": []
                }, 
                "warmstart_se_reconnect_wait_time": {
                    "default_value": 300, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "warmstart_se_reconnect_wait_time", 
                    "required": "False", 
                    "description": []
                }, 
                "persistence_key_rotate_period": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "persistence_key_rotate_period", 
                    "required": "False", 
                    "range": "1-1051200", 
                    "special_values": [
                        "'Disabled'"
                    ], 
                    "description": [
                        "Allowed values are 1-1051200.", 
                        "Special values are 0 - 'disabled'."
                    ]
                }, 
                "unresponsive_se_reboot": {
                    "default_value": 300, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "unresponsive_se_reboot", 
                    "required": "False", 
                    "description": []
                }, 
                "attach_ip_retry_interval": {
                    "default_value": 360, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "attach_ip_retry_interval", 
                    "required": "False", 
                    "description": []
                }, 
                "vs_se_vnic_fail": {
                    "default_value": 300, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vs_se_vnic_fail", 
                    "required": "False", 
                    "description": []
                }, 
                "attach_ip_retry_limit": {
                    "default_value": 4, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "attach_ip_retry_limit", 
                    "required": "False", 
                    "description": []
                }, 
                "se_vnic_cooldown": {
                    "default_value": 120, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_vnic_cooldown", 
                    "required": "False", 
                    "description": []
                }, 
                "vnic_op_fail_time": {
                    "default_value": 180, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vnic_op_fail_time", 
                    "required": "False", 
                    "description": []
                }, 
                "vs_key_rotate_period": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vs_key_rotate_period", 
                    "required": "False", 
                    "range": "1-1051200", 
                    "special_values": [
                        "'Disabled'"
                    ], 
                    "description": [
                        "Allowed values are 1-1051200.", 
                        "Special values are 0 - 'disabled'."
                    ]
                }, 
                "max_dead_se_in_grp": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_dead_se_in_grp", 
                    "required": "False", 
                    "description": []
                }, 
                "seupgrade_fabric_pool_size": {
                    "default_value": 20, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "seupgrade_fabric_pool_size", 
                    "required": "False", 
                    "description": [
                        "Pool size used for all fabric commands during se upgrade."
                    ]
                }, 
                "max_pcap_per_tenant": {
                    "default_value": 4, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_pcap_per_tenant", 
                    "required": "False", 
                    "description": [
                        "Maximum number of pcap files stored per tenant."
                    ]
                }, 
                "seupgrade_segroup_min_dead_timeout": {
                    "default_value": 360, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "seupgrade_segroup_min_dead_timeout", 
                    "required": "False", 
                    "description": [
                        "Time to wait before marking segroup upgrade as stuck."
                    ]
                }, 
                "dns_refresh_period": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dns_refresh_period", 
                    "required": "False", 
                    "description": []
                }, 
                "upgrade_lease_time": {
                    "default_value": 360, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "upgrade_lease_time", 
                    "required": "False", 
                    "description": []
                }, 
                "se_create_timeout": {
                    "default_value": 900, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_create_timeout", 
                    "required": "False", 
                    "description": []
                }, 
                "query_host_fail": {
                    "default_value": 180, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "query_host_fail", 
                    "required": "False", 
                    "description": []
                }, 
                "vs_apic_scaleout_timeout": {
                    "default_value": 360, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vs_apic_scaleout_timeout", 
                    "required": "False", 
                    "description": [
                        "Time to wait for the scaled out se to become ready before marking the scaleout done, applies to apic configuration only."
                    ]
                }, 
                "se_offline_del": {
                    "default_value": 172000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_offline_del", 
                    "required": "False", 
                    "description": []
                }, 
                "vs_se_bootup_fail": {
                    "default_value": 300, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vs_se_bootup_fail", 
                    "required": "False", 
                    "description": []
                }, 
                "upgrade_dns_ttl": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "upgrade_dns_ttl", 
                    "required": "False", 
                    "description": [
                        "Time to account for dns ttl during upgrade.", 
                        "This is in addition to vs_scalein_timeout_for_upgrade in se_group.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "fatal_error_lease_time": {
                    "default_value": 120, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "fatal_error_lease_time", 
                    "required": "False", 
                    "description": []
                }, 
                "secure_channel_controller_token_timeout": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "secure_channel_controller_token_timeout", 
                    "required": "False", 
                    "description": []
                }, 
                "allow_ip_forwarding": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "allow_ip_forwarding", 
                    "required": "False", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "max_seq_vnic_failures": {
                    "default_value": 3, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_seq_vnic_failures", 
                    "required": "False", 
                    "description": []
                }, 
                "allow_unauthenticated_nodes": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "allow_unauthenticated_nodes", 
                    "required": "False", 
                    "description": []
                }, 
                "allow_unauthenticated_apis": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "allow_unauthenticated_apis", 
                    "required": "False", 
                    "description": [
                        "Allow unauthenticated access for special apis."
                    ]
                }, 
                "vs_awaiting_se_timeout": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vs_awaiting_se_timeout", 
                    "required": "False", 
                    "description": []
                }, 
                "cluster_ip_gratuitous_arp_period": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "cluster_ip_gratuitous_arp_period", 
                    "required": "False", 
                    "description": []
                }, 
                "secure_channel_cleanup_timeout": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "secure_channel_cleanup_timeout", 
                    "required": "False", 
                    "description": []
                }, 
                "vs_se_vnic_ip_fail": {
                    "default_value": 120, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vs_se_vnic_ip_fail", 
                    "required": "False", 
                    "description": []
                }, 
                "secure_channel_se_token_timeout": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "secure_channel_se_token_timeout", 
                    "required": "False", 
                    "description": []
                }, 
                "vs_se_create_fail": {
                    "default_value": 1500, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vs_se_create_fail", 
                    "required": "False", 
                    "description": []
                }, 
                "api_idle_timeout": {
                    "default_value": 15, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "api_idle_timeout", 
                    "required": "False", 
                    "range": "0-1440", 
                    "description": [
                        "Allowed values are 0-1440."
                    ]
                }, 
                "crashed_se_reboot": {
                    "default_value": 900, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "crashed_se_reboot", 
                    "required": "False", 
                    "description": []
                }, 
                "appviewx_compat_mode": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "appviewx_compat_mode", 
                    "required": "False", 
                    "description": [
                        "Export configuration in appviewx compatibility mode.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "se_failover_attempt_interval": {
                    "default_value": 300, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_failover_attempt_interval", 
                    "required": "False", 
                    "description": [
                        "Interval between attempting failovers to an se."
                    ]
                }, 
                "dead_se_detection_timer": {
                    "default_value": 360, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dead_se_detection_timer", 
                    "required": "False", 
                    "description": []
                }
            }
        }
    }, 
    "debug_se": {
        "DebugVirtualService": {
            "name": "DebugVirtualService", 
            "properties": {
                "capture_params": {
                    "doc_type": "DebugVirtualServiceCapture", 
                    "py_type": "DebugVirtualServiceCapture", 
                    "name": "capture_params", 
                    "required": "False", 
                    "ref_type": "DebugVirtualServiceCapture", 
                    "description": []
                }, 
                "debug_ip": {
                    "doc_type": "DebugIpAddr", 
                    "py_type": "DebugIpAddr", 
                    "name": "debug_ip", 
                    "required": "False", 
                    "ref_type": "DebugIpAddr", 
                    "description": []
                }, 
                "flags": {
                    "doc_type": "DebugVsDataplane", 
                    "py_type": "list", 
                    "name": "flags", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DebugVsDataplane", 
                    "description": []
                }, 
                "debug_hm": {
                    "default_value": "DEBUG_VS_HM_NONE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "debug_hm", 
                    "required": "False", 
                    "option_values": [
                        "DEBUG_VS_HM_NONE", 
                        "DEBUG_VS_HM_ONLY", 
                        "DEBUG_VS_HM_INCLUDE"
                    ], 
                    "description": [
                        "This option controls the capture of health monitor flows.", 
                        "Enum options - DEBUG_VS_HM_NONE, DEBUG_VS_HM_ONLY, DEBUG_VS_HM_INCLUDE."
                    ]
                }, 
                "se_params": {
                    "doc_type": "DebugVirtualServiceSeParams", 
                    "py_type": "DebugVirtualServiceSeParams", 
                    "name": "se_params", 
                    "required": "False", 
                    "ref_type": "DebugVirtualServiceSeParams", 
                    "description": []
                }
            }
        }, 
        "DebugServiceEngine": {
            "name": "DebugServiceEngine", 
            "properties": {
                "flags": {
                    "doc_type": "DebugSeDataplane", 
                    "py_type": "list", 
                    "name": "flags", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DebugSeDataplane", 
                    "description": []
                }, 
                "name": {
                    "default_value": "VM name unknown", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "name", 
                    "required": "False", 
                    "description": []
                }, 
                "seagent_debug": {
                    "doc_type": "DebugSeAgent", 
                    "py_type": "list", 
                    "name": "seagent_debug", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DebugSeAgent", 
                    "description": []
                }, 
                "cpu_shares": {
                    "doc_type": "DebugSeCpuShares", 
                    "py_type": "list", 
                    "name": "cpu_shares", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DebugSeCpuShares", 
                    "description": []
                }
            }
        }, 
        "DebugIpAddr": {
            "name": "DebugIpAddr", 
            "properties": {
                "ranges": {
                    "doc_type": "IpAddrRange", 
                    "py_type": "list", 
                    "name": "ranges", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrRange", 
                    "description": []
                }, 
                "prefixes": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "list", 
                    "name": "prefixes", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }, 
                "addrs": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "addrs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "DebugVirtualServiceCapture": {
            "name": "DebugVirtualServiceCapture", 
            "properties": {
                "duration": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "duration", 
                    "required": "False", 
                    "special_values": [
                        "'infinite'"
                    ], 
                    "description": [
                        "Number of minutes to capture packets.", 
                        "Use 0 to capture until manually stopped.", 
                        "Special values are 0 - 'infinite'."
                    ]
                }, 
                "pkt_size": {
                    "default_value": 128, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "pkt_size", 
                    "required": "False", 
                    "range": "64-1514", 
                    "special_values": [
                        "'full capture'"
                    ], 
                    "description": [
                        "Number of bytes of each packet to capture.", 
                        "Use 0 to capture the entire packet.", 
                        "Allowed values are 64-1514.", 
                        "Special values are 0 - 'full capture'."
                    ]
                }
            }
        }
    }, 
    "apic": {
        "Lif": {
            "name": "Lif", 
            "properties": {
                "cifs": {
                    "doc_type": "Cif", 
                    "py_type": "list", 
                    "name": "cifs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Cif", 
                    "description": []
                }
            }
        }, 
        "APICDisableEnableVsParams": {
            "name": "APICDisableEnableVsParams", 
            "properties": {
                "vs": {
                    "doc_type": "VirtualService", 
                    "py_type": "VirtualService", 
                    "name": "vs", 
                    "required": "True", 
                    "ref_type": "VirtualService", 
                    "description": []
                }
            }
        }, 
        "APICEpgEps": {
            "name": "APICEpgEps", 
            "properties": {
                "ep_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ep_ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "APICLifsRuntime": {
            "name": "APICLifsRuntime", 
            "properties": {
                "cifs": {
                    "doc_type": "Cif", 
                    "py_type": "list", 
                    "name": "cifs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Cif", 
                    "description": []
                }
            }
        }, 
        "ApicVSPlacementReq": {
            "name": "ApicVSPlacementReq", 
            "properties": {
                "lifs": {
                    "doc_type": "Lif", 
                    "py_type": "list", 
                    "name": "lifs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Lif", 
                    "description": []
                }, 
                "network_rel": {
                    "doc_type": "APICNetworkRel", 
                    "py_type": "list", 
                    "name": "network_rel", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "APICNetworkRel", 
                    "description": []
                }
            }
        }
    }, 
    "snmp_mib_rpc": {
        "SnmpRsp": {
            "name": "SnmpRsp", 
            "properties": {
                "serviceengine_mib_entry": {
                    "doc_type": "ServiceEngineMibEntry", 
                    "py_type": "ServiceEngineMibEntry", 
                    "name": "serviceengine_mib_entry", 
                    "required": "False", 
                    "ref_type": "ServiceEngineMibEntry", 
                    "description": []
                }, 
                "controller_mib_entry": {
                    "doc_type": "ControllerMibEntry", 
                    "py_type": "ControllerMibEntry", 
                    "name": "controller_mib_entry", 
                    "required": "False", 
                    "ref_type": "ControllerMibEntry", 
                    "description": []
                }, 
                "virtualservice_mib_entry": {
                    "doc_type": "VirtualServiceMibEntry", 
                    "py_type": "VirtualServiceMibEntry", 
                    "name": "virtualservice_mib_entry", 
                    "required": "False", 
                    "ref_type": "VirtualServiceMibEntry", 
                    "description": []
                }
            }
        }, 
        "ServiceEngineMibEntry": {
            "name": "ServiceEngineMibEntry", 
            "properties": {
                "mgmt_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "mgmt_ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "VirtualServiceMibEntry": {
            "name": "VirtualServiceMibEntry", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "ControllerMibEntry": {
            "name": "ControllerMibEntry", 
            "properties": {
                "mgmt_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "mgmt_ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }
    }, 
    "application_profile": {
        "DosRateLimitProfile": {
            "name": "DosRateLimitProfile", 
            "properties": {
                "rl_profile": {
                    "doc_type": "RateLimiterProfile", 
                    "py_type": "RateLimiterProfile", 
                    "name": "rl_profile", 
                    "required": "False", 
                    "ref_type": "RateLimiterProfile", 
                    "description": [
                        "Profile for connections/requests rate limiting."
                    ]
                }, 
                "dos_profile": {
                    "doc_type": "DosThresholdProfile", 
                    "py_type": "DosThresholdProfile", 
                    "name": "dos_profile", 
                    "required": "False", 
                    "ref_type": "DosThresholdProfile", 
                    "description": [
                        "Profile for dos attack detection."
                    ]
                }
            }
        }, 
        "SSLClientCertificateAction": {
            "name": "SSLClientCertificateAction", 
            "properties": {
                "headers": {
                    "doc_type": "SSLClientRequestHeader", 
                    "py_type": "list", 
                    "name": "headers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SSLClientRequestHeader", 
                    "description": []
                }, 
                "close_connection": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "close_connection", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "DnsServiceApplicationProfile": {
            "name": "DnsServiceApplicationProfile", 
            "properties": {
                "dns_over_tcp_enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "dns_over_tcp_enabled", 
                    "required": "False", 
                    "description": [
                        "Enable dns query/response over tcp.", 
                        "This enables analytics for pass-through queries as well.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "error_response": {
                    "default_value": "DNS_ERROR_RESPONSE_NONE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "error_response", 
                    "required": "False", 
                    "option_values": [
                        "DNS_ERROR_RESPONSE_ERROR", 
                        "DNS_ERROR_RESPONSE_NONE"
                    ], 
                    "description": [
                        "Drop or respond to client when the dns service encounters an error processing a client query.", 
                        "By default, such a request is dropped without any response, or passed through to a passthrough pool, if configured.", 
                        "When set to respond, an appropriate response is sent to client, e.g.", 
                        "Nxdomain response for non-existent records, empty noerror response for unsupported queries, etc.", 
                        "Enum options - DNS_ERROR_RESPONSE_ERROR, DNS_ERROR_RESPONSE_NONE."
                    ]
                }, 
                "aaaa_empty_response": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "aaaa_empty_response", 
                    "required": "False", 
                    "description": [
                        "Respond to aaaa queries with empty response when there are only ipv4 records."
                    ]
                }, 
                "num_dns_ip": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_dns_ip", 
                    "required": "False", 
                    "range": "1-20", 
                    "special_values": [
                        "'Return all IP addresses'"
                    ], 
                    "description": [
                        "Specifies the number of ip addresses returned by the dns service.", 
                        "Enter 0 to return all ip addresses.", 
                        "Allowed values are 1-20.", 
                        "Special values are 0- 'return all ip addresses'."
                    ]
                }, 
                "edns_client_subnet_prefix_len": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "edns_client_subnet_prefix_len", 
                    "required": "False", 
                    "range": "1-32", 
                    "description": [
                        "Specifies the ip address prefix length to use in the edns client subnet (ecs) option.", 
                        "When the incoming request does not have any ecs option and the prefix length is specified, we insert an ecs option in the request to upstream", 
                        "servers.", 
                        "Allowed values are 1-32.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "ttl": {
                    "default_value": 30, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ttl", 
                    "required": "False", 
                    "range": "1-86400", 
                    "description": [
                        "Specifies the ttl value (in seconds) for records served by dns service.", 
                        "Allowed values are 1-86400."
                    ]
                }, 
                "edns": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "edns", 
                    "required": "False", 
                    "description": [
                        "Enable dns service to be aware of edns (extension mechanism for dns).", 
                        "Edns extensions are parsed and shown in logs.", 
                        "For gslb services, the edns subnet option can be used to influence load balancing.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "ApplicationProfile": {
            "name": "ApplicationProfile", 
            "properties": {
                "dns_service_profile": {
                    "doc_type": "DnsServiceApplicationProfile", 
                    "py_type": "DnsServiceApplicationProfile", 
                    "name": "dns_service_profile", 
                    "required": "False", 
                    "ref_type": "DnsServiceApplicationProfile", 
                    "description": [
                        "Specifies various dns service related controls for virtual service."
                    ]
                }, 
                "preserve_client_ip": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "preserve_client_ip", 
                    "required": "False", 
                    "description": [
                        "Specifies if client ip needs to be preserved for backend connection.", 
                        "Not compatible with connection multiplexing."
                    ]
                }, 
                "tcp_app_profile": {
                    "doc_type": "TCPApplicationProfile", 
                    "py_type": "TCPApplicationProfile", 
                    "name": "tcp_app_profile", 
                    "required": "False", 
                    "ref_type": "TCPApplicationProfile", 
                    "description": [
                        "Specifies the tcp application proxy profile parameters."
                    ]
                }, 
                "http_profile": {
                    "doc_type": "HTTPApplicationProfile", 
                    "py_type": "HTTPApplicationProfile", 
                    "name": "http_profile", 
                    "required": "False", 
                    "ref_type": "HTTPApplicationProfile", 
                    "description": [
                        "Specifies the http application proxy profile parameters."
                    ]
                }, 
                "dos_rl_profile": {
                    "doc_type": "DosRateLimitProfile", 
                    "py_type": "DosRateLimitProfile", 
                    "name": "dos_rl_profile", 
                    "required": "False", 
                    "ref_type": "DosRateLimitProfile", 
                    "description": [
                        "Specifies various security related controls for virtual service."
                    ]
                }
            }
        }, 
        "TCPApplicationProfile": {
            "name": "TCPApplicationProfile", 
            "properties": {
                "proxy_protocol_version": {
                    "default_value": "PROXY_PROTOCOL_VERSION_1", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "proxy_protocol_version", 
                    "required": "False", 
                    "option_values": [
                        "PROXY_PROTOCOL_VERSION_1", 
                        "PROXY_PROTOCOL_VERSION_2"
                    ], 
                    "description": [
                        "Version of proxy protocol to be used to convey client connection information to the back-end servers.", 
                        "Enum options - PROXY_PROTOCOL_VERSION_1, PROXY_PROTOCOL_VERSION_2."
                    ]
                }, 
                "proxy_protocol_enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "proxy_protocol_enabled", 
                    "required": "False", 
                    "description": [
                        "Enable/disable the usage of proxy protocol to convey client connection information to the back-end servers.", 
                        "Valid only for l4 application profiles and tcp proxy."
                    ]
                }
            }
        }, 
        "HTTPApplicationProfile": {
            "name": "HTTPApplicationProfile", 
            "properties": {
                "max_rps_uri": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_rps_uri", 
                    "required": "False", 
                    "range": "10-1000", 
                    "special_values": [
                        "'unlimited'"
                    ], 
                    "description": [
                        "Maximum requests per second per uri.", 
                        "Allowed values are 10-1000.", 
                        "Special values are 0- 'unlimited'."
                    ]
                }, 
                "keepalive_header": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "keepalive_header", 
                    "required": "False", 
                    "description": [
                        "Send http 'keep-alive' header to the client.", 
                        "By default, the timeout specified in the 'keep-alive timeout' field will be used unless the 'use app keepalive timeout' flag is set, in which", 
                        "case the timeout sent by the application will be honored."
                    ]
                }, 
                "max_rps_cip_uri": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_rps_cip_uri", 
                    "required": "False", 
                    "range": "10-1000", 
                    "special_values": [
                        "'unlimited'"
                    ], 
                    "description": [
                        "Maximum requests per second per client ip and uri.", 
                        "Allowed values are 10-1000.", 
                        "Special values are 0- 'unlimited'."
                    ]
                }, 
                "x_forwarded_proto_enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "x_forwarded_proto_enabled", 
                    "required": "False", 
                    "description": [
                        "Insert an x-forwarded-proto header in the request sent to the server.", 
                        "When the client connects via ssl, avi terminates the ssl, and then forwards the requests to the servers via http, so the servers can determine", 
                        "the original protocol via this header.", 
                        "In this example, the value will be 'https'."
                    ]
                }, 
                "connection_multiplexing_enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "connection_multiplexing_enabled", 
                    "required": "False", 
                    "description": [
                        "Allows http requests, not just tcp connections, to be load balanced across servers.", 
                        "Proxied tcp connections to servers may be reused by multiple clients to improve performance.", 
                        "Not compatible with preserve client ip."
                    ]
                }, 
                "websockets_enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "websockets_enabled", 
                    "required": "False", 
                    "description": [
                        "Enable websockets proxy for traffic from clients to the virtual service.", 
                        "Connections to this vs start in http mode.", 
                        "If the client requests an upgrade to websockets, and the server responds back with success, then the connection is upgraded to websockets mode."
                    ]
                }, 
                "enable_request_body_buffering": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_request_body_buffering", 
                    "required": "False", 
                    "description": [
                        "Enable request body buffering for post requests.", 
                        "If enabled, max buffer size is set to lower of 32m or the value (non-zero) configured in client_max_body_size."
                    ]
                }, 
                "hsts_enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "hsts_enabled", 
                    "required": "False", 
                    "description": [
                        "Inserts http strict-transport-security header in the https response.", 
                        "Hsts can help mitigate man-in-the-middle attacks by telling browsers that support hsts that they should only access this site via https."
                    ]
                }, 
                "compression_profile": {
                    "doc_type": "CompressionProfile", 
                    "py_type": "CompressionProfile", 
                    "name": "compression_profile", 
                    "required": "False", 
                    "ref_type": "CompressionProfile", 
                    "description": [
                        "Http compression settings to use with this http profile."
                    ]
                }, 
                "xff_enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "xff_enabled", 
                    "required": "False", 
                    "description": [
                        "The client's original ip address is inserted into an http request header sent to the server.", 
                        "Servers may use this address for logging or other purposes, rather than avi's source nat address used in the avi to server ip connection."
                    ]
                }, 
                "disable_keepalive_posts_msie6": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_keepalive_posts_msie6", 
                    "required": "False", 
                    "description": [
                        "Disable keep-alive client side connections for older browsers based off ms internet explorer 6.0 (msie6).", 
                        "For some applications, this might break ntlm authentication for older clients based off msie6.", 
                        "For such applications, set this option to false to allow keep-alive connections."
                    ]
                }, 
                "keepalive_timeout": {
                    "default_value": 30000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "keepalive_timeout", 
                    "required": "False", 
                    "range": "10-100000000", 
                    "description": [
                        "The max idle time allowed between http requests over a keep-alive connection.", 
                        "Allowed values are 10-100000000."
                    ]
                }, 
                "ssl_client_certificate_mode": {
                    "default_value": "SSL_CLIENT_CERTIFICATE_NONE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "ssl_client_certificate_mode", 
                    "required": "False", 
                    "option_values": [
                        "SSL_CLIENT_CERTIFICATE_NONE", 
                        "SSL_CLIENT_CERTIFICATE_REQUEST", 
                        "SSL_CLIENT_CERTIFICATE_REQUIRE"
                    ], 
                    "description": [
                        "Specifies whether the client side verification is set to none, request or require.", 
                        "Enum options - SSL_CLIENT_CERTIFICATE_NONE, SSL_CLIENT_CERTIFICATE_REQUEST, SSL_CLIENT_CERTIFICATE_REQUIRE."
                    ]
                }, 
                "http_to_https": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "http_to_https", 
                    "required": "False", 
                    "description": [
                        "Client requests received via http will be redirected to https."
                    ]
                }, 
                "spdy_enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "spdy_enabled", 
                    "required": "False", 
                    "description": [
                        "Enable spdy proxy for traffic from clients to the virtual service.", 
                        "Spdy requires ssl from the clients to avi.", 
                        "Avi adc will proxy the spdy protocol, and forward requests to servers as http 1.1."
                    ]
                }, 
                "client_body_timeout": {
                    "default_value": 30000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "client_body_timeout", 
                    "required": "False", 
                    "range": "0-100000000", 
                    "description": [
                        "The maximum length of time allowed between consecutive read operations for a client request body.", 
                        "The value '0' specifies no timeout.", 
                        "This setting generally impacts the length of time allowed for a client to send a post.", 
                        "Allowed values are 0-100000000."
                    ]
                }, 
                "httponly_enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "httponly_enabled", 
                    "required": "False", 
                    "description": [
                        "Mark http cookies as httponly.", 
                        "This helps mitigate cross site scripting attacks as browsers will not allow these cookies to be read by third parties, such as javascript."
                    ]
                }, 
                "hsts_max_age": {
                    "default_value": 365, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "hsts_max_age", 
                    "required": "False", 
                    "range": "0-10000", 
                    "description": [
                        "Number of days for which the client should regard this virtual service as a known hsts host.", 
                        "Allowed values are 0-10000."
                    ]
                }, 
                "ssl_client_certificate_action": {
                    "doc_type": "SSLClientCertificateAction", 
                    "py_type": "SSLClientCertificateAction", 
                    "name": "ssl_client_certificate_action", 
                    "required": "False", 
                    "ref_type": "SSLClientCertificateAction", 
                    "description": [
                        "Set of match/action rules that govern what happens when the client certificate request is enabled."
                    ]
                }, 
                "server_side_redirect_to_https": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "server_side_redirect_to_https", 
                    "required": "False", 
                    "description": [
                        "When terminating client ssl sessions at avi, servers may incorrectly send redirect to clients as http.", 
                        "This option will rewrite the server's redirect responses for this virtual service from http to https."
                    ]
                }, 
                "client_max_header_size": {
                    "default_value": 12, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "client_max_header_size", 
                    "required": "False", 
                    "range": "1-64", 
                    "description": [
                        "Maximum size in kbytes of a single http header in the client request.", 
                        "Allowed values are 1-64."
                    ]
                }, 
                "client_max_request_size": {
                    "default_value": 48, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "client_max_request_size", 
                    "required": "False", 
                    "range": "1-256", 
                    "description": [
                        "Maximum size in kbytes of all the client http request headers.", 
                        "Allowed values are 1-256."
                    ]
                }, 
                "cache_config": {
                    "doc_type": "HttpCacheConfig", 
                    "py_type": "HttpCacheConfig", 
                    "name": "cache_config", 
                    "required": "False", 
                    "ref_type": "HttpCacheConfig", 
                    "description": [
                        "Http caching config to use with this http profile."
                    ]
                }, 
                "max_rps_unknown_uri": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_rps_unknown_uri", 
                    "required": "False", 
                    "range": "10-1000", 
                    "special_values": [
                        "'unlimited'"
                    ], 
                    "description": [
                        "Maximum unknown uris per second.", 
                        "Allowed values are 10-1000.", 
                        "Special values are 0- 'unlimited'."
                    ]
                }, 
                "ssl_everywhere_enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "ssl_everywhere_enabled", 
                    "required": "False", 
                    "description": [
                        "Enable common settings to increase the level of security for  virtual services running http and https.", 
                        "For sites that are  http only, these settings will have no effect."
                    ]
                }, 
                "spdy_fwd_proxy_mode": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "spdy_fwd_proxy_mode", 
                    "required": "False", 
                    "description": [
                        "Enable fwd proxy mode with spdy.", 
                        "This makes the proxy combine the  host and  uri spdy headers to create a fwd-proxy style request uri."
                    ]
                }, 
                "max_bad_rps_cip": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_bad_rps_cip", 
                    "required": "False", 
                    "range": "10-1000", 
                    "special_values": [
                        "'unlimited'"
                    ], 
                    "description": [
                        "Maximum bad requests per second per client ip.", 
                        "Allowed values are 10-1000.", 
                        "Special values are 0- 'unlimited'."
                    ]
                }, 
                "allow_dots_in_header_name": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "allow_dots_in_header_name", 
                    "required": "False", 
                    "description": [
                        "Allow use of dot (.) in http header names, for instance header.app.special  pickappversionx."
                    ]
                }, 
                "client_header_timeout": {
                    "default_value": 10000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "client_header_timeout", 
                    "required": "False", 
                    "range": "10-100000000", 
                    "description": [
                        "The maximum length of time allowed for a client to transmit an entire request header.", 
                        "This helps mitigate various forms of slowloris attacks.", 
                        "Allowed values are 10-100000000."
                    ]
                }, 
                "post_accept_timeout": {
                    "default_value": 30000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "post_accept_timeout", 
                    "required": "False", 
                    "range": "10-100000000", 
                    "description": [
                        "The max allowed length of time between a client establishing a tcp connection until avi receives the first byte of the client's http request.", 
                        "Allowed values are 10-100000000."
                    ]
                }, 
                "secure_cookie_enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "secure_cookie_enabled", 
                    "required": "False", 
                    "description": [
                        "Mark server cookies with the 'secure' attribute.", 
                        "Client browsers will not send a cookie marked as secure over an unencrypted connection.", 
                        "If avi is terminating ssl from clients and passing it as http to the server, the server may return cookies without the secure flag set."
                    ]
                }, 
                "xff_alternate_name": {
                    "default_value": "X-Forwarded-For", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "xff_alternate_name", 
                    "required": "False", 
                    "description": [
                        "Provide a custom name for the x-forwarded-for header sent to the servers."
                    ]
                }, 
                "max_rps_cip": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_rps_cip", 
                    "required": "False", 
                    "range": "10-1000", 
                    "special_values": [
                        "'unlimited'"
                    ], 
                    "description": [
                        "Maximum requests per second per client ip.", 
                        "Allowed values are 10-1000.", 
                        "Special values are 0- 'unlimited'."
                    ]
                }, 
                "client_max_body_size": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "client_max_body_size", 
                    "required": "False", 
                    "description": [
                        "Maximum size for the client request body.", 
                        "This limits the size of the client data that can be uploaded/posted as part of a single http request.", 
                        "Default 0 => unlimited."
                    ]
                }, 
                "max_rps_unknown_cip": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_rps_unknown_cip", 
                    "required": "False", 
                    "range": "10-1000", 
                    "special_values": [
                        "'unlimited'"
                    ], 
                    "description": [
                        "Maximum unknown client ips per second.", 
                        "Allowed values are 10-1000.", 
                        "Special values are 0- 'unlimited'."
                    ]
                }, 
                "max_bad_rps_cip_uri": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_bad_rps_cip_uri", 
                    "required": "False", 
                    "range": "10-1000", 
                    "special_values": [
                        "'unlimited'"
                    ], 
                    "description": [
                        "Maximum bad requests per second per client ip and uri.", 
                        "Allowed values are 10-1000.", 
                        "Special values are 0- 'unlimited'."
                    ]
                }, 
                "max_bad_rps_uri": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_bad_rps_uri", 
                    "required": "False", 
                    "range": "10-1000", 
                    "special_values": [
                        "'unlimited'"
                    ], 
                    "description": [
                        "Maximum bad requests per second per uri.", 
                        "Allowed values are 10-1000.", 
                        "Special values are 0- 'unlimited'."
                    ]
                }, 
                "use_app_keepalive_timeout": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_app_keepalive_timeout", 
                    "required": "False", 
                    "description": [
                        "Use 'keep-alive' header timeout sent by application instead of sending the http keep-alive timeout."
                    ]
                }
            }
        }
    }, 
    "metrics_query": {
        "MetricsDataHeader": {
            "name": "MetricsDataHeader", 
            "properties": {
                "statistics": {
                    "doc_type": "MetricStatistics", 
                    "py_type": "MetricStatistics", 
                    "name": "statistics", 
                    "required": "False", 
                    "ref_type": "MetricStatistics", 
                    "description": [
                        "Statistics of the metric."
                    ]
                }, 
                "metrics_sum_agg_invalid": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "metrics_sum_agg_invalid", 
                    "required": "False", 
                    "description": []
                }, 
                "dimension_data": {
                    "doc_type": "MetricsDimensionData", 
                    "py_type": "list", 
                    "name": "dimension_data", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MetricsDimensionData", 
                    "description": []
                }, 
                "priority": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "priority", 
                    "required": "False", 
                    "description": []
                }, 
                "missing_intervals": {
                    "doc_type": "MetricsMissingDataInterval", 
                    "py_type": "list", 
                    "name": "missing_intervals", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MetricsMissingDataInterval", 
                    "description": [
                        "Missing data intervals.", 
                        "Data in these intervals are not used for stats calculation."
                    ]
                }, 
                "units": {
                    "default_value": "METRIC_COUNT", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "units", 
                    "required": "False", 
                    "option_values": [
                        "METRIC_COUNT", 
                        "BITS_PER_SECOND", 
                        "MILLISECONDS", 
                        "SECONDS", 
                        "PER_SECOND", 
                        "BYTES", 
                        "PERCENT", 
                        "KILO_BYTES", 
                        "KILO_BYTES_PER_SECOND", 
                        "BYTES_PER_SECOND", 
                        "KILO_BITS_PER_SECOND", 
                        "GIGA_BYTES", 
                        "MEGA_BYTES", 
                        "NORMALIZED", 
                        "SEC", 
                        "MIN", 
                        "DAYS", 
                        "KB", 
                        "MB", 
                        "GB", 
                        "MBPS", 
                        "GHZ", 
                        "RATIO", 
                        "WORD"
                    ], 
                    "description": [
                        "Units of the column data.", 
                        "Enum options - METRIC_COUNT, BITS_PER_SECOND, MILLISECONDS, SECONDS, PER_SECOND, BYTES, PERCENT, KILO_BYTES, KILO_BYTES_PER_SECOND,", 
                        "BYTES_PER_SECOND, KILO_BITS_PER_SECOND, GIGA_BYTES, MEGA_BYTES, NORMALIZED, SEC, MIN, DAYS, KB, MB, GB, MBPS, GHZ, RATIO, WORD."
                    ]
                }, 
                "derivation_data": {
                    "doc_type": "MetricsDerivationData", 
                    "py_type": "MetricsDerivationData", 
                    "name": "derivation_data", 
                    "required": "False", 
                    "ref_type": "MetricsDerivationData", 
                    "description": [
                        "Metrics derivation info."
                    ]
                }
            }
        }, 
        "AnomalyzerQueryResponse": {
            "name": "AnomalyzerQueryResponse", 
            "properties": {
                "series": {
                    "doc_type": "AnomalyDataSeries", 
                    "py_type": "list", 
                    "name": "series", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "AnomalyDataSeries", 
                    "description": []
                }
            }
        }, 
        "RumSampleQueryResponse": {
            "name": "RumSampleQueryResponse", 
            "properties": {
                "series": {
                    "doc_type": "RumSampleDataSeries", 
                    "py_type": "list", 
                    "name": "series", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "RumSampleDataSeries", 
                    "description": []
                }
            }
        }, 
        "MetricsQuery": {
            "name": "MetricsQuery", 
            "properties": {
                "aggregate_entity": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "aggregate_entity", 
                    "required": "False", 
                    "description": [
                        "Required if the metrics need to be aggregated across multiple entities like virtualservice."
                    ]
                }, 
                "order_by": {
                    "default_value": "metric_timestamp", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "order_by", 
                    "required": "False", 
                    "description": [
                        "Order metrics series by metric timestamp.", 
                        "-metric_timestamp will result in most recent value first in the time series."
                    ]
                }, 
                "filters": {
                    "doc_type": "MetricsFilters", 
                    "py_type": "list", 
                    "name": "filters", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MetricsFilters", 
                    "description": [
                        "Filters on the metrics.", 
                        "Not supported."
                    ]
                }, 
                "client_insights": {
                    "default_value": "ACTIVE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "client_insights", 
                    "required": "False", 
                    "option_values": [
                        "NO_INSIGHTS", 
                        "PASSIVE", 
                        "ACTIVE"
                    ], 
                    "description": [
                        "Client insights source type - active or passive.", 
                        "Enum options - NO_INSIGHTS, PASSIVE, ACTIVE."
                    ]
                }, 
                "dimension_limit": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "dimension_limit", 
                    "required": "False", 
                    "description": [
                        "Limit the number of dimensions in the result.", 
                        "Specially useful in case of urls."
                    ]
                }, 
                "include_refs": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "include_refs", 
                    "required": "False", 
                    "description": [
                        "Resolve uuid to names."
                    ]
                }, 
                "microservice_levels": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "microservice_levels", 
                    "required": "False", 
                    "description": [
                        "Number of levels of microservices map."
                    ]
                }, 
                "validate_data": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "validate_data", 
                    "required": "False", 
                    "description": [
                        "Validate every data before returning.", 
                        "This will result in increased latency and should only be used for troubleshooting."
                    ]
                }, 
                "detailed_header": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "detailed_header", 
                    "required": "False", 
                    "description": [
                        "Detailed header returns metric information, statistics etc.", 
                        "It is has overhead which can be bypassed if caller just wants raw data."
                    ]
                }, 
                "start": {
                    "default_value": "1970-01-01T00:00:00", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "start", 
                    "required": "False", 
                    "description": [
                        "Start time for the metrics in iso 8601 format.", 
                        "Default is unix epoch.", 
                        "Eg.", 
                        "Start=1970-01-01t00 00 00."
                    ]
                }, 
                "step": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "step", 
                    "required": "False", 
                    "description": [
                        "Metrics time series returned with time points every time duration specified as step.", 
                        "Eg.", 
                        "If bandwidth is desired every 5 secs then use step=5&metric_id=l4_client.avg_bandwidth."
                    ]
                }, 
                "limit": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "limit", 
                    "required": "False", 
                    "description": [
                        "Max number of metric samples per metric requestedeg.", 
                        "Limit=100 implies return only 100 samples."
                    ]
                }, 
                "pad_missing_data": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "pad_missing_data", 
                    "required": "False", 
                    "description": [
                        "Pad missing data when not available."
                    ]
                }, 
                "result_format": {
                    "default_value": "METRICS_FORMAT_JSON", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "result_format", 
                    "required": "False", 
                    "option_values": [
                        "METRICS_FORMAT_JSON", 
                        "METRICS_FORMAT_CSV", 
                        "METRICS_FORMAT_TXT", 
                        "METRICS_FORMAT_PROTOBUF"
                    ], 
                    "description": [
                        "Deprecated.", 
                        "Please do not use this option.", 
                        "Apis only support json format.", 
                        "Enum options - METRICS_FORMAT_JSON, METRICS_FORMAT_CSV, METRICS_FORMAT_TXT, METRICS_FORMAT_PROTOBUF."
                    ]
                }, 
                "include_statistics": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "include_statistics", 
                    "required": "False", 
                    "description": [
                        "Include metrics statistics with the request."
                    ]
                }, 
                "sampling_level": {
                    "default_value": "METRICS_SAMPLING_FORCE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "sampling_level", 
                    "required": "False", 
                    "option_values": [
                        "METRICS_SAMPLING_DEFAULT", 
                        "METRICS_SAMPLING_FAST", 
                        "METRICS_SAMPLING_FORCE"
                    ], 
                    "description": [
                        "Deprecated.", 
                        "Enum options - METRICS_SAMPLING_DEFAULT, METRICS_SAMPLING_FAST, METRICS_SAMPLING_FORCE."
                    ]
                }, 
                "dimension_aggregation": {
                    "default_value": "METRICS_DIMENSION_AGG_NONE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "dimension_aggregation", 
                    "required": "False", 
                    "option_values": [
                        "METRICS_DIMENSION_AGG_NONE", 
                        "METRICS_DIMENSION_AGG_AVG", 
                        "METRICS_DIMENSION_AGG_SUM", 
                        "METRICS_DIMENSION_AGG_MAX", 
                        "METRICS_DIMENSION_AGG_MIN", 
                        "METRICS_DIMENSION_AGG_PERCENT", 
                        "METRICS_DIMENSION_AGG_ALL"
                    ], 
                    "description": [
                        "Aggregations for dimensions.", 
                        "Eg.", 
                        "Use dimenstion_aggregation=avg for averaged metric values.", 
                        "Enum options - METRICS_DIMENSION_AGG_NONE, METRICS_DIMENSION_AGG_AVG, METRICS_DIMENSION_AGG_SUM, METRICS_DIMENSION_AGG_MAX,", 
                        "METRICS_DIMENSION_AGG_MIN, METRICS_DIMENSION_AGG_PERCENT, METRICS_DIMENSION_AGG_ALL."
                    ]
                }, 
                "dimension_filter_op": {
                    "default_value": "METRICS_FILTER_EQUALS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "dimension_filter_op", 
                    "required": "False", 
                    "option_values": [
                        "METRICS_FILTER_EQUALS", 
                        "METRICS_FILTER_LIKE", 
                        "METRICS_FILTER_CONTAINS", 
                        "METRICS_FILTER_NOT_EQUALS"
                    ], 
                    "description": [
                        "Filters the obj_id based on the filter specified.", 
                        "Enum options - METRICS_FILTER_EQUALS, METRICS_FILTER_LIKE, METRICS_FILTER_CONTAINS, METRICS_FILTER_NOT_EQUALS."
                    ]
                }, 
                "metric_entity": {
                    "default_value": "VSERVER_METRICS_ENTITY", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "metric_entity", 
                    "required": "True", 
                    "option_values": [
                        "VSERVER_METRICS_ENTITY", 
                        "VM_METRICS_ENTITY", 
                        "SE_METRICS_ENTITY", 
                        "CONTROLLER_METRICS_ENTITY", 
                        "APPLICATION_METRICS_ENTITY", 
                        "TENANT_METRICS_ENTITY"
                    ], 
                    "description": [
                        "Describes the entity type for which metrics is requested.", 
                        "Eg.", 
                        "&metric_entity=vserver_metrics_entity.", 
                        "Enum options - VSERVER_METRICS_ENTITY, VM_METRICS_ENTITY, SE_METRICS_ENTITY, CONTROLLER_METRICS_ENTITY, APPLICATION_METRICS_ENTITY,", 
                        "TENANT_METRICS_ENTITY."
                    ]
                }
            }
        }, 
        "AnomalyDataSeries": {
            "name": "AnomalyDataSeries", 
            "properties": {
                "header": {
                    "doc_type": "MetricsDataHeader", 
                    "py_type": "MetricsDataHeader", 
                    "name": "header", 
                    "required": "True", 
                    "ref_type": "MetricsDataHeader", 
                    "description": []
                }, 
                "data": {
                    "doc_type": "AnomalyData", 
                    "py_type": "list", 
                    "name": "data", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "AnomalyData", 
                    "description": []
                }
            }
        }, 
        "AnomalyContext": {
            "name": "AnomalyContext", 
            "properties": {
                "hw_at_ms_context": {
                    "doc_type": "HoltWintersCtx", 
                    "py_type": "HoltWintersCtx", 
                    "name": "hw_at_ms_context", 
                    "required": "False", 
                    "ref_type": "HoltWintersCtx", 
                    "description": []
                }, 
                "ema_context": {
                    "doc_type": "ExponentialMovingAverageCtx", 
                    "py_type": "ExponentialMovingAverageCtx", 
                    "name": "ema_context", 
                    "required": "False", 
                    "ref_type": "ExponentialMovingAverageCtx", 
                    "description": []
                }, 
                "prediction_interval_high": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "prediction_interval_high", 
                    "required": "False", 
                    "description": []
                }, 
                "hw_at_as_context": {
                    "doc_type": "HoltWintersCtx", 
                    "py_type": "HoltWintersCtx", 
                    "name": "hw_at_as_context", 
                    "required": "False", 
                    "ref_type": "HoltWintersCtx", 
                    "description": []
                }, 
                "prediction_interval_low": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "prediction_interval_low", 
                    "required": "False", 
                    "description": []
                }, 
                "ewma_context": {
                    "doc_type": "ExponentialMovingAverageCtx", 
                    "py_type": "ExponentialMovingAverageCtx", 
                    "name": "ewma_context", 
                    "required": "False", 
                    "ref_type": "ExponentialMovingAverageCtx", 
                    "description": []
                }
            }
        }, 
        "RumSampleDataHeader": {
            "name": "RumSampleDataHeader", 
            "properties": {
                "dimension_data": {
                    "doc_type": "MetricsDimensionData", 
                    "py_type": "list", 
                    "name": "dimension_data", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MetricsDimensionData", 
                    "description": []
                }
            }
        }, 
        "AnomalyData": {
            "name": "AnomalyData", 
            "properties": {
                "anomaly_context": {
                    "doc_type": "AnomalyContext", 
                    "py_type": "AnomalyContext", 
                    "name": "anomaly_context", 
                    "required": "False", 
                    "ref_type": "AnomalyContext", 
                    "description": []
                }, 
                "obj_id_type": {
                    "default_value": "METRICS_OBJ_ID_TYPE_SERVER", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "obj_id_type", 
                    "required": "False", 
                    "option_values": [
                        "METRICS_OBJ_ID_TYPE_VIRTUALSERVICE", 
                        "METRICS_OBJ_ID_TYPE_SERVER", 
                        "METRICS_OBJ_ID_TYPE_POOL", 
                        "METRICS_OBJ_ID_TYPE_SERVICEENGINE", 
                        "METRICS_OBJ_ID_TYPE_VIRTUALMACHINE", 
                        "METRICS_OBJ_ID_TYPE_CONTROLLER", 
                        "METRICS_OBJ_ID_TYPE_TENANT", 
                        "METRICS_OBJ_ID_TYPE_CLUSTER", 
                        "METRICS_OBJ_ID_TYPE_SE_INTERFACE"
                    ], 
                    "description": [
                        "Object id type.", 
                        "Enum options - METRICS_OBJ_ID_TYPE_VIRTUALSERVICE, METRICS_OBJ_ID_TYPE_SERVER, METRICS_OBJ_ID_TYPE_POOL, METRICS_OBJ_ID_TYPE_SERVICEENGINE,", 
                        "METRICS_OBJ_ID_TYPE_VIRTUALMACHINE, METRICS_OBJ_ID_TYPE_CONTROLLER, METRICS_OBJ_ID_TYPE_TENANT, METRICS_OBJ_ID_TYPE_CLUSTER,", 
                        "METRICS_OBJ_ID_TYPE_SE_INTERFACE."
                    ]
                }
            }
        }, 
        "AnomalyzerQuery": {
            "name": "AnomalyzerQuery", 
            "properties": {
                "order_by": {
                    "default_value": "metric_timestamp", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "order_by", 
                    "required": "False", 
                    "description": [
                        "Positive means sort from start and negative sign means sort from end.", 
                        "Only metric_timestamp is supported for now."
                    ]
                }, 
                "include_refs": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "include_refs", 
                    "required": "False", 
                    "description": [
                        "Resolve uuid to references."
                    ]
                }, 
                "aggregation": {
                    "default_value": "METRICS_ANOMALY_AGG_NONE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "aggregation", 
                    "required": "False", 
                    "option_values": [
                        "METRICS_ANOMALY_AGG_NONE", 
                        "METRICS_ANOMALY_AGG_COUNT"
                    ], 
                    "description": [
                        "Enum options - METRICS_ANOMALY_AGG_NONE, METRICS_ANOMALY_AGG_COUNT."
                    ]
                }, 
                "aggregation_window": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "aggregation_window", 
                    "required": "False", 
                    "description": [
                        "Factor of aggregation window to the step.", 
                        "Eg.", 
                        "If requirement to is aggregate count ever 30 mins using 5 minute samples then value is 6."
                    ]
                }, 
                "priority": {
                    "default_value": "ANZ_PRIORITY_HIGH", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "priority", 
                    "required": "False", 
                    "option_values": [
                        "ANZ_PRIORITY_HIGH", 
                        "ANZ_PRIORITY_MEDIUM", 
                        "ANZ_PRIORITY_LOW"
                    ], 
                    "description": [
                        "High priority anomaly.", 
                        "Enum options - ANZ_PRIORITY_HIGH, ANZ_PRIORITY_MEDIUM, ANZ_PRIORITY_LOW."
                    ]
                }, 
                "start": {
                    "default_value": "1970-01-01T00:00:00", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "start", 
                    "required": "False", 
                    "description": [
                        "Start time for the metrics in iso 8601 format.", 
                        "Default is unix epoch."
                    ]
                }, 
                "step": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "step", 
                    "required": "False", 
                    "description": [
                        "Step interval in seconds."
                    ]
                }, 
                "include_related": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "include_related", 
                    "required": "False", 
                    "description": [
                        "Include anomalies from related objects."
                    ]
                }, 
                "limit": {
                    "default_value": 50, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "limit", 
                    "required": "False", 
                    "description": [
                        "Max number of metric samples."
                    ]
                }, 
                "result_format": {
                    "default_value": "METRICS_FORMAT_JSON", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "result_format", 
                    "required": "False", 
                    "option_values": [
                        "METRICS_FORMAT_JSON", 
                        "METRICS_FORMAT_CSV", 
                        "METRICS_FORMAT_TXT", 
                        "METRICS_FORMAT_PROTOBUF"
                    ], 
                    "description": [
                        "Format of the data returned.", 
                        "Enum options - METRICS_FORMAT_JSON, METRICS_FORMAT_CSV, METRICS_FORMAT_TXT, METRICS_FORMAT_PROTOBUF."
                    ]
                }, 
                "dimension_filter_op": {
                    "default_value": "METRICS_FILTER_EQUALS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "dimension_filter_op", 
                    "required": "False", 
                    "option_values": [
                        "METRICS_FILTER_EQUALS", 
                        "METRICS_FILTER_LIKE", 
                        "METRICS_FILTER_CONTAINS", 
                        "METRICS_FILTER_NOT_EQUALS"
                    ], 
                    "description": [
                        "Filters the obj_id based on the filter specified.", 
                        "Enum options - METRICS_FILTER_EQUALS, METRICS_FILTER_LIKE, METRICS_FILTER_CONTAINS, METRICS_FILTER_NOT_EQUALS."
                    ]
                }, 
                "detailed_header": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "detailed_header", 
                    "required": "False", 
                    "description": [
                        "Ability to reduce the information returned in header."
                    ]
                }, 
                "metric_entity": {
                    "default_value": "VSERVER_METRICS_ENTITY", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "metric_entity", 
                    "required": "True", 
                    "option_values": [
                        "VSERVER_METRICS_ENTITY", 
                        "VM_METRICS_ENTITY", 
                        "SE_METRICS_ENTITY", 
                        "CONTROLLER_METRICS_ENTITY", 
                        "APPLICATION_METRICS_ENTITY", 
                        "TENANT_METRICS_ENTITY"
                    ], 
                    "description": [
                        "Metrics types supported.", 
                        "Enum options - VSERVER_METRICS_ENTITY, VM_METRICS_ENTITY, SE_METRICS_ENTITY, CONTROLLER_METRICS_ENTITY, APPLICATION_METRICS_ENTITY,", 
                        "TENANT_METRICS_ENTITY."
                    ]
                }
            }
        }, 
        "HoltWintersCtx": {
            "name": "HoltWintersCtx", 
            "properties": {
                "deviation": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "deviation", 
                    "required": "False", 
                    "description": []
                }, 
                "level": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "level", 
                    "required": "False", 
                    "description": []
                }, 
                "trend": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "trend", 
                    "required": "False", 
                    "description": []
                }, 
                "prediction": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "prediction", 
                    "required": "False", 
                    "description": []
                }, 
                "prediction_interval_high": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "prediction_interval_high", 
                    "required": "False", 
                    "description": []
                }, 
                "prediction_interval_low": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "prediction_interval_low", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VirtualServiceRelatedEntities": {
            "name": "VirtualServiceRelatedEntities", 
            "properties": {
                "pools": {
                    "doc_type": "MetricsEntityData", 
                    "py_type": "list", 
                    "name": "pools", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MetricsEntityData", 
                    "description": []
                }, 
                "serviceengines": {
                    "doc_type": "MetricsEntityData", 
                    "py_type": "list", 
                    "name": "serviceengines", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MetricsEntityData", 
                    "description": []
                }, 
                "servers": {
                    "doc_type": "MetricsEntityData", 
                    "py_type": "list", 
                    "name": "servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MetricsEntityData", 
                    "description": []
                }
            }
        }, 
        "MetricsQueryCollection": {
            "name": "MetricsQueryCollection", 
            "properties": {
                "queries": {
                    "doc_type": "MetricsQueryInfo", 
                    "py_type": "list", 
                    "name": "queries", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MetricsQueryInfo", 
                    "description": [
                        "List of metrics queries."
                    ]
                }
            }
        }, 
        "MetricsFilters": {
            "name": "MetricsFilters", 
            "properties": {
                "rel_param": {
                    "doc_type": "RelationalOperatorsParams", 
                    "py_type": "RelationalOperatorsParams", 
                    "name": "rel_param", 
                    "required": "True", 
                    "ref_type": "RelationalOperatorsParams", 
                    "description": []
                }
            }
        }, 
        "MetricObjTypes": {
            "name": "MetricObjTypes", 
            "properties": {
                "l4_client": {
                    "doc_type": "VserverL4MetricsObj", 
                    "py_type": "VserverL4MetricsObj", 
                    "name": "l4_client", 
                    "required": "False", 
                    "ref_type": "VserverL4MetricsObj", 
                    "description": [
                        "Virtualservice frontend network (layer 4) metrics."
                    ]
                }, 
                "app_insights": {
                    "doc_type": "MetricsAppInsightsObj", 
                    "py_type": "MetricsAppInsightsObj", 
                    "name": "app_insights", 
                    "required": "False", 
                    "ref_type": "MetricsAppInsightsObj", 
                    "description": []
                }, 
                "vm_stats": {
                    "doc_type": "VmStatsObj", 
                    "py_type": "VmStatsObj", 
                    "name": "vm_stats", 
                    "required": "False", 
                    "ref_type": "VmStatsObj", 
                    "description": [
                        "Virtualmachine infrastructure metrics."
                    ]
                }, 
                "se_stats": {
                    "doc_type": "SeStatsObj", 
                    "py_type": "SeStatsObj", 
                    "name": "se_stats", 
                    "required": "False", 
                    "ref_type": "SeStatsObj", 
                    "description": [
                        "Serviceengine metrics."
                    ]
                }, 
                "se_if": {
                    "doc_type": "MetricsSeIfStatsObj", 
                    "py_type": "MetricsSeIfStatsObj", 
                    "name": "se_if", 
                    "required": "False", 
                    "ref_type": "MetricsSeIfStatsObj", 
                    "description": [
                        "Se interface metrics."
                    ]
                }, 
                "l4_server": {
                    "doc_type": "ServerL4MetricsObj", 
                    "py_type": "ServerL4MetricsObj", 
                    "name": "l4_server", 
                    "required": "False", 
                    "ref_type": "ServerL4MetricsObj", 
                    "description": [
                        "Virtualservice, pool and backend network (layer 4) metrics."
                    ]
                }, 
                "rum_browser": {
                    "doc_type": "MetricsRumPreaggBrowserObj", 
                    "py_type": "MetricsRumPreaggBrowserObj", 
                    "name": "rum_browser", 
                    "required": "False", 
                    "ref_type": "MetricsRumPreaggBrowserObj", 
                    "description": [
                        "Navigation timings aggregated over dimension browser."
                    ]
                }, 
                "rum_os": {
                    "doc_type": "MetricsRumPreaggOsObj", 
                    "py_type": "MetricsRumPreaggOsObj", 
                    "name": "rum_os", 
                    "required": "False", 
                    "ref_type": "MetricsRumPreaggOsObj", 
                    "description": [
                        "Navigation timings aggregated over dimension operating system."
                    ]
                }, 
                "samples_dimension": {
                    "doc_type": "MetricsRumSamplesDimensionObj", 
                    "py_type": "MetricsRumSamplesDimensionObj", 
                    "name": "samples_dimension", 
                    "required": "False", 
                    "ref_type": "MetricsRumSamplesDimensionObj", 
                    "description": []
                }, 
                "anomaly": {
                    "doc_type": "MetricsAnomalyObj", 
                    "py_type": "MetricsAnomalyObj", 
                    "name": "anomaly", 
                    "required": "False", 
                    "ref_type": "MetricsAnomalyObj", 
                    "description": []
                }, 
                "rum": {
                    "doc_type": "MetricsRumAnalyticsObj", 
                    "py_type": "MetricsRumAnalyticsObj", 
                    "name": "rum", 
                    "required": "False", 
                    "ref_type": "MetricsRumAnalyticsObj", 
                    "description": [
                        "Navigation timing metrics."
                    ]
                }, 
                "l7_server": {
                    "doc_type": "ServerL7MetricsObj", 
                    "py_type": "ServerL7MetricsObj", 
                    "name": "l7_server", 
                    "required": "False", 
                    "ref_type": "ServerL7MetricsObj", 
                    "description": [
                        "Virtualservice, pool and backend application (layer 7) metrics."
                    ]
                }, 
                "samples_blob": {
                    "doc_type": "MetricsRumSamplesBlobObj", 
                    "py_type": "MetricsRumSamplesBlobObj", 
                    "name": "samples_blob", 
                    "required": "False", 
                    "ref_type": "MetricsRumSamplesBlobObj", 
                    "description": []
                }, 
                "l7_client": {
                    "doc_type": "VserverL7MetricsObj", 
                    "py_type": "VserverL7MetricsObj", 
                    "name": "l7_client", 
                    "required": "False", 
                    "ref_type": "VserverL7MetricsObj", 
                    "description": [
                        "Virtualservice frontend application (layer 7) metrics."
                    ]
                }, 
                "rum_devtype": {
                    "doc_type": "MetricsRumPreaggDevtypeObj", 
                    "py_type": "MetricsRumPreaggDevtypeObj", 
                    "name": "rum_devtype", 
                    "required": "False", 
                    "ref_type": "MetricsRumPreaggDevtypeObj", 
                    "description": [
                        "Navigation timings aggregated over dimension device type."
                    ]
                }, 
                "rum_country": {
                    "doc_type": "MetricsRumPreaggCountryObj", 
                    "py_type": "MetricsRumPreaggCountryObj", 
                    "name": "rum_country", 
                    "required": "False", 
                    "ref_type": "MetricsRumPreaggCountryObj", 
                    "description": [
                        "Navigation timings aggregated over dimension country."
                    ]
                }, 
                "collection": {
                    "doc_type": "MetricCollections", 
                    "py_type": "MetricCollections", 
                    "name": "collection", 
                    "required": "False", 
                    "ref_type": "MetricCollections", 
                    "description": []
                }, 
                "healthscore": {
                    "doc_type": "MetricsHealthScoreObj", 
                    "py_type": "MetricsHealthScoreObj", 
                    "name": "healthscore", 
                    "required": "False", 
                    "ref_type": "MetricsHealthScoreObj", 
                    "description": []
                }, 
                "source_insights": {
                    "doc_type": "MetricsSourceInsightsObj", 
                    "py_type": "MetricsSourceInsightsObj", 
                    "name": "source_insights", 
                    "required": "False", 
                    "ref_type": "MetricsSourceInsightsObj", 
                    "description": [
                        "Metrics for source of traffic to a vs."
                    ]
                }, 
                "user_metrics": {
                    "doc_type": "MetricsUserMetricsObj", 
                    "py_type": "MetricsUserMetricsObj", 
                    "name": "user_metrics", 
                    "required": "False", 
                    "ref_type": "MetricsUserMetricsObj", 
                    "description": [
                        "User defined custom metrics using data-script."
                    ]
                }, 
                "dns_server": {
                    "doc_type": "MetricsServerDNSObj", 
                    "py_type": "MetricsServerDNSObj", 
                    "name": "dns_server", 
                    "required": "False", 
                    "ref_type": "MetricsServerDNSObj", 
                    "description": [
                        "Server dns metrics."
                    ]
                }, 
                "tenant_stats": {
                    "doc_type": "MetricsTenantStatsObj", 
                    "py_type": "MetricsTenantStatsObj", 
                    "name": "tenant_stats", 
                    "required": "False", 
                    "ref_type": "MetricsTenantStatsObj", 
                    "description": [
                        "Tenant metrics."
                    ]
                }, 
                "rum_url": {
                    "doc_type": "MetricsRumPreaggUrlObj", 
                    "py_type": "MetricsRumPreaggUrlObj", 
                    "name": "rum_url", 
                    "required": "False", 
                    "ref_type": "MetricsRumPreaggUrlObj", 
                    "description": [
                        "Navigation timings aggregated over dimension url."
                    ]
                }, 
                "rum_ipgroup": {
                    "doc_type": "MetricsRumPreaggIPGroupObj", 
                    "py_type": "MetricsRumPreaggIPGroupObj", 
                    "name": "rum_ipgroup", 
                    "required": "False", 
                    "ref_type": "MetricsRumPreaggIPGroupObj", 
                    "description": [
                        "Navigation timings aggregated over dimension ipgroup."
                    ]
                }, 
                "service_insights": {
                    "doc_type": "MetricsServiceInsightsObj", 
                    "py_type": "MetricsServiceInsightsObj", 
                    "name": "service_insights", 
                    "required": "False", 
                    "ref_type": "MetricsServiceInsightsObj", 
                    "description": [
                        "Metrics for destination traffic from a vs."
                    ]
                }, 
                "rum_lang": {
                    "doc_type": "MetricsRumPreaggLangObj", 
                    "py_type": "MetricsRumPreaggLangObj", 
                    "name": "rum_lang", 
                    "required": "False", 
                    "ref_type": "MetricsRumPreaggLangObj", 
                    "description": [
                        "Navigation timings aggregated over dimension language."
                    ]
                }, 
                "controller_stats": {
                    "doc_type": "ControllerStatsObj", 
                    "py_type": "ControllerStatsObj", 
                    "name": "controller_stats", 
                    "required": "False", 
                    "ref_type": "ControllerStatsObj", 
                    "description": [
                        "Controller metrics."
                    ]
                }, 
                "dos": {
                    "doc_type": "MetricsDosAnalyticsObj", 
                    "py_type": "MetricsDosAnalyticsObj", 
                    "name": "dos", 
                    "required": "False", 
                    "ref_type": "MetricsDosAnalyticsObj", 
                    "description": [
                        "Dos attack metrics."
                    ]
                }, 
                "dns_client": {
                    "doc_type": "MetricsVserverDNSObj", 
                    "py_type": "MetricsVserverDNSObj", 
                    "name": "dns_client", 
                    "required": "False", 
                    "ref_type": "MetricsVserverDNSObj", 
                    "description": [
                        "Vserver dns metrics."
                    ]
                }
            }
        }, 
        "RumSampleQuery": {
            "name": "RumSampleQuery", 
            "properties": {
                "include_refs": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "include_refs", 
                    "required": "False", 
                    "description": [
                        "Resolve uuid to references."
                    ]
                }, 
                "prediction": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "prediction", 
                    "required": "False", 
                    "description": [
                        "Return future predictions for metric.", 
                        "It is onlyavailable for metrics that have anomaly models based on holt-winters model."
                    ]
                }, 
                "start": {
                    "default_value": "1970-01-01T00:00:00", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "start", 
                    "required": "False", 
                    "description": [
                        "Start time for the metrics in iso 8601 format.", 
                        "Default is unix epoch."
                    ]
                }, 
                "limit": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "limit", 
                    "required": "False", 
                    "description": [
                        "Max number of metric samples."
                    ]
                }, 
                "result_format": {
                    "default_value": "METRICS_FORMAT_JSON", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "result_format", 
                    "required": "False", 
                    "option_values": [
                        "METRICS_FORMAT_JSON", 
                        "METRICS_FORMAT_CSV", 
                        "METRICS_FORMAT_TXT", 
                        "METRICS_FORMAT_PROTOBUF"
                    ], 
                    "description": [
                        "Format of the data returned.", 
                        "Enum options - METRICS_FORMAT_JSON, METRICS_FORMAT_CSV, METRICS_FORMAT_TXT, METRICS_FORMAT_PROTOBUF."
                    ]
                }, 
                "duration": {
                    "default_value": 86400, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "duration", 
                    "required": "False", 
                    "description": [
                        "Duration of the query.", 
                        "If start is not specified then st = stop - duration."
                    ]
                }, 
                "dimension_filter_op": {
                    "default_value": "METRICS_FILTER_EQUALS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "dimension_filter_op", 
                    "required": "False", 
                    "option_values": [
                        "METRICS_FILTER_EQUALS", 
                        "METRICS_FILTER_LIKE", 
                        "METRICS_FILTER_CONTAINS", 
                        "METRICS_FILTER_NOT_EQUALS"
                    ], 
                    "description": [
                        "Operator to use for all the filters.", 
                        "This is lessthan ideal as for each filter user may want to specify different filters.", 
                        "Enum options - METRICS_FILTER_EQUALS, METRICS_FILTER_LIKE, METRICS_FILTER_CONTAINS, METRICS_FILTER_NOT_EQUALS."
                    ]
                }, 
                "metric_entity": {
                    "default_value": "VSERVER_METRICS_ENTITY", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "metric_entity", 
                    "required": "True", 
                    "option_values": [
                        "VSERVER_METRICS_ENTITY", 
                        "VM_METRICS_ENTITY", 
                        "SE_METRICS_ENTITY", 
                        "CONTROLLER_METRICS_ENTITY", 
                        "APPLICATION_METRICS_ENTITY", 
                        "TENANT_METRICS_ENTITY"
                    ], 
                    "description": [
                        "Metrics types supported.", 
                        "Enum options - VSERVER_METRICS_ENTITY, VM_METRICS_ENTITY, SE_METRICS_ENTITY, CONTROLLER_METRICS_ENTITY, APPLICATION_METRICS_ENTITY,", 
                        "TENANT_METRICS_ENTITY."
                    ]
                }
            }
        }, 
        "RumSampleDataSeries": {
            "name": "RumSampleDataSeries", 
            "properties": {
                "header": {
                    "doc_type": "RumSampleDataHeader", 
                    "py_type": "RumSampleDataHeader", 
                    "name": "header", 
                    "required": "True", 
                    "ref_type": "RumSampleDataHeader", 
                    "description": []
                }, 
                "data": {
                    "doc_type": "RumSampleData", 
                    "py_type": "list", 
                    "name": "data", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "RumSampleData", 
                    "description": []
                }
            }
        }, 
        "MetricsQueryInfo": {
            "name": "MetricsQueryInfo", 
            "properties": {
                "metrics_query": {
                    "doc_type": "MetricsQuery", 
                    "py_type": "MetricsQuery", 
                    "name": "metrics_query", 
                    "required": "True", 
                    "ref_type": "MetricsQuery", 
                    "description": []
                }
            }
        }, 
        "RumSampleData": {
            "name": "RumSampleData", 
            "properties": {
                "resource_timings": {
                    "doc_type": "ResourceTiming", 
                    "py_type": "list", 
                    "name": "resource_timings", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ResourceTiming", 
                    "description": []
                }, 
                "contexts": {
                    "doc_type": "HStoreData", 
                    "py_type": "list", 
                    "name": "contexts", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HStoreData", 
                    "description": []
                }, 
                "navigation_timing": {
                    "doc_type": "NavigationTiming", 
                    "py_type": "NavigationTiming", 
                    "name": "navigation_timing", 
                    "required": "True", 
                    "ref_type": "NavigationTiming", 
                    "description": []
                }, 
                "client_ip_addr": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "client_ip_addr", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "ExponentialMovingAverageCtx": {
            "name": "ExponentialMovingAverageCtx", 
            "properties": {
                "normal_low": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "normal_low", 
                    "required": "False", 
                    "description": [
                        "Deprecated."
                    ]
                }, 
                "prediction_interval_high": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "prediction_interval_high", 
                    "required": "False", 
                    "description": [
                        "Lower boundary of the range of normal values for this metric."
                    ]
                }, 
                "normal_high": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "normal_high", 
                    "required": "False", 
                    "description": [
                        "Deprecated."
                    ]
                }, 
                "prediction_interval_low": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "prediction_interval_low", 
                    "required": "False", 
                    "description": [
                        "Lower boundary of the range of normal values for this metric."
                    ]
                }
            }
        }, 
        "MetricsQueryResponse": {
            "name": "MetricsQueryResponse", 
            "properties": {
                "series": {
                    "doc_type": "MetricsDataSeries", 
                    "py_type": "list", 
                    "name": "series", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MetricsDataSeries", 
                    "description": []
                }
            }
        }, 
        "MetricsDataSeries": {
            "name": "MetricsDataSeries", 
            "properties": {
                "header": {
                    "doc_type": "MetricsDataHeader", 
                    "py_type": "MetricsDataHeader", 
                    "name": "header", 
                    "required": "True", 
                    "ref_type": "MetricsDataHeader", 
                    "description": []
                }, 
                "data": {
                    "doc_type": "MetricsData", 
                    "py_type": "list", 
                    "name": "data", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MetricsData", 
                    "description": []
                }
            }
        }, 
        "MetricsQueryCollectionResponse": {
            "name": "MetricsQueryCollectionResponse", 
            "properties": {
                "responses": {
                    "doc_type": "MetricsQueryResponse", 
                    "py_type": "list", 
                    "name": "responses", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MetricsQueryResponse", 
                    "description": []
                }
            }
        }
    }, 
    "nsx_objects": {
        "nsxSystemEvent": {
            "name": "nsxSystemEvent", 
            "properties": {
                "eventMetadata": {
                    "doc_type": "nsxEventMetaData", 
                    "py_type": "list", 
                    "name": "eventMetadata", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "nsxEventMetaData", 
                    "description": []
                }
            }
        }, 
        "nsxRuleDests": {
            "name": "nsxRuleDests", 
            "properties": {
                "destination": {
                    "doc_type": "nsxSrcDest", 
                    "py_type": "list", 
                    "name": "destination", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "nsxSrcDest", 
                    "description": []
                }
            }
        }, 
        "nsxApplication": {
            "name": "nsxApplication", 
            "properties": {
                "scope": {
                    "doc_type": "nsxScope", 
                    "py_type": "nsxScope", 
                    "name": "scope", 
                    "required": "False", 
                    "ref_type": "nsxScope", 
                    "description": []
                }, 
                "type": {
                    "doc_type": "nsxFwObjType", 
                    "py_type": "nsxFwObjType", 
                    "name": "type", 
                    "required": "False", 
                    "ref_type": "nsxFwObjType", 
                    "description": []
                }, 
                "element": {
                    "doc_type": "nsxApplicationElement", 
                    "py_type": "nsxApplicationElement", 
                    "name": "element", 
                    "required": "False", 
                    "ref_type": "nsxApplicationElement", 
                    "description": []
                }
            }
        }, 
        "nsxSgMember": {
            "name": "nsxSgMember", 
            "properties": {
                "scope": {
                    "doc_type": "nsxScope", 
                    "py_type": "nsxScope", 
                    "name": "scope", 
                    "required": "False", 
                    "ref_type": "nsxScope", 
                    "description": []
                }, 
                "extendedAttributes": {
                    "doc_type": "nsxExtendedAttributes", 
                    "py_type": "nsxExtendedAttributes", 
                    "name": "extendedAttributes", 
                    "required": "False", 
                    "ref_type": "nsxExtendedAttributes", 
                    "description": []
                }, 
                "type": {
                    "doc_type": "nsxFwObjType", 
                    "py_type": "nsxFwObjType", 
                    "name": "type", 
                    "required": "False", 
                    "ref_type": "nsxFwObjType", 
                    "description": []
                }
            }
        }, 
        "nsxAppliedToList": {
            "name": "nsxAppliedToList", 
            "properties": {
                "appliedTo": {
                    "doc_type": "nsxAppliedTo", 
                    "py_type": "list", 
                    "name": "appliedTo", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "nsxAppliedTo", 
                    "description": []
                }
            }
        }, 
        "nsxEventMetaData": {
            "name": "nsxEventMetaData", 
            "properties": {
                "data": {
                    "doc_type": "nsxEventData", 
                    "py_type": "list", 
                    "name": "data", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "nsxEventData", 
                    "description": []
                }
            }
        }, 
        "nsxObjectList": {
            "name": "nsxObjectList", 
            "properties": {
                "ipset": {
                    "doc_type": "ipset", 
                    "py_type": "list", 
                    "name": "ipset", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ipset", 
                    "description": []
                }, 
                "application": {
                    "doc_type": "nsxApplication", 
                    "py_type": "list", 
                    "name": "application", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "nsxApplication", 
                    "description": []
                }, 
                "securitygroup": {
                    "doc_type": "securitygroup", 
                    "py_type": "list", 
                    "name": "securitygroup", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "securitygroup", 
                    "description": []
                }
            }
        }, 
        "nsxExcludeListConfiguration": {
            "name": "nsxExcludeListConfiguration", 
            "properties": {
                "excludeMember": {
                    "doc_type": "nsxExcludeMember", 
                    "py_type": "list", 
                    "name": "excludeMember", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "nsxExcludeMember", 
                    "description": []
                }, 
                "type": {
                    "doc_type": "nsxFwObjType", 
                    "py_type": "nsxFwObjType", 
                    "name": "type", 
                    "required": "False", 
                    "ref_type": "nsxFwObjType", 
                    "description": []
                }
            }
        }, 
        "nsxObjects": {
            "name": "nsxObjects", 
            "properties": {
                "firewallConfiguration": {
                    "doc_type": "nsxFwConfig", 
                    "py_type": "nsxFwConfig", 
                    "name": "firewallConfiguration", 
                    "required": "False", 
                    "ref_type": "nsxFwConfig", 
                    "description": []
                }, 
                "versions": {
                    "doc_type": "nsxVersions", 
                    "py_type": "nsxVersions", 
                    "name": "versions", 
                    "required": "False", 
                    "ref_type": "nsxVersions", 
                    "description": []
                }, 
                "pagedSystemEventList": {
                    "doc_type": "nsxSystemEventList", 
                    "py_type": "nsxSystemEventList", 
                    "name": "pagedSystemEventList", 
                    "required": "False", 
                    "ref_type": "nsxSystemEventList", 
                    "description": []
                }, 
                "list": {
                    "doc_type": "nsxObjectList", 
                    "py_type": "nsxObjectList", 
                    "name": "list", 
                    "required": "False", 
                    "ref_type": "nsxObjectList", 
                    "description": []
                }, 
                "rule": {
                    "doc_type": "rule", 
                    "py_type": "rule", 
                    "name": "rule", 
                    "required": "False", 
                    "ref_type": "rule", 
                    "description": []
                }, 
                "ipset": {
                    "doc_type": "ipset", 
                    "py_type": "ipset", 
                    "name": "ipset", 
                    "required": "False", 
                    "ref_type": "ipset", 
                    "description": []
                }, 
                "sections": {
                    "doc_type": "sections", 
                    "py_type": "sections", 
                    "name": "sections", 
                    "required": "False", 
                    "ref_type": "sections", 
                    "description": []
                }, 
                "ipNodes": {
                    "doc_type": "nsxIpNodes", 
                    "py_type": "nsxIpNodes", 
                    "name": "ipNodes", 
                    "required": "False", 
                    "ref_type": "nsxIpNodes", 
                    "description": []
                }, 
                "VshieldAppConfiguration": {
                    "doc_type": "nsxVshieldAppConfiguration", 
                    "py_type": "nsxVshieldAppConfiguration", 
                    "name": "VshieldAppConfiguration", 
                    "required": "False", 
                    "ref_type": "nsxVshieldAppConfiguration", 
                    "description": []
                }
            }
        }, 
        "nsxRuleSrcs": {
            "name": "nsxRuleSrcs", 
            "properties": {
                "source": {
                    "doc_type": "nsxSrcDest", 
                    "py_type": "list", 
                    "name": "source", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "nsxSrcDest", 
                    "description": []
                }
            }
        }, 
        "nsxExcludeMember": {
            "name": "nsxExcludeMember", 
            "properties": {
                "member": {
                    "doc_type": "nsxMember", 
                    "py_type": "nsxMember", 
                    "name": "member", 
                    "required": "False", 
                    "ref_type": "nsxMember", 
                    "description": []
                }
            }
        }, 
        "section": {
            "name": "section", 
            "properties": {
                "rule": {
                    "doc_type": "rule", 
                    "py_type": "list", 
                    "name": "rule", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "rule", 
                    "description": []
                }
            }
        }, 
        "nsxServices": {
            "name": "nsxServices", 
            "properties": {
                "service": {
                    "doc_type": "nsxService", 
                    "py_type": "list", 
                    "name": "service", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "nsxService", 
                    "description": []
                }
            }
        }, 
        "nsxVshieldAppConfiguration": {
            "name": "nsxVshieldAppConfiguration", 
            "properties": {
                "excludeListConfiguration": {
                    "doc_type": "nsxExcludeListConfiguration", 
                    "py_type": "nsxExcludeListConfiguration", 
                    "name": "excludeListConfiguration", 
                    "required": "True", 
                    "ref_type": "nsxExcludeListConfiguration", 
                    "description": []
                }
            }
        }, 
        "nsxIpNodes": {
            "name": "nsxIpNodes", 
            "properties": {
                "ipNode": {
                    "doc_type": "nsxIpNode", 
                    "py_type": "list", 
                    "name": "ipNode", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "nsxIpNode", 
                    "description": []
                }
            }
        }, 
        "sections": {
            "name": "sections", 
            "properties": {
                "section": {
                    "doc_type": "section", 
                    "py_type": "list", 
                    "name": "section", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "section", 
                    "description": []
                }
            }
        }, 
        "ipset": {
            "name": "ipset", 
            "properties": {
                "scope": {
                    "doc_type": "nsxScope", 
                    "py_type": "nsxScope", 
                    "name": "scope", 
                    "required": "False", 
                    "ref_type": "nsxScope", 
                    "description": []
                }, 
                "extendedAttributes": {
                    "doc_type": "nsxExtendedAttributes", 
                    "py_type": "nsxExtendedAttributes", 
                    "name": "extendedAttributes", 
                    "required": "False", 
                    "ref_type": "nsxExtendedAttributes", 
                    "description": []
                }, 
                "type": {
                    "doc_type": "nsxFwObjType", 
                    "py_type": "nsxFwObjType", 
                    "name": "type", 
                    "required": "False", 
                    "ref_type": "nsxFwObjType", 
                    "description": []
                }
            }
        }, 
        "nsxVersion": {
            "name": "nsxVersion", 
            "properties": {
                "module": {
                    "doc_type": "nsxModule", 
                    "py_type": "list", 
                    "name": "module", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "nsxModule", 
                    "description": []
                }
            }
        }, 
        "nsxIpNode": {
            "name": "nsxIpNode", 
            "properties": {
                "ipAddresses": {
                    "doc_type": "nsxIpAddresses", 
                    "py_type": "list", 
                    "name": "ipAddresses", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "nsxIpAddresses", 
                    "description": []
                }
            }
        }, 
        "securitygroup": {
            "name": "securitygroup", 
            "properties": {
                "excludeMember": {
                    "doc_type": "nsxSgMember", 
                    "py_type": "list", 
                    "name": "excludeMember", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "nsxSgMember", 
                    "description": []
                }, 
                "dynamicMemberDefinition": {
                    "doc_type": "nsxSgDynamicMember", 
                    "py_type": "nsxSgDynamicMember", 
                    "name": "dynamicMemberDefinition", 
                    "required": "False", 
                    "ref_type": "nsxSgDynamicMember", 
                    "description": []
                }, 
                "extendedAttributes": {
                    "doc_type": "nsxExtendedAttributes", 
                    "py_type": "nsxExtendedAttributes", 
                    "name": "extendedAttributes", 
                    "required": "False", 
                    "ref_type": "nsxExtendedAttributes", 
                    "description": []
                }, 
                "member": {
                    "doc_type": "nsxSgMember", 
                    "py_type": "list", 
                    "name": "member", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "nsxSgMember", 
                    "description": []
                }, 
                "scope": {
                    "doc_type": "nsxScope", 
                    "py_type": "nsxScope", 
                    "name": "scope", 
                    "required": "False", 
                    "ref_type": "nsxScope", 
                    "description": []
                }, 
                "type": {
                    "doc_type": "nsxFwObjType", 
                    "py_type": "nsxFwObjType", 
                    "name": "type", 
                    "required": "False", 
                    "ref_type": "nsxFwObjType", 
                    "description": []
                }
            }
        }, 
        "nsxSystemEventList": {
            "name": "nsxSystemEventList", 
            "properties": {
                "dataPage": {
                    "doc_type": "nsxDataPage", 
                    "py_type": "list", 
                    "name": "dataPage", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "nsxDataPage", 
                    "description": []
                }
            }
        }, 
        "nsxMember": {
            "name": "nsxMember", 
            "properties": {
                "scope": {
                    "doc_type": "nsxScope", 
                    "py_type": "nsxScope", 
                    "name": "scope", 
                    "required": "False", 
                    "ref_type": "nsxScope", 
                    "description": []
                }, 
                "type": {
                    "doc_type": "nsxFwObjType", 
                    "py_type": "nsxFwObjType", 
                    "name": "type", 
                    "required": "False", 
                    "ref_type": "nsxFwObjType", 
                    "description": []
                }
            }
        }, 
        "nsxDataPage": {
            "name": "nsxDataPage", 
            "properties": {
                "pagingInfo": {
                    "doc_type": "nsxPagingInfo", 
                    "py_type": "nsxPagingInfo", 
                    "name": "pagingInfo", 
                    "required": "False", 
                    "ref_type": "nsxPagingInfo", 
                    "description": []
                }, 
                "systemEvent": {
                    "doc_type": "nsxSystemEvent", 
                    "py_type": "list", 
                    "name": "systemEvent", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "nsxSystemEvent", 
                    "description": []
                }
            }
        }, 
        "nsxDynamicSet": {
            "name": "nsxDynamicSet", 
            "properties": {
                "dynamicCriteria": {
                    "doc_type": "nsxDynamicCriteria", 
                    "py_type": "list", 
                    "name": "dynamicCriteria", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "nsxDynamicCriteria", 
                    "description": []
                }
            }
        }, 
        "rule": {
            "name": "rule", 
            "properties": {
                "action": {
                    "default_value": "reject", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "action", 
                    "required": "False", 
                    "option_values": [
                        "allow", 
                        "block", 
                        "reject", 
                        "deny"
                    ], 
                    "description": [
                        "Enum options - allow, block, reject, deny."
                    ]
                }, 
                "appliedToList": {
                    "doc_type": "nsxAppliedToList", 
                    "py_type": "nsxAppliedToList", 
                    "name": "appliedToList", 
                    "required": "False", 
                    "ref_type": "nsxAppliedToList", 
                    "description": []
                }, 
                "destinations": {
                    "doc_type": "nsxRuleDests", 
                    "py_type": "nsxRuleDests", 
                    "name": "destinations", 
                    "required": "False", 
                    "ref_type": "nsxRuleDests", 
                    "description": []
                }, 
                "services": {
                    "doc_type": "nsxServices", 
                    "py_type": "nsxServices", 
                    "name": "services", 
                    "required": "False", 
                    "ref_type": "nsxServices", 
                    "description": []
                }, 
                "sources": {
                    "doc_type": "nsxRuleSrcs", 
                    "py_type": "nsxRuleSrcs", 
                    "name": "sources", 
                    "required": "False", 
                    "ref_type": "nsxRuleSrcs", 
                    "description": []
                }
            }
        }, 
        "nsxFwConfig": {
            "name": "nsxFwConfig", 
            "properties": {
                "layer3Sections": {
                    "doc_type": "sections", 
                    "py_type": "sections", 
                    "name": "layer3Sections", 
                    "required": "False", 
                    "ref_type": "sections", 
                    "description": []
                }, 
                "layer2Sections": {
                    "doc_type": "sections", 
                    "py_type": "sections", 
                    "name": "layer2Sections", 
                    "required": "False", 
                    "ref_type": "sections", 
                    "description": []
                }, 
                "layer3RedirectSections": {
                    "doc_type": "sections", 
                    "py_type": "sections", 
                    "name": "layer3RedirectSections", 
                    "required": "False", 
                    "ref_type": "sections", 
                    "description": []
                }
            }
        }, 
        "nsxSgDynamicMember": {
            "name": "nsxSgDynamicMember", 
            "properties": {
                "dynamicSet": {
                    "doc_type": "nsxDynamicSet", 
                    "py_type": "nsxDynamicSet", 
                    "name": "dynamicSet", 
                    "required": "True", 
                    "ref_type": "nsxDynamicSet", 
                    "description": []
                }
            }
        }, 
        "nsxVersions": {
            "name": "nsxVersions", 
            "properties": {
                "version": {
                    "doc_type": "nsxVersion", 
                    "py_type": "list", 
                    "name": "version", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "nsxVersion", 
                    "description": []
                }
            }
        }, 
        "nsxExtendedAttributes": {
            "name": "nsxExtendedAttributes", 
            "properties": {
                "extendedAttribute": {
                    "doc_type": "nsxExtendedAttribute", 
                    "py_type": "nsxExtendedAttribute", 
                    "name": "extendedAttribute", 
                    "required": "True", 
                    "ref_type": "nsxExtendedAttribute", 
                    "description": []
                }
            }
        }
    }, 
    "analytics_profile": {
        "ClientLogStreamingConfig": {
            "name": "ClientLogStreamingConfig", 
            "properties": {
                "max_logs_per_second": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_logs_per_second", 
                    "required": "False", 
                    "description": [
                        "Maximum number of logs per second streamed to the remote server.", 
                        "By default, 100 logs per second are streamed.", 
                        "Set this to zero(0) to not enforce any limit.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "external_server_port": {
                    "default_value": 514, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "external_server_port", 
                    "required": "False", 
                    "description": [
                        "The destination server's service port.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "log_types_to_send": {
                    "default_value": "LOGS_ALL", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "log_types_to_send", 
                    "required": "False", 
                    "option_values": [
                        "LOGS_SIGNIFICANT_ONLY", 
                        "LOGS_UDF_ONLY", 
                        "LOGS_UDF_SIGNIFICANT", 
                        "LOGS_ALL"
                    ], 
                    "description": [
                        "Type of logs to stream to the external server.", 
                        "Default is logs_all, i.e., send all logs.", 
                        "Enum options - LOGS_SIGNIFICANT_ONLY, LOGS_UDF_ONLY, LOGS_UDF_SIGNIFICANT, LOGS_ALL.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "ClientLogConfiguration": {
            "name": "ClientLogConfiguration", 
            "properties": {
                "enable_significant_log_collection": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_significant_log_collection", 
                    "required": "False", 
                    "description": [
                        "Enable significant log collection.", 
                        "By default, this flag is enabled, which means that avi ses collect significant logs and forward them to controller for further processing.", 
                        "For example, these logs correspond to error conditions such as when the response code for a request is 500.", 
                        "Users can disable this flag to turn off default significant log collection."
                    ]
                }, 
                "non_significant_log_processing": {
                    "default_value": "LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "non_significant_log_processing", 
                    "required": "False", 
                    "option_values": [
                        "LOGS_PROCESSING_NONE", 
                        "LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND", 
                        "LOGS_PROCESSING_AUTO_SYNC_AND_INDEX", 
                        "LOGS_PROCESSING_AUTO_SYNC_BUT_INDEX_ON_DEMAND"
                    ], 
                    "description": [
                        "(note  only sync_and_index_on_demand is implemented at this time) logs that are neither significant nor filtered, are processed by the logs", 
                        "analytics system according to this setting.", 
                        "Enum options - LOGS_PROCESSING_NONE, LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND, LOGS_PROCESSING_AUTO_SYNC_AND_INDEX,", 
                        "LOGS_PROCESSING_AUTO_SYNC_BUT_INDEX_ON_DEMAND.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "significant_log_processing": {
                    "default_value": "LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "significant_log_processing", 
                    "required": "False", 
                    "option_values": [
                        "LOGS_PROCESSING_NONE", 
                        "LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND", 
                        "LOGS_PROCESSING_AUTO_SYNC_AND_INDEX", 
                        "LOGS_PROCESSING_AUTO_SYNC_BUT_INDEX_ON_DEMAND"
                    ], 
                    "description": [
                        "Significant logs are processed by the logs analytics system according to this setting.", 
                        "Enum options - LOGS_PROCESSING_NONE, LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND, LOGS_PROCESSING_AUTO_SYNC_AND_INDEX,", 
                        "LOGS_PROCESSING_AUTO_SYNC_BUT_INDEX_ON_DEMAND.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "filtered_log_processing": {
                    "default_value": "LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "filtered_log_processing", 
                    "required": "False", 
                    "option_values": [
                        "LOGS_PROCESSING_NONE", 
                        "LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND", 
                        "LOGS_PROCESSING_AUTO_SYNC_AND_INDEX", 
                        "LOGS_PROCESSING_AUTO_SYNC_BUT_INDEX_ON_DEMAND"
                    ], 
                    "description": [
                        "(note  only sync_and_index_on_demand is implemented at this time) filtered logs are logs that match any client log filters or rules with logging", 
                        "enabled.", 
                        "Such logs are processed by the logs analytics system according to this setting.", 
                        "Enum options - LOGS_PROCESSING_NONE, LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND, LOGS_PROCESSING_AUTO_SYNC_AND_INDEX,", 
                        "LOGS_PROCESSING_AUTO_SYNC_BUT_INDEX_ON_DEMAND.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "AnalyticsProfile": {
            "name": "AnalyticsProfile", 
            "properties": {
                "hs_event_throttle_window": {
                    "default_value": 1209600, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "hs_event_throttle_window", 
                    "required": "False", 
                    "description": [
                        "Time window (in secs) within which only unique health change events should occur."
                    ]
                }, 
                "disable_se_analytics": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_se_analytics", 
                    "required": "False", 
                    "description": [
                        "Disable node (service engine) level analytics forvs metrics."
                    ]
                }, 
                "hs_security_certscore_gt30d": {
                    "default_value": 5.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_security_certscore_gt30d", 
                    "required": "False", 
                    "range": "0-5", 
                    "description": [
                        "Score assigned when the certificate expires in more than 30 days.", 
                        "Allowed values are 0-5."
                    ]
                }, 
                "apdex_server_rtt_tolerated_factor": {
                    "default_value": 4.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "apdex_server_rtt_tolerated_factor", 
                    "required": "False", 
                    "range": "1-1000", 
                    "description": [
                        "Tolerated client to avi round trip time(rtt) factor.", 
                        "It is a multiple of apdex_rtt_tolerated_factor.", 
                        "Allowed values are 1-1000."
                    ]
                }, 
                "hs_security_nonpfs_penalty": {
                    "default_value": 1.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_security_nonpfs_penalty", 
                    "required": "False", 
                    "range": "0-5", 
                    "description": [
                        "Penalty for allowing non-pfs handshakes.", 
                        "Allowed values are 0-5."
                    ]
                }, 
                "hs_security_tls12_score": {
                    "default_value": 5.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_security_tls12_score", 
                    "required": "False", 
                    "range": "0-5", 
                    "description": [
                        "Score assigned when supporting tls1.2 encryption protocol.", 
                        "Allowed values are 0-5."
                    ]
                }, 
                "exclude_server_tcp_reset_as_error": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "exclude_server_tcp_reset_as_error", 
                    "required": "False", 
                    "description": [
                        "Exclude server tcp reset from errors.", 
                        "It is common for applications like ms exchange."
                    ]
                }, 
                "hs_min_dos_rate": {
                    "default_value": 1000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "hs_min_dos_rate", 
                    "required": "False", 
                    "description": [
                        "Dos connection rate below which the dos security assessment will not kick in."
                    ]
                }, 
                "exclude_no_dns_record_as_error": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "exclude_no_dns_record_as_error", 
                    "required": "False", 
                    "description": [
                        "Exclude queries to domains that did not have configured services/records from the list of errors."
                    ]
                }, 
                "conn_server_lossy_zero_win_size_event_threshold": {
                    "default_value": 2, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "conn_server_lossy_zero_win_size_event_threshold", 
                    "required": "False", 
                    "range": "0-100", 
                    "description": [
                        "A server connection is considered lossy when percentage of times a packet could not be trasmitted due to tcp zero window is above this threshold.", 
                        "Allowed values are 0-100."
                    ]
                }, 
                "hs_max_resources_penalty": {
                    "default_value": 25, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "hs_max_resources_penalty", 
                    "required": "False", 
                    "range": "0-100", 
                    "description": [
                        "Maximum penalty that may be deducted from health score for high resource utilization.", 
                        "Allowed values are 0-100."
                    ]
                }, 
                "conn_lossy_total_rexmt_threshold": {
                    "default_value": 50, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "conn_lossy_total_rexmt_threshold", 
                    "required": "False", 
                    "range": "1-100", 
                    "description": [
                        "A connection between client and avi is considered lossy when more than this percentage of packets are retransmitted.", 
                        "Allowed values are 1-100."
                    ]
                }, 
                "hs_security_certscore_le07d": {
                    "default_value": 2.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_security_certscore_le07d", 
                    "required": "False", 
                    "range": "0-5", 
                    "description": [
                        "Score assigned when the certificate expires in less than or equal to 7 days.", 
                        "Allowed values are 0-5."
                    ]
                }, 
                "hs_pscore_traffic_threshold_l4_client": {
                    "default_value": 10.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_pscore_traffic_threshold_l4_client", 
                    "required": "False", 
                    "description": [
                        "Threshold number of connections in 5min, below which apdexr, apdexc, rum_apdex, and other network quality metrics are not computed."
                    ]
                }, 
                "exclude_no_valid_gs_member_as_error": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "exclude_no_valid_gs_member_as_error", 
                    "required": "False", 
                    "description": [
                        "Exclude queries to gslb services that have no available members from the list of errors."
                    ]
                }, 
                "hs_security_encalgo_score_rc4": {
                    "default_value": 2.5, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_security_encalgo_score_rc4", 
                    "required": "False", 
                    "range": "0-5", 
                    "description": [
                        "Score assigned when rc4 algorithm is used for encryption.", 
                        "Allowed values are 0-5."
                    ]
                }, 
                "apdex_server_response_threshold": {
                    "default_value": 400, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "apdex_server_response_threshold", 
                    "required": "False", 
                    "range": "1-30000", 
                    "description": [
                        "A server http response is considered satisfied if latency is less than the satisfactory latency threshold.", 
                        "The response is considered tolerated when it is greater than satisfied but less than the tolerated latency factor * s_latency.", 
                        "Greater than this number and the server response is considered frustrated.", 
                        "Allowed values are 1-30000."
                    ]
                }, 
                "hs_security_cipherscore_ge128b": {
                    "default_value": 5.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_security_cipherscore_ge128b", 
                    "required": "False", 
                    "range": "0-5", 
                    "description": [
                        "Score assigned when the minimum cipher strength is greater than equal to 128 bits.", 
                        "Allowed values are 0-5."
                    ]
                }, 
                "hs_performance_boost": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "hs_performance_boost", 
                    "required": "False", 
                    "range": "0-100", 
                    "description": [
                        "Adds free performance score credits to health score.", 
                        "It can be used for compensating health score for known slow applications.", 
                        "Allowed values are 0-100."
                    ]
                }, 
                "hs_security_ssl30_score": {
                    "default_value": 3.5, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_security_ssl30_score", 
                    "required": "False", 
                    "range": "0-5", 
                    "description": [
                        "Score assigned when supporting ssl3.0 encryption protocol.", 
                        "Allowed values are 0-5."
                    ]
                }, 
                "exclude_invalid_dns_domain_as_error": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "exclude_invalid_dns_domain_as_error", 
                    "required": "False", 
                    "description": [
                        "Exclude dns queries to domains outside the domains configured in the dns application profile from the list of errors."
                    ]
                }, 
                "hs_max_anomaly_penalty": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "hs_max_anomaly_penalty", 
                    "required": "False", 
                    "range": "0-100", 
                    "description": [
                        "Maximum penalty that may be deducted from health score for anomalies.", 
                        "Allowed values are 0-100."
                    ]
                }, 
                "exclude_gs_down_as_error": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "exclude_gs_down_as_error", 
                    "required": "False", 
                    "description": [
                        "Exclude queries to gslb services that are operationally down from the list of errors."
                    ]
                }, 
                "apdex_server_response_tolerated_factor": {
                    "default_value": 4.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "apdex_server_response_tolerated_factor", 
                    "required": "False", 
                    "range": "1-1000", 
                    "description": [
                        "Server tolerated response latency factor.", 
                        "Servermust response within this factor times the satisfactory threshold (apdex_server_response_threshold) to be considered tolerated.", 
                        "Allowed values are 1-1000."
                    ]
                }, 
                "client_log_config": {
                    "doc_type": "ClientLogConfiguration", 
                    "py_type": "ClientLogConfiguration", 
                    "name": "client_log_config", 
                    "required": "False", 
                    "ref_type": "ClientLogConfiguration", 
                    "description": [
                        "Configure which logs are sent to the avi controller from ses and how they are processed."
                    ]
                }, 
                "disable_server_analytics": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_server_analytics", 
                    "required": "False", 
                    "description": [
                        "Disable analytics on backend servers.", 
                        "This may be desired in container environment when there are large number of  ephemeral servers."
                    ]
                }, 
                "conn_server_lossy_timeo_rexmt_threshold": {
                    "default_value": 20, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "conn_server_lossy_timeo_rexmt_threshold", 
                    "required": "False", 
                    "range": "1-100", 
                    "description": [
                        "A connection between avi and server is considered lossy when more than this percentage of packets are retransmitted due to timeout.", 
                        "Allowed values are 1-100."
                    ]
                }, 
                "exclude_client_close_before_request_as_error": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "exclude_client_close_before_request_as_error", 
                    "required": "False", 
                    "description": [
                        "Exclude client closed connection before an http request could be completed from being classified as an error."
                    ]
                }, 
                "exclude_unsupported_dns_query_as_error": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "exclude_unsupported_dns_query_as_error", 
                    "required": "False", 
                    "description": [
                        "Exclude unsupported dns queries from the list of errors."
                    ]
                }, 
                "exclude_persistence_change_as_error": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "exclude_persistence_change_as_error", 
                    "required": "False", 
                    "description": [
                        "Exclude persistence server changed while load balancing' from the list of errors."
                    ]
                }, 
                "hs_security_selfsignedcert_penalty": {
                    "default_value": 1.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_security_selfsignedcert_penalty", 
                    "required": "False", 
                    "range": "0-5", 
                    "description": [
                        "Deprecated.", 
                        "Allowed values are 0-5."
                    ]
                }, 
                "conn_server_lossy_total_rexmt_threshold": {
                    "default_value": 50, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "conn_server_lossy_total_rexmt_threshold", 
                    "required": "False", 
                    "range": "1-100", 
                    "description": [
                        "A connection between avi and server is considered lossy when more than this percentage of packets are retransmitted.", 
                        "Allowed values are 1-100."
                    ]
                }, 
                "conn_lossy_timeo_rexmt_threshold": {
                    "default_value": 20, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "conn_lossy_timeo_rexmt_threshold", 
                    "required": "False", 
                    "range": "1-100", 
                    "description": [
                        "A connection between client and avi is considered lossy when more than this percentage of packets are retransmitted due to timeout.", 
                        "Allowed values are 1-100."
                    ]
                }, 
                "apdex_rtt_tolerated_factor": {
                    "default_value": 4.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "apdex_rtt_tolerated_factor", 
                    "required": "False", 
                    "range": "1-1000", 
                    "description": [
                        "Tolerated client to avi round trip time(rtt) factor.", 
                        "It is a multiple of apdex_rtt_tolerated_factor.", 
                        "Allowed values are 1-1000."
                    ]
                }, 
                "hs_security_certscore_le30d": {
                    "default_value": 4.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_security_certscore_le30d", 
                    "required": "False", 
                    "range": "0-5", 
                    "description": [
                        "Score assigned when the certificate expires in less than or equal to 30 days.", 
                        "Allowed values are 0-5."
                    ]
                }, 
                "apdex_rum_tolerated_factor": {
                    "default_value": 4.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "apdex_rum_tolerated_factor", 
                    "required": "False", 
                    "range": "1-1000", 
                    "description": [
                        "Virtual service threshold factor for tolerated page load time (plt) as multiple of apdex_rum_threshold.", 
                        "Allowed values are 1-1000."
                    ]
                }, 
                "conn_server_lossy_ooo_threshold": {
                    "default_value": 50, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "conn_server_lossy_ooo_threshold", 
                    "required": "False", 
                    "range": "1-100", 
                    "description": [
                        "A connection between avi and server is considered lossy when more than this percentage of out of order packets are received.", 
                        "Allowed values are 1-100."
                    ]
                }, 
                "hs_security_cipherscore_eq000b": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_security_cipherscore_eq000b", 
                    "required": "False", 
                    "range": "0-5", 
                    "description": [
                        "Score assigned when the minimum cipher strength is 0 bits.", 
                        "Allowed values are 0-5."
                    ]
                }, 
                "hs_security_weak_signature_algo_penalty": {
                    "default_value": 1.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_security_weak_signature_algo_penalty", 
                    "required": "False", 
                    "range": "0-5", 
                    "description": [
                        "Penalty for allowing weak signature algorithm(s).", 
                        "Allowed values are 0-5."
                    ]
                }, 
                "hs_pscore_traffic_threshold_l4_server": {
                    "default_value": 10.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_pscore_traffic_threshold_l4_server", 
                    "required": "False", 
                    "description": [
                        "Threshold number of connections in 5min, below which apdexr, apdexc, rum_apdex, and other network quality metrics are not computed."
                    ]
                }, 
                "exclude_syn_retransmit_as_error": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "exclude_syn_retransmit_as_error", 
                    "required": "False", 
                    "description": [
                        "Exclude 'server unanswered syns' from the list of errors."
                    ]
                }, 
                "ranges": {
                    "doc_type": "HTTPStatusRange", 
                    "py_type": "list", 
                    "name": "ranges", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HTTPStatusRange", 
                    "description": [
                        "List of http status code ranges to be excluded from being classified as an error."
                    ]
                }, 
                "apdex_server_rtt_threshold": {
                    "default_value": 125, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "apdex_server_rtt_threshold", 
                    "required": "False", 
                    "range": "1-2000", 
                    "description": [
                        "Satisfactory client to avi round trip time(rtt).", 
                        "Allowed values are 1-2000."
                    ]
                }, 
                "hs_security_hsts_penalty": {
                    "default_value": 1.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_security_hsts_penalty", 
                    "required": "False", 
                    "range": "0-5", 
                    "description": [
                        "Penalty for not enabling hsts.", 
                        "Allowed values are 0-5."
                    ]
                }, 
                "exclude_server_dns_error_as_error": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "exclude_server_dns_error_as_error", 
                    "required": "False", 
                    "description": [
                        "Exclude server dns error response from the list of errors."
                    ]
                }, 
                "hs_security_tls11_score": {
                    "default_value": 5.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_security_tls11_score", 
                    "required": "False", 
                    "range": "0-5", 
                    "description": [
                        "Score assigned when supporting tls1.1 encryption protocol.", 
                        "Allowed values are 0-5."
                    ]
                }, 
                "conn_lossy_zero_win_size_event_threshold": {
                    "default_value": 2, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "conn_lossy_zero_win_size_event_threshold", 
                    "required": "False", 
                    "range": "0-100", 
                    "description": [
                        "A client connection is considered lossy when percentage of times a packet could not be trasmitted due to tcp zero window is above this threshold.", 
                        "Allowed values are 0-100."
                    ]
                }, 
                "apdex_rum_threshold": {
                    "default_value": 5000, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "apdex_rum_threshold", 
                    "required": "False", 
                    "range": "1-30000", 
                    "description": [
                        "If a client is able to load a page in less than the satisfactory latency threshold, the pageload is considered satisfied.", 
                        "It is considered tolerated if it is greater than satisfied but less than the tolerated latency multiplied by satisifed latency.", 
                        "Greater than this number and the client's request is considered frustrated.", 
                        "A pageload includes the time for dns lookup, download of all http objects, and page render time.", 
                        "Allowed values are 1-30000."
                    ]
                }, 
                "hs_max_security_penalty": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "hs_max_security_penalty", 
                    "required": "False", 
                    "range": "0-100", 
                    "description": [
                        "Maximum penalty that may be deducted from health score based on security assessment.", 
                        "Allowed values are 0-100."
                    ]
                }, 
                "apdex_rtt_threshold": {
                    "default_value": 250, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "apdex_rtt_threshold", 
                    "required": "False", 
                    "range": "1-2000", 
                    "description": [
                        "Satisfactory client to avi round trip time(rtt).", 
                        "Allowed values are 1-2000."
                    ]
                }, 
                "client_log_streaming_config": {
                    "doc_type": "ClientLogStreamingConfig", 
                    "py_type": "ClientLogStreamingConfig", 
                    "name": "client_log_streaming_config", 
                    "required": "False", 
                    "ref_type": "ClientLogStreamingConfig", 
                    "description": [
                        "Configure to stream logs to an external server.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "apdex_response_tolerated_factor": {
                    "default_value": 4.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "apdex_response_tolerated_factor", 
                    "required": "False", 
                    "range": "1-1000", 
                    "description": [
                        "Client tolerated response latency factor.", 
                        "Client must receive a response within this factor times the satisfactory threshold (apdex_response_threshold) to be considered tolerated.", 
                        "Allowed values are 1-1000."
                    ]
                }, 
                "exclude_tcp_reset_as_error": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "exclude_tcp_reset_as_error", 
                    "required": "False", 
                    "description": [
                        "Exclude tcp resets by client from the list of potential errors."
                    ]
                }, 
                "hs_security_chain_invalidity_penalty": {
                    "default_value": 1.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_security_chain_invalidity_penalty", 
                    "required": "False", 
                    "range": "0-5", 
                    "description": [
                        "Penalty for allowing certificates with invalid chain.", 
                        "Allowed values are 0-5."
                    ]
                }, 
                "exclude_invalid_dns_query_as_error": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "exclude_invalid_dns_query_as_error", 
                    "required": "False", 
                    "description": [
                        "Exclude invalid dns queries from the list of errors."
                    ]
                }, 
                "conn_lossy_ooo_threshold": {
                    "default_value": 50, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "conn_lossy_ooo_threshold", 
                    "required": "False", 
                    "range": "1-100", 
                    "description": [
                        "A connection between client and avi is considered lossy when more than this percentage of out of order packets are received.", 
                        "Allowed values are 1-100."
                    ]
                }, 
                "hs_security_cipherscore_lt128b": {
                    "default_value": 3.5, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_security_cipherscore_lt128b", 
                    "required": "False", 
                    "range": "0-5", 
                    "description": [
                        "Score assigned when the minimum cipher strength is less than 128 bits.", 
                        "Allowed values are 0-5."
                    ]
                }, 
                "hs_security_tls10_score": {
                    "default_value": 5.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_security_tls10_score", 
                    "required": "False", 
                    "range": "0-5", 
                    "description": [
                        "Score assigned when supporting tls1.0 encryption protocol.", 
                        "Allowed values are 0-5."
                    ]
                }, 
                "hs_security_certscore_expired": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_security_certscore_expired", 
                    "required": "False", 
                    "range": "0-5", 
                    "description": [
                        "Score assigned when the certificate has expired.", 
                        "Allowed values are 0-5."
                    ]
                }, 
                "apdex_response_threshold": {
                    "default_value": 500, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "apdex_response_threshold", 
                    "required": "False", 
                    "range": "1-30000", 
                    "description": [
                        "If a client receives an http response in less than the satisfactory latency threshold, the request is considered satisfied.", 
                        "It is considered tolerated if it is not satisfied and less than tolerated latency factor multiplied by the satisfactory latency threshold.", 
                        "Greater than this number and the client's request is considered frustrated.", 
                        "Allowed values are 1-30000."
                    ]
                }, 
                "hs_security_encalgo_score_none": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "hs_security_encalgo_score_none", 
                    "required": "False", 
                    "range": "0-5", 
                    "description": [
                        "Score assigned when no algorithm is used for encryption.", 
                        "Allowed values are 0-5."
                    ]
                }
            }
        }
    }, 
    "cloud_objects": {
        "vCloudAirConfiguration": {
            "name": "vCloudAirConfiguration", 
            "properties": {
                "privilege": {
                    "default_value": "WRITE_ACCESS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "privilege", 
                    "required": "True", 
                    "option_values": [
                        "NO_ACCESS", 
                        "READ_ACCESS", 
                        "WRITE_ACCESS"
                    ], 
                    "description": [
                        "Vcloudair access mode.", 
                        "Enum options - NO_ACCESS, READ_ACCESS, WRITE_ACCESS."
                    ]
                }
            }
        }, 
        "CloudStackConfiguration": {
            "name": "CloudStackConfiguration", 
            "properties": {
                "hypervisor": {
                    "default_value": "KVM", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "hypervisor", 
                    "required": "False", 
                    "option_values": [
                        "DEFAULT", 
                        "VMWARE_ESX", 
                        "KVM", 
                        "VMWARE_VSAN", 
                        "XEN"
                    ], 
                    "description": [
                        "Default hypervisor type.", 
                        "Enum options - DEFAULT, VMWARE_ESX, KVM, VMWARE_VSAN, XEN."
                    ]
                }
            }
        }, 
        "LinuxServerConfiguration": {
            "name": "LinuxServerConfiguration", 
            "properties": {
                "se_sys_disk_size_GB": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_sys_disk_size_GB", 
                    "required": "False", 
                    "description": [
                        "Se system logs disk size for cloud."
                    ]
                }, 
                "se_inband_mgmt": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "se_inband_mgmt", 
                    "required": "False", 
                    "description": [
                        "Flag to notify the se's in this cloud have an inband management interface, this can be overridden at se host level by setting host_attr attr_key", 
                        "as se_inband_mgmt with value of true or false."
                    ]
                }, 
                "se_log_disk_size_GB": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_log_disk_size_GB", 
                    "required": "False", 
                    "description": [
                        "Se client log disk size for cloud."
                    ]
                }, 
                "hosts": {
                    "doc_type": "LinuxServerHost", 
                    "py_type": "list", 
                    "name": "hosts", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "LinuxServerHost", 
                    "description": []
                }, 
                "ssh_attr": {
                    "doc_type": "SSHSeDeployment", 
                    "py_type": "SSHSeDeployment", 
                    "name": "ssh_attr", 
                    "required": "False", 
                    "ref_type": "SSHSeDeployment", 
                    "description": [
                        "Parameters for ssh to hosts.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "docker_registry_se": {
                    "doc_type": "DockerRegistry", 
                    "py_type": "DockerRegistry", 
                    "name": "docker_registry_se", 
                    "required": "False", 
                    "ref_type": "DockerRegistry", 
                    "description": [
                        "Private docker registry for se image storage.", 
                        "Field deprecated in 17.1.2."
                    ]
                }
            }
        }, 
        "MesosSeResources": {
            "name": "MesosSeResources", 
            "properties": {
                "cpu": {
                    "default_value": 2.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "cpu", 
                    "required": "False", 
                    "description": [
                        "Obsolete - ignored."
                    ]
                }, 
                "memory": {
                    "default_value": 4096, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "memory", 
                    "required": "False", 
                    "description": [
                        "Obsolete - ignored."
                    ]
                }
            }
        }, 
        "LinuxServerHost": {
            "name": "LinuxServerHost", 
            "properties": {
                "host_attr": {
                    "doc_type": "HostAttributes", 
                    "py_type": "list", 
                    "name": "host_attr", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HostAttributes", 
                    "description": []
                }, 
                "host_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "host_ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "vCenterConfiguration": {
            "name": "vCenterConfiguration", 
            "properties": {
                "privilege": {
                    "default_value": "WRITE_ACCESS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "privilege", 
                    "required": "True", 
                    "option_values": [
                        "NO_ACCESS", 
                        "READ_ACCESS", 
                        "WRITE_ACCESS"
                    ], 
                    "description": [
                        "Set the access mode to vcenter as either read, which allows avi to discover networks and servers, or write, which also allows avi to create", 
                        "service engines and configure their network properties.", 
                        "Enum options - NO_ACCESS, READ_ACCESS, WRITE_ACCESS."
                    ]
                }, 
                "management_ip_subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "management_ip_subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Management subnet to use for avi service engines."
                    ]
                }
            }
        }, 
        "CloudRuntime": {
            "name": "CloudRuntime", 
            "properties": {
                "network_sync_complete": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "network_sync_complete", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "NuageSDNController": {
            "name": "NuageSDNController", 
            "properties": {
                "nuage_port": {
                    "default_value": 8443, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "nuage_port", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SSHSeDeployment": {
            "name": "SSHSeDeployment", 
            "properties": {
                "host_os": {
                    "default_value": "COREOS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "host_os", 
                    "required": "False", 
                    "description": [
                        "Host os distribution e.g.", 
                        "Coreos, ubuntu, redhat.", 
                        "Field deprecated in 17.1.1."
                    ]
                }
            }
        }, 
        "MesosConfiguration": {
            "name": "MesosConfiguration", 
            "properties": {
                "use_vips_for_east_west_services": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_vips_for_east_west_services", 
                    "required": "False", 
                    "description": [
                        "Use unique virtual ip address for every east west service in mesos/marathon.", 
                        "'use_bridge_ip_as_vip' and 'vip' fields , if set, will not be used if this field is set."
                    ]
                }, 
                "east_west_placement_subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "east_west_placement_subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Match against this prefix when placing east-west vss on ses (mesos mode only)."
                    ]
                }, 
                "enable_event_subscription": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_event_subscription", 
                    "required": "False", 
                    "description": [
                        "Enable marathon event subscriptions."
                    ]
                }, 
                "nuage_controller": {
                    "doc_type": "NuageSDNController", 
                    "py_type": "NuageSDNController", 
                    "name": "nuage_controller", 
                    "required": "False", 
                    "ref_type": "NuageSDNController", 
                    "description": [
                        "Nuage overlay sdn controller information."
                    ]
                }, 
                "feproxy_vips_enable_proxy_arp": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "feproxy_vips_enable_proxy_arp", 
                    "required": "False", 
                    "description": [
                        "Enable proxy arp from host interface for front end  proxies."
                    ]
                }, 
                "disable_auto_backend_service_sync": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_auto_backend_service_sync", 
                    "required": "False", 
                    "description": [
                        "Disable auto service sync for back end services."
                    ]
                }, 
                "feproxy_bridge_name": {
                    "default_value": "cbr1", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "feproxy_bridge_name", 
                    "required": "False", 
                    "description": [
                        "Name of second linux bridge on host providing connectivity for front end proxies.", 
                        "This is a disruptive change."
                    ]
                }, 
                "vip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "vip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Vip to be used by all east-west apps on all hosts.", 
                        "Preferrably use an address from outside the subnet."
                    ]
                }, 
                "container_port_match_http_service": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "container_port_match_http_service", 
                    "required": "False", 
                    "description": [
                        "Perform container port matching to create a http virtualservice instead of a tcp/udp virtualservice."
                    ]
                }, 
                "all_vses_are_feproxy": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "all_vses_are_feproxy", 
                    "required": "False", 
                    "description": [
                        "Consider all virtualservices as front end proxies.", 
                        "Front end proxies are placed on specific ses as opposed to back end proxies placed on all ses.", 
                        "Applicable where each service has its own vip and vip is reachable from anywhere."
                    ]
                }, 
                "se_volume": {
                    "default_value": "/opt/avi/se", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "se_volume", 
                    "required": "False", 
                    "description": [
                        "Host volume to be used as a disk for avi se, this is a disruptive change."
                    ]
                }, 
                "se_exclude_attributes": {
                    "doc_type": "MesosAttribute", 
                    "py_type": "list", 
                    "name": "se_exclude_attributes", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MesosAttribute", 
                    "description": [
                        "Exclude hosts with attributes for se creation."
                    ]
                }, 
                "se_deployment_method": {
                    "default_value": "MESOS_SE_CREATE_FLEET", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "se_deployment_method", 
                    "required": "False", 
                    "option_values": [
                        "MESOS_SE_CREATE_FLEET", 
                        "MESOS_SE_CREATE_SSH", 
                        "MESOS_SE_CREATE_MARATHON"
                    ], 
                    "description": [
                        "Use fleet/ssh for deploying service engines.", 
                        "Enum options - MESOS_SE_CREATE_FLEET, MESOS_SE_CREATE_SSH, MESOS_SE_CREATE_MARATHON."
                    ]
                }, 
                "docker_registry_se": {
                    "doc_type": "DockerRegistry", 
                    "py_type": "DockerRegistry", 
                    "name": "docker_registry_se", 
                    "required": "False", 
                    "ref_type": "DockerRegistry", 
                    "description": [
                        "Docker registry for serviceengine image."
                    ]
                }, 
                "feproxy_route_publish": {
                    "doc_type": "FeProxyRoutePublishConfig", 
                    "py_type": "FeProxyRoutePublishConfig", 
                    "name": "feproxy_route_publish", 
                    "required": "False", 
                    "ref_type": "FeProxyRoutePublishConfig", 
                    "description": [
                        "Publish ecmp route to upstream router for vip."
                    ]
                }, 
                "ssh_se_deployment": {
                    "doc_type": "SSHSeDeployment", 
                    "py_type": "SSHSeDeployment", 
                    "name": "ssh_se_deployment", 
                    "required": "False", 
                    "ref_type": "SSHSeDeployment", 
                    "description": [
                        "Parameters for ssh se deployment.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "feproxy_container_port_as_service": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "feproxy_container_port_as_service", 
                    "required": "False", 
                    "description": [
                        "For front end proxies, use container port as service port."
                    ]
                }, 
                "use_controller_image": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_controller_image", 
                    "required": "False", 
                    "description": [
                        "If true, use controller generated se docker image via fileservice, else use docker repository image as defined by docker_registry_se."
                    ]
                }, 
                "disable_auto_gs_sync": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_auto_gs_sync", 
                    "required": "False", 
                    "description": [
                        "Disable auto sync for gslb services.", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "use_bridge_ip_as_vip": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_bridge_ip_as_vip", 
                    "required": "False", 
                    "description": [
                        "Use bridge ip on each host as vip."
                    ]
                }, 
                "coredump_directory": {
                    "default_value": "/var/lib/systemd/coredump", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "coredump_directory", 
                    "required": "False", 
                    "description": [
                        "Directory to mount to check for core dumps on service engines.", 
                        "This will be mapped read only to /var/crash on any new service engines.", 
                        "This is a disruptive change."
                    ]
                }, 
                "disable_auto_frontend_service_sync": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_auto_frontend_service_sync", 
                    "required": "False", 
                    "description": [
                        "Disable auto service sync for front end services."
                    ]
                }, 
                "se_resources": {
                    "doc_type": "MesosSeResources", 
                    "py_type": "list", 
                    "name": "se_resources", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MesosSeResources", 
                    "description": [
                        "Obsolete - ignored."
                    ]
                }, 
                "se_include_attributes": {
                    "doc_type": "MesosAttribute", 
                    "py_type": "list", 
                    "name": "se_include_attributes", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MesosAttribute", 
                    "description": [
                        "Create ses just on hosts with include attributes."
                    ]
                }, 
                "app_sync_frequency": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "app_sync_frequency", 
                    "required": "False", 
                    "description": [
                        "Sync frequency in seconds with frameworks."
                    ]
                }, 
                "mesos_url": {
                    "default_value": "http://leader.mesos:5050", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "mesos_url", 
                    "required": "False", 
                    "description": [
                        "Mesos url of the form http //host port."
                    ]
                }, 
                "marathon_configurations": {
                    "doc_type": "MarathonConfiguration", 
                    "py_type": "list", 
                    "name": "marathon_configurations", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MarathonConfiguration", 
                    "description": [
                        "List of marathon frameworks."
                    ]
                }, 
                "marathon_se_deployment": {
                    "doc_type": "MarathonSeDeployment", 
                    "py_type": "MarathonSeDeployment", 
                    "name": "marathon_se_deployment", 
                    "required": "False", 
                    "ref_type": "MarathonSeDeployment", 
                    "description": [
                        "Options for marathon se deployment."
                    ]
                }, 
                "services_accessible_all_interfaces": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "services_accessible_all_interfaces", 
                    "required": "False", 
                    "description": [
                        "Make service ports accessible on all host interfaces in addition to east-west vip and/or bridge ip.", 
                        "Usually enabled aws mesos clusters to export east-west services on host interface."
                    ]
                }, 
                "se_spawn_rate": {
                    "default_value": 25, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_spawn_rate", 
                    "required": "False", 
                    "description": [
                        "New se spawn rate per minute."
                    ]
                }, 
                "use_container_ip_port": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_container_ip_port", 
                    "required": "False", 
                    "description": [
                        "Use container ip address port for pool instead of host ip address hostport.", 
                        "This mode is applicable if the container ip is reachable (not a private nated ip) from other hosts in a routed environment for containers."
                    ]
                }, 
                "disable_auto_se_creation": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_auto_se_creation", 
                    "required": "False", 
                    "description": [
                        "Disable se creation."
                    ]
                }
            }
        }, 
        "MarathonSeDeployment": {
            "name": "MarathonSeDeployment", 
            "properties": {
                "host_os": {
                    "default_value": "COREOS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "host_os", 
                    "required": "False", 
                    "description": [
                        "Host os distribution e.g.", 
                        "Coreos, ubuntu, redhat."
                    ]
                }, 
                "docker_image": {
                    "default_value": "fedora", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "docker_image", 
                    "required": "False", 
                    "description": [
                        "Docker image to be used for avi se installation e.g.", 
                        "Fedora, ubuntu."
                    ]
                }
            }
        }, 
        "RancherConfiguration": {
            "name": "RancherConfiguration", 
            "properties": {
                "se_volume": {
                    "default_value": "/opt/avi", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "se_volume", 
                    "required": "False", 
                    "description": [
                        "Host volume to be used as a disk for avi se, this is a disruptive change."
                    ]
                }, 
                "ssh_se_deployment": {
                    "doc_type": "SSHSeDeployment", 
                    "py_type": "SSHSeDeployment", 
                    "name": "ssh_se_deployment", 
                    "required": "False", 
                    "ref_type": "SSHSeDeployment", 
                    "description": [
                        "Parameters for ssh se deployment.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "east_west_placement_subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "east_west_placement_subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Match against this prefix when placing east-west vss on ses ."
                    ]
                }, 
                "enable_event_subscription": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_event_subscription", 
                    "required": "False", 
                    "description": [
                        "Enable docker event subscription."
                    ]
                }, 
                "use_controller_image": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_controller_image", 
                    "required": "False", 
                    "description": [
                        "If true, use controller generated se docker image via fileservice, else use docker repository image as defined by docker_registry_se."
                    ]
                }, 
                "nuage_controller": {
                    "doc_type": "NuageSDNController", 
                    "py_type": "NuageSDNController", 
                    "name": "nuage_controller", 
                    "required": "False", 
                    "ref_type": "NuageSDNController", 
                    "description": [
                        "Nuage overlay sdn controller information."
                    ]
                }, 
                "coredump_directory": {
                    "default_value": "/var/lib/systemd/coredump", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "coredump_directory", 
                    "required": "False", 
                    "description": [
                        "Directory to mount to check for core dumps on service engines.", 
                        "This will be mapped read only to /var/crash on any new service engines.", 
                        "This is a disruptive change."
                    ]
                }, 
                "feproxy_container_port_as_service": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "feproxy_container_port_as_service", 
                    "required": "False", 
                    "description": [
                        "For front end proxies, use container port as service port."
                    ]
                }, 
                "disable_auto_frontend_service_sync": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_auto_frontend_service_sync", 
                    "required": "False", 
                    "description": [
                        "Disable auto service sync for front end services."
                    ]
                }, 
                "feproxy_vips_enable_proxy_arp": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "feproxy_vips_enable_proxy_arp", 
                    "required": "False", 
                    "description": [
                        "Enable proxy arp from host interface for front end  proxies."
                    ]
                }, 
                "disable_auto_backend_service_sync": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_auto_backend_service_sync", 
                    "required": "False", 
                    "description": [
                        "Disable auto service sync for back end services."
                    ]
                }, 
                "se_include_attributes": {
                    "doc_type": "MesosAttribute", 
                    "py_type": "list", 
                    "name": "se_include_attributes", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MesosAttribute", 
                    "description": [
                        "Create ses just on hosts with include attributes."
                    ]
                }, 
                "container_port_match_http_service": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "container_port_match_http_service", 
                    "required": "False", 
                    "description": [
                        "Perform container port matching to create a http virtualservice instead of a tcp/udp virtualservice."
                    ]
                }, 
                "se_spawn_rate": {
                    "default_value": 25, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_spawn_rate", 
                    "required": "False", 
                    "description": [
                        "New se spawn rate per minute."
                    ]
                }, 
                "services_accessible_all_interfaces": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "services_accessible_all_interfaces", 
                    "required": "False", 
                    "description": [
                        "Make service ports accessible on all host interfaces in addition to east-west vip and/or bridge ip.", 
                        "Usually enabled aws clusters to export east-west services on host interface."
                    ]
                }, 
                "se_deployment_method": {
                    "default_value": "SE_CREATE_SSH", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "se_deployment_method", 
                    "required": "False", 
                    "option_values": [
                        "SE_CREATE_FLEET", 
                        "SE_CREATE_SSH", 
                        "SE_CREATE_POD"
                    ], 
                    "description": [
                        "Use fleet/ssh for se deployment.", 
                        "Enum options - SE_CREATE_FLEET, SE_CREATE_SSH, SE_CREATE_POD."
                    ]
                }, 
                "app_sync_frequency": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "app_sync_frequency", 
                    "required": "False", 
                    "description": [
                        "Sync frequency in seconds with frameworks."
                    ]
                }, 
                "docker_registry_se": {
                    "doc_type": "DockerRegistry", 
                    "py_type": "DockerRegistry", 
                    "name": "docker_registry_se", 
                    "required": "False", 
                    "ref_type": "DockerRegistry", 
                    "description": [
                        "Docker registry for serviceengine image."
                    ]
                }, 
                "se_exclude_attributes": {
                    "doc_type": "MesosAttribute", 
                    "py_type": "list", 
                    "name": "se_exclude_attributes", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MesosAttribute", 
                    "description": [
                        "Exclude hosts with attributes for se creation."
                    ]
                }, 
                "use_container_ip_port": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_container_ip_port", 
                    "required": "False", 
                    "description": [
                        "Use container ip address port for pool instead of host ip address hostport.", 
                        "This mode is applicable if the container ip is reachable (not a private nated ip) from other hosts in a routed environment for containers."
                    ]
                }, 
                "disable_auto_se_creation": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_auto_se_creation", 
                    "required": "False", 
                    "description": [
                        "Disable se creation."
                    ]
                }
            }
        }, 
        "MarathonConfiguration": {
            "name": "MarathonConfiguration", 
            "properties": {
                "private_port_range": {
                    "doc_type": "PortRange", 
                    "py_type": "PortRange", 
                    "name": "private_port_range", 
                    "required": "False", 
                    "ref_type": "PortRange", 
                    "description": [
                        "Private port range allocated to this marathon framework instance."
                    ]
                }, 
                "use_token_auth": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_token_auth", 
                    "required": "False", 
                    "description": [
                        "Use token based authentication instead of basic authentication.", 
                        "Token is refreshed every 5 minutes."
                    ]
                }, 
                "vs_name_tag_framework": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "vs_name_tag_framework", 
                    "required": "False", 
                    "description": [
                        "Tag vs name with framework name or framework_tag.", 
                        "Useful in deployments with multiple frameworks."
                    ]
                }, 
                "public_port_range": {
                    "doc_type": "PortRange", 
                    "py_type": "PortRange", 
                    "name": "public_port_range", 
                    "required": "False", 
                    "ref_type": "PortRange", 
                    "description": [
                        "Public port range allocated to this marathon framework instance."
                    ]
                }, 
                "marathon_url": {
                    "default_value": "http://leader.mesos:8080", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "marathon_url", 
                    "required": "False", 
                    "description": [
                        "Marathon api url of the form http //host port."
                    ]
                }, 
                "tenant": {
                    "default_value": "admin", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "tenant", 
                    "required": "False", 
                    "description": [
                        "Tenant to pin this marathon instance to.", 
                        "If set, a tenant object will be created in avi bearing this name and all applications created in this marathon will be associated with this", 
                        "tenant regardless of, if any, tenant configuration in marathon label for this application."
                    ]
                }
            }
        }, 
        "APICConfiguration": {
            "name": "APICConfiguration", 
            "properties": {
                "apic_vendor": {
                    "default_value": "Avi", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "apic_vendor", 
                    "required": "False", 
                    "description": []
                }, 
                "avi_controller_username": {
                    "default_value": "admin", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "avi_controller_username", 
                    "required": "False", 
                    "description": [
                        "The username apic will use when authenticating with avi vantage."
                    ]
                }, 
                "apic_admin_tenant": {
                    "default_value": "common", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "apic_admin_tenant", 
                    "required": "False", 
                    "description": [
                        "Name of the avi specific tenant created within apic."
                    ]
                }, 
                "managed_mode": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "managed_mode", 
                    "required": "False", 
                    "description": [
                        "Use managed mode for apic service insertion.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "context_aware": {
                    "default_value": "SINGLE_CONTEXT", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "context_aware", 
                    "required": "False", 
                    "option_values": [
                        "SINGLE_CONTEXT", 
                        "MULTI_CONTEXT"
                    ], 
                    "description": [
                        "Context aware for supporting service graphs across vrfs.", 
                        "Enum options - SINGLE_CONTEXT, MULTI_CONTEXT."
                    ]
                }, 
                "version": {
                    "default_value": "1.0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "version", 
                    "required": "False", 
                    "description": [
                        "Avi device package version."
                    ]
                }, 
                "apic_product": {
                    "default_value": "ASP", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "apic_product", 
                    "required": "False", 
                    "description": []
                }, 
                "minor": {
                    "default_value": "2", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "minor", 
                    "required": "False", 
                    "description": [
                        "Avi device package minor version."
                    ]
                }
            }
        }, 
        "DockerConfiguration": {
            "name": "DockerConfiguration", 
            "properties": {
                "se_volume": {
                    "default_value": "/opt/avi", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "se_volume", 
                    "required": "False", 
                    "description": [
                        "Host volume to be used as a disk for avi se, this is a disruptive change."
                    ]
                }, 
                "ssh_se_deployment": {
                    "doc_type": "SSHSeDeployment", 
                    "py_type": "SSHSeDeployment", 
                    "name": "ssh_se_deployment", 
                    "required": "False", 
                    "ref_type": "SSHSeDeployment", 
                    "description": [
                        "Parameters for ssh se deployment.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "east_west_placement_subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "east_west_placement_subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Match against this prefix when placing east-west vss on ses ."
                    ]
                }, 
                "enable_event_subscription": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_event_subscription", 
                    "required": "False", 
                    "description": [
                        "Enable docker event subscription."
                    ]
                }, 
                "use_controller_image": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_controller_image", 
                    "required": "False", 
                    "description": [
                        "If true, use controller generated se docker image via fileservice, else use docker repository image as defined by docker_registry_se."
                    ]
                }, 
                "coredump_directory": {
                    "default_value": "/var/lib/systemd/coredump", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "coredump_directory", 
                    "required": "False", 
                    "description": [
                        "Directory to mount to check for core dumps on service engines.", 
                        "This will be mapped read only to /var/crash on any new service engines.", 
                        "This is a disruptive change."
                    ]
                }, 
                "feproxy_container_port_as_service": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "feproxy_container_port_as_service", 
                    "required": "False", 
                    "description": [
                        "For front end proxies, use container port as service port."
                    ]
                }, 
                "disable_auto_frontend_service_sync": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_auto_frontend_service_sync", 
                    "required": "False", 
                    "description": [
                        "Disable auto service sync for front end services."
                    ]
                }, 
                "feproxy_vips_enable_proxy_arp": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "feproxy_vips_enable_proxy_arp", 
                    "required": "False", 
                    "description": [
                        "Enable proxy arp from host interface for front end  proxies."
                    ]
                }, 
                "disable_auto_backend_service_sync": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_auto_backend_service_sync", 
                    "required": "False", 
                    "description": [
                        "Disable auto service sync for back end services."
                    ]
                }, 
                "se_include_attributes": {
                    "doc_type": "MesosAttribute", 
                    "py_type": "list", 
                    "name": "se_include_attributes", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MesosAttribute", 
                    "description": [
                        "Create ses just on hosts with include attributes."
                    ]
                }, 
                "container_port_match_http_service": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "container_port_match_http_service", 
                    "required": "False", 
                    "description": [
                        "Perform container port matching to create a http virtualservice instead of a tcp/udp virtualservice."
                    ]
                }, 
                "se_spawn_rate": {
                    "default_value": 25, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_spawn_rate", 
                    "required": "False", 
                    "description": [
                        "New se spawn rate per minute."
                    ]
                }, 
                "services_accessible_all_interfaces": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "services_accessible_all_interfaces", 
                    "required": "False", 
                    "description": [
                        "Make service ports accessible on all host interfaces in addition to east-west vip and/or bridge ip.", 
                        "Usually enabled aws clusters to export east-west services on host interface."
                    ]
                }, 
                "se_deployment_method": {
                    "default_value": "SE_CREATE_SSH", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "se_deployment_method", 
                    "required": "False", 
                    "option_values": [
                        "SE_CREATE_FLEET", 
                        "SE_CREATE_SSH", 
                        "SE_CREATE_POD"
                    ], 
                    "description": [
                        "Use fleet/ssh for se deployment.", 
                        "Enum options - SE_CREATE_FLEET, SE_CREATE_SSH, SE_CREATE_POD."
                    ]
                }, 
                "app_sync_frequency": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "app_sync_frequency", 
                    "required": "False", 
                    "description": [
                        "Sync frequency in seconds with frameworks."
                    ]
                }, 
                "docker_registry_se": {
                    "doc_type": "DockerRegistry", 
                    "py_type": "DockerRegistry", 
                    "name": "docker_registry_se", 
                    "required": "False", 
                    "ref_type": "DockerRegistry", 
                    "description": [
                        "Docker registry for serviceengine image."
                    ]
                }, 
                "se_exclude_attributes": {
                    "doc_type": "MesosAttribute", 
                    "py_type": "list", 
                    "name": "se_exclude_attributes", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MesosAttribute", 
                    "description": [
                        "Exclude hosts with attributes for se creation."
                    ]
                }, 
                "use_container_ip_port": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_container_ip_port", 
                    "required": "False", 
                    "description": [
                        "Use container ip address port for pool instead of host ip address hostport.", 
                        "This mode is applicable if the container ip is reachable (not a private nated ip) from other hosts in a routed environment for containers."
                    ]
                }, 
                "disable_auto_se_creation": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_auto_se_creation", 
                    "required": "False", 
                    "description": [
                        "Disable se creation."
                    ]
                }
            }
        }, 
        "OShiftK8SConfiguration": {
            "name": "OShiftK8SConfiguration", 
            "properties": {
                "east_west_placement_subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "east_west_placement_subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Match against this prefix when placing east-west vss on ses ."
                    ]
                }, 
                "enable_event_subscription": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_event_subscription", 
                    "required": "False", 
                    "description": [
                        "Enable kubernetes event subscription."
                    ]
                }, 
                "nuage_controller": {
                    "doc_type": "NuageSDNController", 
                    "py_type": "NuageSDNController", 
                    "name": "nuage_controller", 
                    "required": "False", 
                    "ref_type": "NuageSDNController", 
                    "description": [
                        "Nuage overlay sdn controller information."
                    ]
                }, 
                "feproxy_vips_enable_proxy_arp": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "feproxy_vips_enable_proxy_arp", 
                    "required": "False", 
                    "description": [
                        "Enable proxy arp from host interface for front end  proxies."
                    ]
                }, 
                "disable_auto_backend_service_sync": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_auto_backend_service_sync", 
                    "required": "False", 
                    "description": [
                        "Disable auto service sync for back end services."
                    ]
                }, 
                "container_port_match_http_service": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "container_port_match_http_service", 
                    "required": "False", 
                    "description": [
                        "Perform container port matching to create a http virtualservice instead of a tcp/udp virtualservice.", 
                        "Set either service_port_match_http_service or container_port_match_http_service."
                    ]
                }, 
                "default_shared_virtualservice": {
                    "doc_type": "OshiftSharedVirtualService", 
                    "py_type": "OshiftSharedVirtualService", 
                    "name": "default_shared_virtualservice", 
                    "required": "False", 
                    "ref_type": "OshiftSharedVirtualService", 
                    "description": [
                        "Default shared virtualservice that acts as the parent for all openshift routes.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "routes_share_virtualservice": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "routes_share_virtualservice", 
                    "required": "False", 
                    "description": [
                        "Routes use shared virtualservices.", 
                        "If configured, all openshift routes will be created under a parent virtualservice.", 
                        "Openshift services will not trigger a virtualservice creation.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "se_volume": {
                    "default_value": "/opt/avi", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "se_volume", 
                    "required": "False", 
                    "description": [
                        "Host volume to be used as a disk for avi se, this is a disruptive change."
                    ]
                }, 
                "se_exclude_attributes": {
                    "doc_type": "MesosAttribute", 
                    "py_type": "list", 
                    "name": "se_exclude_attributes", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MesosAttribute", 
                    "description": [
                        "Exclude hosts with attributes for se creation."
                    ]
                }, 
                "service_port_match_http_service": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "service_port_match_http_service", 
                    "required": "False", 
                    "description": [
                        "Perform service port matching to create a http virtualservice instead of a tcp/udp virtualservice.", 
                        "Set either service_port_match_http_service or container_port_match_http_service.", 
                        "Field introduced in 17.1.4."
                    ]
                }, 
                "l4_health_monitoring": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "l4_health_monitoring", 
                    "required": "False", 
                    "description": [
                        "Perform layer4 (tcp/udp) health monitoring even for layer7 (http) pools."
                    ]
                }, 
                "se_deployment_method": {
                    "default_value": "SE_CREATE_SSH", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "se_deployment_method", 
                    "required": "False", 
                    "option_values": [
                        "SE_CREATE_FLEET", 
                        "SE_CREATE_SSH", 
                        "SE_CREATE_POD"
                    ], 
                    "description": [
                        "Use ssh/pod for se deployment.", 
                        "Enum options - SE_CREATE_FLEET, SE_CREATE_SSH, SE_CREATE_POD."
                    ]
                }, 
                "sdn_overlay": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "sdn_overlay", 
                    "required": "False", 
                    "description": [
                        "Cluster uses overlay based sdn.", 
                        "Enable this flag if cluster uses a overlay based sdn for openshift, flannel, weave, nuage.", 
                        "Disable for routed mode."
                    ]
                }, 
                "use_service_cluster_ip_as_ew_vip": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_service_cluster_ip_as_ew_vip", 
                    "required": "False", 
                    "description": [
                        "Use cluster ip of service as vip for east-west services; this option requires that kube proxy is disabled on all nodes."
                    ]
                }, 
                "docker_registry_se": {
                    "doc_type": "DockerRegistry", 
                    "py_type": "DockerRegistry", 
                    "name": "docker_registry_se", 
                    "required": "False", 
                    "ref_type": "DockerRegistry", 
                    "description": [
                        "Docker registry for serviceengine image."
                    ]
                }, 
                "ssh_se_deployment": {
                    "doc_type": "SSHSeDeployment", 
                    "py_type": "SSHSeDeployment", 
                    "name": "ssh_se_deployment", 
                    "required": "False", 
                    "ref_type": "SSHSeDeployment", 
                    "description": [
                        "Parameters for ssh se deployment.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "use_scheduling_disabled_nodes": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_scheduling_disabled_nodes", 
                    "required": "False", 
                    "description": [
                        "Enable virtualservice placement on service engines on nodes with scheduling disabled.", 
                        "When false, service engines are disabled on nodes where scheduling is disabled."
                    ]
                }, 
                "use_controller_image": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_controller_image", 
                    "required": "False", 
                    "description": [
                        "If true, use controller generated se docker image via fileservice, else use docker repository image as defined by docker_registry_se."
                    ]
                }, 
                "disable_auto_gs_sync": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_auto_gs_sync", 
                    "required": "False", 
                    "description": [
                        "Disable auto sync for gslb services.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "coredump_directory": {
                    "default_value": "/var/lib/systemd/coredump", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "coredump_directory", 
                    "required": "False", 
                    "description": [
                        "Directory to mount to check for core dumps on service engines.", 
                        "This will be mapped read only to /var/crash on any new service engines.", 
                        "This is a disruptive change."
                    ]
                }, 
                "disable_auto_frontend_service_sync": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_auto_frontend_service_sync", 
                    "required": "False", 
                    "description": [
                        "Disable auto service sync for front end services."
                    ]
                }, 
                "se_include_attributes": {
                    "doc_type": "MesosAttribute", 
                    "py_type": "list", 
                    "name": "se_include_attributes", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MesosAttribute", 
                    "description": [
                        "Create ses just on hosts with include attributes."
                    ]
                }, 
                "app_sync_frequency": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "app_sync_frequency", 
                    "required": "False", 
                    "description": [
                        "Sync frequency in seconds with frameworks."
                    ]
                }, 
                "secure_egress_mode": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "secure_egress_mode", 
                    "required": "False", 
                    "description": [
                        "Allow avi vantage to create security context constraints and service accounts which allow egress pods to run in privileged mode in an openshift", 
                        "environment.", 
                        "Assumption is that credentials provided have cluster-admin role when this mode is enabled.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "default_service_as_east_west_service": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "default_service_as_east_west_service", 
                    "required": "False", 
                    "description": [
                        "If there is no explicit east_west_placement field in virtualservice configuration, treat service as a east-west service; default services such a", 
                        "openshift api server do not have virtualservice configuration."
                    ]
                }, 
                "avi_bridge_subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "avi_bridge_subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Avi linux bridge subnet on openshift/k8s nodes."
                    ]
                }, 
                "se_spawn_rate": {
                    "default_value": 25, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_spawn_rate", 
                    "required": "False", 
                    "description": [
                        "New se spawn rate per minute."
                    ]
                }, 
                "disable_auto_se_creation": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_auto_se_creation", 
                    "required": "False", 
                    "description": [
                        "Disable se creation."
                    ]
                }
            }
        }, 
        "OpenStackConfiguration": {
            "name": "OpenStackConfiguration", 
            "properties": {
                "wildcard_access": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "wildcard_access", 
                    "required": "False", 
                    "description": [
                        "If enabled, program se security group with ingress rule to allow ssh (port 22) access from 0.0.0.0/0.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "allowed_address_pairs": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "allowed_address_pairs", 
                    "required": "False", 
                    "description": [
                        "If false, allowed-address-pairs extension will not be used."
                    ]
                }, 
                "use_internal_endpoints": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_internal_endpoints", 
                    "required": "False", 
                    "description": [
                        "Use internalurl for openstack endpoints instead of the default publicurl endpoints."
                    ]
                }, 
                "security_groups": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "security_groups", 
                    "required": "False", 
                    "description": [
                        "If false, security-groups extension will not be used."
                    ]
                }, 
                "name_owner": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "name_owner", 
                    "required": "False", 
                    "description": [
                        "If true, embed owner info in vip port 'name', else embed owner info in 'device_id' field."
                    ]
                }, 
                "map_admin_to_cloudadmin": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "map_admin_to_cloudadmin", 
                    "required": "False", 
                    "description": [
                        "If true, map avi 'admin' tenant to the admin_tenant of the cloud.", 
                        "Else map avi 'admin' to openstack 'admin' tenant."
                    ]
                }, 
                "free_floatingips": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "free_floatingips", 
                    "required": "False", 
                    "description": [
                        "Free unused floating ips."
                    ]
                }, 
                "config_drive": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "config_drive", 
                    "required": "False", 
                    "description": [
                        "If false, metadata service will be used instead of  config-drive functionality to retrieve se vm metadata."
                    ]
                }, 
                "role_mapping": {
                    "doc_type": "OpenStackRoleMapping", 
                    "py_type": "list", 
                    "name": "role_mapping", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "OpenStackRoleMapping", 
                    "description": [
                        "Defines the mapping from openstack role names to avi local role names.", 
                        "For an openstack role, this mapping is consulted only if there is no local avi role with the same name as the openstack role.", 
                        "This is an ordered list and only the first matching entry is used.", 
                        "You can use '*' to match all openstack role names."
                    ]
                }, 
                "insecure": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "insecure", 
                    "required": "False", 
                    "description": [
                        "Allow self-signed certificates when communicating with https service endpoints."
                    ]
                }, 
                "tenant_se": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "tenant_se", 
                    "required": "False", 
                    "description": [
                        "If true, then ses will be created in the appropriate tenants, else ses will be created in the admin_tenant."
                    ]
                }, 
                "contrail_plugin": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "contrail_plugin", 
                    "required": "False", 
                    "description": [
                        "Enable contrail plugin mode.", 
                        "(deprecated)."
                    ]
                }, 
                "port_security": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "port_security", 
                    "required": "False", 
                    "description": [
                        "If true, port-security extension (if detected) will be used instead of security-groups, allowed-address-pairs or interface-secondary-ips.", 
                        "If false, port-security extension is skipped."
                    ]
                }, 
                "intf_sec_ips": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "intf_sec_ips", 
                    "required": "False", 
                    "description": [
                        "If true, interface-secondary-ips method will be used for vip association."
                    ]
                }, 
                "anti_affinity": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "anti_affinity", 
                    "required": "False", 
                    "description": [
                        "If true, an anti-affinity policy will be applied to all ses of a se-group, else no such policy will be applied."
                    ]
                }, 
                "use_keystone_auth": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_keystone_auth", 
                    "required": "False", 
                    "description": [
                        "Use keystone for user authentication."
                    ]
                }, 
                "import_keystone_tenants": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "import_keystone_tenants", 
                    "required": "False", 
                    "description": [
                        "Import keystone tenants list into avi."
                    ]
                }, 
                "neutron_rbac": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "neutron_rbac", 
                    "required": "False", 
                    "description": [
                        "If true, enable neutron rbac discovery of networks shared across tenants/projects."
                    ]
                }, 
                "hypervisor": {
                    "default_value": "KVM", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "hypervisor", 
                    "required": "False", 
                    "option_values": [
                        "DEFAULT", 
                        "VMWARE_ESX", 
                        "KVM", 
                        "VMWARE_VSAN", 
                        "XEN"
                    ], 
                    "description": [
                        "Default hypervisor type.", 
                        "Enum options - DEFAULT, VMWARE_ESX, KVM, VMWARE_VSAN, XEN."
                    ]
                }, 
                "nuage_port": {
                    "default_value": 8443, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "nuage_port", 
                    "required": "False", 
                    "description": []
                }, 
                "use_admin_url": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_admin_url", 
                    "required": "False", 
                    "description": [
                        "If admin urls are either inaccessible or not to be accessed from avi controller, then set this to false."
                    ]
                }, 
                "img_format": {
                    "default_value": "OS_IMG_FMT_AUTO", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "img_format", 
                    "required": "False", 
                    "option_values": [
                        "OS_IMG_FMT_AUTO", 
                        "OS_IMG_FMT_QCOW2", 
                        "OS_IMG_FMT_VMDK", 
                        "OS_IMG_FMT_RAW", 
                        "OS_IMG_FMT_FLAT"
                    ], 
                    "description": [
                        "If os_img_fmt_raw, use raw images else use qcow2 or streamoptimized/flat vmdk as appropriate.", 
                        "Enum options - OS_IMG_FMT_AUTO, OS_IMG_FMT_QCOW2, OS_IMG_FMT_VMDK, OS_IMG_FMT_RAW, OS_IMG_FMT_FLAT."
                    ]
                }, 
                "external_networks": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "external_networks", 
                    "required": "False", 
                    "description": [
                        "If true, allow selection of networks marked as 'external' for management,  vip or data networks."
                    ]
                }
            }
        }, 
        "OshiftDockerRegistryMetaData": {
            "name": "OshiftDockerRegistryMetaData", 
            "properties": {
                "registry_service": {
                    "default_value": "docker-registry", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "registry_service", 
                    "required": "False", 
                    "description": [
                        "Name of the integrated registry service in openshift."
                    ]
                }, 
                "registry_vip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "registry_vip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Static vip for 'docker-registry' service in openshift if avi is proxying for this service.this vip should be outside the cluster ip subnet in", 
                        "kubernetes and within the subnet configured (but outside the available pool of ips) in the east west ipam profile configuration for this cloud.", 
                        "For example, if kubernetes cluster vip range is 172.30.0.0/16 and subnet configured in east west ipam profile is 172.50.0.0/16, then 172.50.0.2", 
                        "can be used for this vip and ip pool can start from 172.50.0.3 onwards.", 
                        "Use this static vip in '--insecure-registry <this-vip> 5000' docker config if using an insecure registry or add this to the list of ips/hostnames", 
                        "when generating certificates if using a secure tls registry."
                    ]
                }, 
                "registry_namespace": {
                    "default_value": "default", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "registry_namespace", 
                    "required": "False", 
                    "description": [
                        "Namespace for the serviceengine image to be hosted in openshift integrated registry."
                    ]
                }
            }
        }, 
        "NsxConfiguration": {
            "name": "NsxConfiguration", 
            "properties": {
                "nsx_poll_time": {
                    "default_value": 300, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "nsx_poll_time", 
                    "required": "False", 
                    "description": [
                        "The interval (in secs) with which avi controller polls the nsx manager for updates.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "AwsConfiguration": {
            "name": "AwsConfiguration", 
            "properties": {
                "use_iam_roles": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_iam_roles", 
                    "required": "False", 
                    "description": [
                        "Use iam roles instead of access and secret key."
                    ]
                }, 
                "wildcard_access": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "wildcard_access", 
                    "required": "False", 
                    "description": [
                        "If enabled, program se security group with ingress rule to allow ssh (port 22) access from 0.0.0.0/0.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "free_elasticips": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "free_elasticips", 
                    "required": "False", 
                    "description": [
                        "Free unused elastic ip addresses."
                    ]
                }, 
                "region": {
                    "default_value": "us-west-1", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "region", 
                    "required": "False", 
                    "description": [
                        "Aws region."
                    ]
                }, 
                "route53_integration": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "route53_integration", 
                    "required": "False", 
                    "description": [
                        "If enabled, create/update dns entries in amazon route 53 zones."
                    ]
                }, 
                "zones": {
                    "doc_type": "AwsZoneConfig", 
                    "py_type": "list", 
                    "name": "zones", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "AwsZoneConfig", 
                    "description": []
                }, 
                "asg_poll_interval": {
                    "default_value": 600, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "asg_poll_interval", 
                    "required": "False", 
                    "range": "60-1800", 
                    "description": [
                        "Time interval between periodic polling of all auto scaling groups.", 
                        "Allowed values are 60-1800.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "use_sns_sqs": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_sns_sqs", 
                    "required": "False", 
                    "description": [
                        "Use sns/sqs based notifications for monitoring auto scaling groups.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "ttl": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ttl", 
                    "required": "False", 
                    "range": "1-172800", 
                    "description": [
                        "Default ttl for all records.", 
                        "Allowed values are 1-172800.", 
                        "Field introduced in 17.1.3."
                    ]
                }
            }
        }, 
        "FeProxyRoutePublishConfig": {
            "name": "FeProxyRoutePublishConfig", 
            "properties": {
                "subnet": {
                    "default_value": 32, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "subnet", 
                    "required": "False", 
                    "description": [
                        "Subnet for publisher."
                    ]
                }, 
                "publisher_port": {
                    "default_value": 80, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "publisher_port", 
                    "required": "False", 
                    "description": [
                        "Listener port for publisher."
                    ]
                }, 
                "mode": {
                    "default_value": "FE_PROXY_ROUTE_PUBLISH_NONE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "mode", 
                    "required": "False", 
                    "option_values": [
                        "FE_PROXY_ROUTE_PUBLISH_NONE", 
                        "FE_PROXY_ROUTE_PUBLISH_QUAGGA_WEBAPP"
                    ], 
                    "description": [
                        "Publish ecmp route to upstream router for vip.", 
                        "Enum options - FE_PROXY_ROUTE_PUBLISH_NONE, FE_PROXY_ROUTE_PUBLISH_QUAGGA_WEBAPP."
                    ]
                }
            }
        }, 
        "Cloud": {
            "name": "Cloud", 
            "properties": {
                "vca_configuration": {
                    "doc_type": "vCloudAirConfiguration", 
                    "py_type": "vCloudAirConfiguration", 
                    "name": "vca_configuration", 
                    "required": "False", 
                    "ref_type": "vCloudAirConfiguration", 
                    "description": []
                }, 
                "rancher_configuration": {
                    "doc_type": "RancherConfiguration", 
                    "py_type": "RancherConfiguration", 
                    "name": "rancher_configuration", 
                    "required": "False", 
                    "ref_type": "RancherConfiguration", 
                    "description": []
                }, 
                "vtype": {
                    "default_value": "CLOUD_NONE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "vtype", 
                    "required": "True", 
                    "option_values": [
                        "CLOUD_NONE", 
                        "CLOUD_VCENTER", 
                        "CLOUD_OPENSTACK", 
                        "CLOUD_AWS", 
                        "CLOUD_VCA", 
                        "CLOUD_APIC", 
                        "CLOUD_MESOS", 
                        "CLOUD_LINUXSERVER", 
                        "CLOUD_DOCKER_UCP", 
                        "CLOUD_RANCHER", 
                        "CLOUD_OSHIFT_K8S"
                    ], 
                    "description": [
                        "Cloud type.", 
                        "Enum options - CLOUD_NONE, CLOUD_VCENTER, CLOUD_OPENSTACK, CLOUD_AWS, CLOUD_VCA, CLOUD_APIC, CLOUD_MESOS, CLOUD_LINUXSERVER, CLOUD_DOCKER_UCP,", 
                        "CLOUD_RANCHER, CLOUD_OSHIFT_K8S."
                    ]
                }, 
                "prefer_static_routes": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "prefer_static_routes", 
                    "required": "False", 
                    "description": [
                        "Prefer static routes over interface routes during virtualservice placement."
                    ]
                }, 
                "enable_vip_static_routes": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_vip_static_routes", 
                    "required": "False", 
                    "description": [
                        "Use static routes for vip side network resolution during virtualservice placement."
                    ]
                }, 
                "nsx_configuration": {
                    "doc_type": "NsxConfiguration", 
                    "py_type": "NsxConfiguration", 
                    "name": "nsx_configuration", 
                    "required": "False", 
                    "ref_type": "NsxConfiguration", 
                    "description": [
                        "Configuration parameters for nsx manager.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "proxy_configuration": {
                    "doc_type": "ProxyConfiguration", 
                    "py_type": "ProxyConfiguration", 
                    "name": "proxy_configuration", 
                    "required": "False", 
                    "ref_type": "ProxyConfiguration", 
                    "description": []
                }, 
                "docker_configuration": {
                    "doc_type": "DockerConfiguration", 
                    "py_type": "DockerConfiguration", 
                    "name": "docker_configuration", 
                    "required": "False", 
                    "ref_type": "DockerConfiguration", 
                    "description": []
                }, 
                "openstack_configuration": {
                    "doc_type": "OpenStackConfiguration", 
                    "py_type": "OpenStackConfiguration", 
                    "name": "openstack_configuration", 
                    "required": "False", 
                    "ref_type": "OpenStackConfiguration", 
                    "description": []
                }, 
                "dhcp_enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "dhcp_enabled", 
                    "required": "False", 
                    "description": [
                        "Select the ip address management scheme."
                    ]
                }, 
                "linuxserver_configuration": {
                    "doc_type": "LinuxServerConfiguration", 
                    "py_type": "LinuxServerConfiguration", 
                    "name": "linuxserver_configuration", 
                    "required": "False", 
                    "ref_type": "LinuxServerConfiguration", 
                    "description": []
                }, 
                "apic_configuration": {
                    "doc_type": "APICConfiguration", 
                    "py_type": "APICConfiguration", 
                    "name": "apic_configuration", 
                    "required": "False", 
                    "ref_type": "APICConfiguration", 
                    "description": []
                }, 
                "mesos_configuration": {
                    "doc_type": "MesosConfiguration", 
                    "py_type": "MesosConfiguration", 
                    "name": "mesos_configuration", 
                    "required": "False", 
                    "ref_type": "MesosConfiguration", 
                    "description": []
                }, 
                "oshiftk8s_configuration": {
                    "doc_type": "OShiftK8SConfiguration", 
                    "py_type": "OShiftK8SConfiguration", 
                    "name": "oshiftk8s_configuration", 
                    "required": "False", 
                    "ref_type": "OShiftK8SConfiguration", 
                    "description": []
                }, 
                "aws_configuration": {
                    "doc_type": "AwsConfiguration", 
                    "py_type": "AwsConfiguration", 
                    "name": "aws_configuration", 
                    "required": "False", 
                    "ref_type": "AwsConfiguration", 
                    "description": []
                }, 
                "mtu": {
                    "default_value": 1500, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "mtu", 
                    "required": "False", 
                    "description": [
                        "Mtu setting for the cloud."
                    ]
                }, 
                "apic_mode": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "apic_mode", 
                    "required": "False", 
                    "description": []
                }, 
                "vcenter_configuration": {
                    "doc_type": "vCenterConfiguration", 
                    "py_type": "vCenterConfiguration", 
                    "name": "vcenter_configuration", 
                    "required": "False", 
                    "ref_type": "vCenterConfiguration", 
                    "description": []
                }, 
                "cloudstack_configuration": {
                    "doc_type": "CloudStackConfiguration", 
                    "py_type": "CloudStackConfiguration", 
                    "name": "cloudstack_configuration", 
                    "required": "False", 
                    "ref_type": "CloudStackConfiguration", 
                    "description": []
                }
            }
        }, 
        "DockerRegistry": {
            "name": "DockerRegistry", 
            "properties": {
                "oshift_registry": {
                    "doc_type": "OshiftDockerRegistryMetaData", 
                    "py_type": "OshiftDockerRegistryMetaData", 
                    "name": "oshift_registry", 
                    "required": "False", 
                    "ref_type": "OshiftDockerRegistryMetaData", 
                    "description": [
                        "Openshift integrated registry config."
                    ]
                }, 
                "se_repository_push": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "se_repository_push", 
                    "required": "False", 
                    "description": [
                        "Avi controller will push serviceengine image to docker repository."
                    ]
                }, 
                "registry": {
                    "default_value": "avinetworks/se", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "registry", 
                    "required": "False", 
                    "description": [
                        "Avi serviceengine repository name.", 
                        "For private registry, it's registry port/repository, for public registry, it's registry/repository, for openshift registry, it's registry", 
                        "port/<namespace>/<repo>."
                    ]
                }, 
                "private": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "private", 
                    "required": "False", 
                    "description": [
                        "Set if docker registry is private.", 
                        "Avi controller will not attempt to push se image to the registry, unless se_repository_push is set."
                    ]
                }
            }
        }
    }, 
    "vs": {
        "SeList": {
            "name": "SeList", 
            "properties": {
                "sec_idx": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "sec_idx", 
                    "required": "False", 
                    "description": []
                }, 
                "snat_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "snat_ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "geo_download": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "geo_download", 
                    "required": "False", 
                    "description": [
                        "This flag indicates whether the geo-files have been pushed to the dns-vs's se.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "vlan_id": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vlan_id", 
                    "required": "False", 
                    "description": []
                }, 
                "scalein_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "scalein_in_progress", 
                    "required": "False", 
                    "description": []
                }, 
                "geodb_download": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "geodb_download", 
                    "required": "False", 
                    "description": [
                        "This flag indicates whether the geodb object has been pushed to the dns-vs's se.", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "vip_intf_list": {
                    "doc_type": "SeVipInterfaceList", 
                    "py_type": "list", 
                    "name": "vip_intf_list", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeVipInterfaceList", 
                    "description": []
                }, 
                "version": {
                    "default_value": "0.0.0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "version", 
                    "required": "False", 
                    "description": []
                }, 
                "memory": {
                    "default_value": 2001, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "memory", 
                    "required": "False", 
                    "description": []
                }, 
                "vnic": {
                    "doc_type": "VsSeVnic", 
                    "py_type": "list", 
                    "name": "vnic", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VsSeVnic", 
                    "description": []
                }, 
                "vip_intf_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "vip_intf_ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "download_selist_only": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "download_selist_only", 
                    "required": "False", 
                    "description": []
                }, 
                "admin_down_requested": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "admin_down_requested", 
                    "required": "False", 
                    "description": []
                }, 
                "is_standby": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_standby", 
                    "required": "False", 
                    "description": []
                }, 
                "vip_subnet_mask": {
                    "default_value": 32, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vip_subnet_mask", 
                    "required": "False", 
                    "description": []
                }, 
                "at_curr_ver": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "at_curr_ver", 
                    "required": "False", 
                    "description": []
                }, 
                "floating_intf_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "floating_intf_ip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "pending_download": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "pending_download", 
                    "required": "False", 
                    "description": []
                }, 
                "is_portchannel": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_portchannel", 
                    "required": "False", 
                    "description": []
                }, 
                "delete_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "delete_in_progress", 
                    "required": "False", 
                    "description": []
                }, 
                "is_primary": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_primary", 
                    "required": "False", 
                    "description": []
                }, 
                "vcpus": {
                    "default_value": 2, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vcpus", 
                    "required": "False", 
                    "description": []
                }, 
                "is_connected": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_connected", 
                    "required": "False", 
                    "description": []
                }, 
                "gslb_download": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "gslb_download", 
                    "required": "False", 
                    "description": [
                        "This flag indicates whether the gslb, ghm, gs objects have been pushed to the dns-vs's se.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "ServicePoolSelector": {
            "name": "ServicePoolSelector", 
            "properties": {
                "service_port": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "service_port", 
                    "required": "True", 
                    "range": "1-65535", 
                    "description": [
                        "Pool based destination port.", 
                        "Allowed values are 1-65535."
                    ]
                }
            }
        }, 
        "SeVipInterfaceList": {
            "name": "SeVipInterfaceList", 
            "properties": {
                "vip_intf_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "vip_intf_ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "is_portchannel": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_portchannel", 
                    "required": "False", 
                    "description": []
                }, 
                "vlan_id": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vlan_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VsScaleinParams": {
            "name": "VsScaleinParams", 
            "properties": {
                "admin_down": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "admin_down", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "Service": {
            "name": "Service", 
            "properties": {
                "enable_ssl": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_ssl", 
                    "required": "False", 
                    "description": [
                        "Enable ssl termination and offload for traffic from clients."
                    ]
                }, 
                "port_range_end": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "port_range_end", 
                    "required": "False", 
                    "range": "1-65535", 
                    "special_values": [
                        "'single port'"
                    ], 
                    "description": [
                        "The end of the virtual service's port number range.", 
                        "Allowed values are 1-65535.", 
                        "Special values are 0- 'single port'."
                    ]
                }, 
                "port": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "port", 
                    "required": "True", 
                    "range": "1-65535", 
                    "description": [
                        "The virtual service's port number.", 
                        "Allowed values are 1-65535."
                    ]
                }
            }
        }, 
        "VsVip": {
            "name": "VsVip", 
            "properties": {
                "east_west_placement": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "east_west_placement", 
                    "required": "False", 
                    "description": [
                        "Force placement on all service engines in the service engine group (container clouds only).", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "vip": {
                    "doc_type": "Vip", 
                    "py_type": "list", 
                    "name": "vip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Vip", 
                    "description": [
                        "List of virtual service ips and other shareable entities.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "dns_info": {
                    "doc_type": "DnsInfo", 
                    "py_type": "list", 
                    "name": "dns_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsInfo", 
                    "description": [
                        "Service discovery specific data including fully qualified domain name, type and time-to-live of the dns record.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "VsResProfile": {
            "name": "VsResProfile", 
            "properties": {
                "res": {
                    "doc_type": "VirtualServiceResource", 
                    "py_type": "VirtualServiceResource", 
                    "name": "res", 
                    "required": "True", 
                    "ref_type": "VirtualServiceResource", 
                    "description": []
                }
            }
        }, 
        "VsScaleoutParams": {
            "name": "VsScaleoutParams", 
            "properties": {
                "to_new_se": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "to_new_se", 
                    "required": "False", 
                    "description": []
                }, 
                "admin_up": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "admin_up", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SidebandProfile": {
            "name": "SidebandProfile", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "ip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address of the sideband server."
                    ]
                }, 
                "sideband_max_request_body_size": {
                    "default_value": 1024, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "sideband_max_request_body_size", 
                    "required": "False", 
                    "range": "0-16384", 
                    "description": [
                        "Maximum size of the request body that will be sent on the sideband.", 
                        "Allowed values are 0-16384."
                    ]
                }
            }
        }, 
        "Vip": {
            "name": "Vip", 
            "properties": {
                "subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Subnet providing reachability for client facing vip ip.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "discovered_networks": {
                    "doc_type": "DiscoveredNetwork", 
                    "py_type": "list", 
                    "name": "discovered_networks", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DiscoveredNetwork", 
                    "description": [
                        "Discovered networks providing reachability for client facing vip ip.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "ipam_network_subnet": {
                    "doc_type": "IPNetworkSubnet", 
                    "py_type": "IPNetworkSubnet", 
                    "name": "ipam_network_subnet", 
                    "required": "False", 
                    "ref_type": "IPNetworkSubnet", 
                    "description": [
                        "Subnet and/or network for allocating virtualservice ip by ipam provider module.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "avi_allocated_fip": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "avi_allocated_fip", 
                    "required": "False", 
                    "description": [
                        "(internal-use) fip allocated by avi in the cloud infrastructure.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "auto_allocate_ip": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "auto_allocate_ip", 
                    "required": "False", 
                    "description": [
                        "Auto-allocate vip from the provided subnet.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enabled", 
                    "required": "False", 
                    "description": [
                        "Enable or disable the vip.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "floating_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "floating_ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Floating ip to associate with this vip.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "auto_allocate_floating_ip": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "auto_allocate_floating_ip", 
                    "required": "False", 
                    "description": [
                        "Auto-allocate floating/elastic ip from the cloud infrastructure.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "avi_allocated_vip": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "avi_allocated_vip", 
                    "required": "False", 
                    "description": [
                        "(internal-use) vip allocated by avi in the cloud infrastructure.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "ip_address": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip_address", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address of the vip.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "VipDbExtension": {
            "name": "VipDbExtension", 
            "properties": {
                "se_list": {
                    "doc_type": "SeList", 
                    "py_type": "list", 
                    "name": "se_list", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeList", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "first_se_assigned_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "first_se_assigned_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "requested_resource": {
                    "doc_type": "VirtualServiceResource", 
                    "py_type": "VirtualServiceResource", 
                    "name": "requested_resource", 
                    "required": "False", 
                    "ref_type": "VirtualServiceResource", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "VirtualServiceSe": {
            "name": "VirtualServiceSe", 
            "properties": {
                "datapath_debug": {
                    "doc_type": "DebugVirtualService", 
                    "py_type": "DebugVirtualService", 
                    "name": "datapath_debug", 
                    "required": "False", 
                    "ref_type": "DebugVirtualService", 
                    "description": []
                }, 
                "uuid": {
                    "default_value": "virtualservice", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "uuid", 
                    "required": "True", 
                    "description": []
                }, 
                "tls_ticket_key": {
                    "doc_type": "TLSTicket", 
                    "py_type": "list", 
                    "name": "tls_ticket_key", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "TLSTicket", 
                    "description": []
                }, 
                "virtual_service": {
                    "doc_type": "VirtualService", 
                    "py_type": "VirtualService", 
                    "name": "virtual_service", 
                    "required": "False", 
                    "ref_type": "VirtualService", 
                    "description": []
                }, 
                "version": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "version", 
                    "required": "False", 
                    "description": [
                        "Version number of the se list update."
                    ]
                }, 
                "se_list": {
                    "doc_type": "SeList", 
                    "py_type": "list", 
                    "name": "se_list", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeList", 
                    "description": []
                }, 
                "apic_mode": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "apic_mode", 
                    "required": "False", 
                    "description": []
                }, 
                "total_vips": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "total_vips", 
                    "required": "False", 
                    "description": [
                        "Total number of vips associated with vs.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "first_se_assigned_time": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "first_se_assigned_time", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "ipam_dns_records": {
                    "doc_type": "DnsRecord", 
                    "py_type": "list", 
                    "name": "ipam_dns_records", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsRecord", 
                    "description": [
                        "List of ipam dns records applied to this virtual service.", 
                        "These are static entries and no health monitoring is performed against the ip addresses."
                    ]
                }
            }
        }, 
        "VirtualServiceLogmgrMap": {
            "name": "VirtualServiceLogmgrMap", 
            "properties": {
                "metrics_mgr_port": {
                    "default_value": "METRICS_MGR_PORT_0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "metrics_mgr_port", 
                    "required": "False", 
                    "option_values": [
                        "METRICS_MGR_PORT_0", 
                        "METRICS_MGR_PORT_1", 
                        "METRICS_MGR_PORT_2", 
                        "METRICS_MGR_PORT_3"
                    ], 
                    "description": [
                        "Enum options - METRICS_MGR_PORT_0, METRICS_MGR_PORT_1, METRICS_MGR_PORT_2, METRICS_MGR_PORT_3."
                    ]
                }, 
                "prev_metrics_mgr_port": {
                    "default_value": "METRICS_MGR_PORT_0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "prev_metrics_mgr_port", 
                    "required": "False", 
                    "option_values": [
                        "METRICS_MGR_PORT_0", 
                        "METRICS_MGR_PORT_1", 
                        "METRICS_MGR_PORT_2", 
                        "METRICS_MGR_PORT_3"
                    ], 
                    "description": [
                        "Enum options - METRICS_MGR_PORT_0, METRICS_MGR_PORT_1, METRICS_MGR_PORT_2, METRICS_MGR_PORT_3."
                    ]
                }
            }
        }, 
        "IPNetworkSubnet": {
            "name": "IPNetworkSubnet", 
            "properties": {
                "subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Subnet for virtualservice ip allocation with vantage or infoblox as the ipam provider.", 
                        "Only one of subnet or subnet_uuid configuration is allowed."
                    ]
                }
            }
        }, 
        "VsMigrateParams": {
            "name": "VsMigrateParams", 
            "properties": {
                "to_new_se": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "to_new_se", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VirtualService": {
            "name": "VirtualService", 
            "properties": {
                "client_auth": {
                    "doc_type": "HTTPClientAuthenticationParams", 
                    "py_type": "HTTPClientAuthenticationParams", 
                    "name": "client_auth", 
                    "required": "False", 
                    "ref_type": "HTTPClientAuthenticationParams", 
                    "description": [
                        "Http authentication configuration for protected resources."
                    ]
                }, 
                "discovered_networks": {
                    "doc_type": "DiscoveredNetwork", 
                    "py_type": "list", 
                    "name": "discovered_networks", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DiscoveredNetwork", 
                    "description": [
                        "(internal-use) discovered networks providing reachability for client facing virtual service ip.", 
                        "This field is used internally by avi, not editable by the user.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "weight": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "weight", 
                    "required": "False", 
                    "description": [
                        "The quality of service weight to assign to traffic transmitted from this virtual service.", 
                        "A higher weight will prioritize traffic versus other virtual services sharing the same service engines."
                    ]
                }, 
                "dns_info": {
                    "doc_type": "DnsInfo", 
                    "py_type": "list", 
                    "name": "dns_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsInfo", 
                    "description": [
                        "Service discovery specific data including fully qualified domain name, type and time-to-live of the dns record.", 
                        "Note that only one of fqdn and dns_info setting is allowed."
                    ]
                }, 
                "vs_datascripts": {
                    "doc_type": "VSDataScripts", 
                    "py_type": "list", 
                    "name": "vs_datascripts", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VSDataScripts", 
                    "description": [
                        "Datascripts applied on the data traffic of the virtual service."
                    ]
                }, 
                "ipam_network_subnet": {
                    "doc_type": "IPNetworkSubnet", 
                    "py_type": "IPNetworkSubnet", 
                    "name": "ipam_network_subnet", 
                    "required": "False", 
                    "ref_type": "IPNetworkSubnet", 
                    "description": [
                        "Subnet and/or network for allocating virtualservice ip by ipam provider module."
                    ]
                }, 
                "delay_fairness": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "delay_fairness", 
                    "required": "False", 
                    "description": [
                        "Select the algorithm for qos fairness.", 
                        "This determines how multiple virtual services sharing the same service engines will prioritize traffic over a congested network."
                    ]
                }, 
                "vip": {
                    "doc_type": "Vip", 
                    "py_type": "list", 
                    "name": "vip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Vip", 
                    "description": [
                        "List of virtual service ips.", 
                        "While creating a 'shared vs',please use vsvip_ref to point to the shared entities.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "snat_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "snat_ip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Nat'ted floating source ip address(es) for upstream connection to servers."
                    ]
                }, 
                "avi_allocated_vip": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "avi_allocated_vip", 
                    "required": "False", 
                    "description": [
                        "(internal-use) vip allocated by avi in the cloud infrastructure.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "sideband_profile": {
                    "doc_type": "SidebandProfile", 
                    "py_type": "SidebandProfile", 
                    "name": "sideband_profile", 
                    "required": "False", 
                    "ref_type": "SidebandProfile", 
                    "description": [
                        "Sideband configuration to be used for this virtualservice.it can be used for sending traffic to sideband vips for external inspection etc."
                    ]
                }, 
                "content_rewrite": {
                    "doc_type": "ContentRewriteProfile", 
                    "py_type": "ContentRewriteProfile", 
                    "name": "content_rewrite", 
                    "required": "False", 
                    "ref_type": "ContentRewriteProfile", 
                    "description": [
                        "Profile used to match and rewrite strings in request and/or response body."
                    ]
                }, 
                "requests_rate_limit": {
                    "doc_type": "RateProfile", 
                    "py_type": "RateProfile", 
                    "name": "requests_rate_limit", 
                    "required": "False", 
                    "ref_type": "RateProfile", 
                    "description": [
                        "Rate limit the incoming requests to this virtual service."
                    ]
                }, 
                "subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Subnet providing reachability for client facing virtual service ip.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "cloud_type": {
                    "default_value": "CLOUD_NONE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "cloud_type", 
                    "required": "False", 
                    "option_values": [
                        "CLOUD_NONE", 
                        "CLOUD_VCENTER", 
                        "CLOUD_OPENSTACK", 
                        "CLOUD_AWS", 
                        "CLOUD_VCA", 
                        "CLOUD_APIC", 
                        "CLOUD_MESOS", 
                        "CLOUD_LINUXSERVER", 
                        "CLOUD_DOCKER_UCP", 
                        "CLOUD_RANCHER", 
                        "CLOUD_OSHIFT_K8S"
                    ], 
                    "description": [
                        "Enum options - CLOUD_NONE, CLOUD_VCENTER, CLOUD_OPENSTACK, CLOUD_AWS, CLOUD_VCA, CLOUD_APIC, CLOUD_MESOS, CLOUD_LINUXSERVER, CLOUD_DOCKER_UCP,", 
                        "CLOUD_RANCHER, CLOUD_OSHIFT_K8S."
                    ]
                }, 
                "avi_allocated_fip": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "avi_allocated_fip", 
                    "required": "False", 
                    "description": [
                        "(internal-use) fip allocated by avi in the cloud infrastructure.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "scaleout_ecmp": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "scaleout_ecmp", 
                    "required": "False", 
                    "description": [
                        "Disable re-distribution of flows across service engines for a virtual service.", 
                        "Enable if the network itself performs flow hashing with ecmp in environments such as gcp."
                    ]
                }, 
                "max_cps_per_client": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_cps_per_client", 
                    "required": "False", 
                    "range": "10-1000", 
                    "special_values": [
                        "'unlimited'"
                    ], 
                    "description": [
                        "Maximum connections per second per client ip.", 
                        "Allowed values are 10-1000.", 
                        "Special values are 0- 'unlimited'."
                    ]
                }, 
                "type": {
                    "default_value": "VS_TYPE_NORMAL", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "type", 
                    "required": "False", 
                    "option_values": [
                        "VS_TYPE_NORMAL", 
                        "VS_TYPE_VH_PARENT", 
                        "VS_TYPE_VH_CHILD"
                    ], 
                    "description": [
                        "Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service.", 
                        "Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD."
                    ]
                }, 
                "flow_dist": {
                    "default_value": "LOAD_AWARE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "flow_dist", 
                    "required": "False", 
                    "option_values": [
                        "LOAD_AWARE", 
                        "CONSISTENT_HASH_SOURCE_IP_ADDRESS", 
                        "CONSISTENT_HASH_SOURCE_IP_ADDRESS_AND_PORT"
                    ], 
                    "description": [
                        "Criteria for flow distribution among ses.", 
                        "Enum options - LOAD_AWARE, CONSISTENT_HASH_SOURCE_IP_ADDRESS, CONSISTENT_HASH_SOURCE_IP_ADDRESS_AND_PORT."
                    ]
                }, 
                "use_bridge_ip_as_vip": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_bridge_ip_as_vip", 
                    "required": "False", 
                    "description": [
                        "Use bridge ip as vip on each host in mesos deployments."
                    ]
                }, 
                "performance_limits": {
                    "doc_type": "PerformanceLimits", 
                    "py_type": "PerformanceLimits", 
                    "name": "performance_limits", 
                    "required": "False", 
                    "ref_type": "PerformanceLimits", 
                    "description": [
                        "Optional settings that determine performance limits like max connections or bandwdith etc."
                    ]
                }, 
                "http_policies": {
                    "doc_type": "HTTPPolicies", 
                    "py_type": "list", 
                    "name": "http_policies", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HTTPPolicies", 
                    "description": [
                        "Http policies applied on the data traffic of the virtual service."
                    ]
                }, 
                "floating_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "floating_ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Floating ip to associate with this virtual service.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "auto_allocate_floating_ip": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "auto_allocate_floating_ip", 
                    "required": "False", 
                    "description": [
                        "Auto-allocate floating/elastic ip from the cloud infrastructure.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "services": {
                    "doc_type": "Service", 
                    "py_type": "list", 
                    "name": "services", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Service", 
                    "description": [
                        "List of services defined for this virtual service."
                    ]
                }, 
                "connections_rate_limit": {
                    "doc_type": "RateProfile", 
                    "py_type": "RateProfile", 
                    "name": "connections_rate_limit", 
                    "required": "False", 
                    "ref_type": "RateProfile", 
                    "description": [
                        "Rate limit the incoming connections to this virtual service."
                    ]
                }, 
                "active_standby_se_tag": {
                    "default_value": "ACTIVE_STANDBY_SE_1", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "active_standby_se_tag", 
                    "required": "False", 
                    "option_values": [
                        "ACTIVE_STANDBY_SE_1", 
                        "ACTIVE_STANDBY_SE_2"
                    ], 
                    "description": [
                        "This configuration only applies if the virtualservice is in legacy active standby ha mode and load distribution among active standby is enabled.", 
                        "This field is used to tag the virtualservice so that virtualservices with the same tag will share the same active serviceengine.", 
                        "Virtualservices with different tags will have different active serviceengines.", 
                        "If one of the serviceengine's in the serviceenginegroup fails, all virtualservices will end up using the same active serviceengine.", 
                        "Redistribution of the virtualservices can be either manual or automated when the failed serviceengine recovers.", 
                        "Redistribution is based on the auto redistribute property of the serviceenginegroup.", 
                        "Enum options - ACTIVE_STANDBY_SE_1, ACTIVE_STANDBY_SE_2."
                    ]
                }, 
                "ip_address": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip_address", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address of the virtual service.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "ign_pool_net_reach": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "ign_pool_net_reach", 
                    "required": "False", 
                    "description": [
                        "Ignore pool servers network reachability constraints for virtual service placement."
                    ]
                }, 
                "east_west_placement": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "east_west_placement", 
                    "required": "False", 
                    "description": [
                        "Force placement on all se's in service group (mesos mode only)."
                    ]
                }, 
                "limit_doser": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "limit_doser", 
                    "required": "False", 
                    "description": [
                        "Limit potential dos attackers who exceed max_cps_per_client significantly to a fraction of max_cps_per_client for a while."
                    ]
                }, 
                "service_pool_select": {
                    "doc_type": "ServicePoolSelector", 
                    "py_type": "list", 
                    "name": "service_pool_select", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServicePoolSelector", 
                    "description": [
                        "Select pool based on destination port."
                    ]
                }, 
                "ssl_sess_cache_avg_size": {
                    "default_value": 1024, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ssl_sess_cache_avg_size", 
                    "required": "False", 
                    "range": "1024-16383", 
                    "description": [
                        "Expected number of ssl session cache entries (may be exceeded).", 
                        "Allowed values are 1024-16383."
                    ]
                }, 
                "enable_autogw": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_autogw", 
                    "required": "False", 
                    "description": [
                        "Response traffic to clients will be sent back to the source mac address of the connection, rather than statically sent to a default gateway."
                    ]
                }, 
                "auto_allocate_ip": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "auto_allocate_ip", 
                    "required": "False", 
                    "description": [
                        "Auto-allocate vip from the provided subnet.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enabled", 
                    "required": "False", 
                    "description": [
                        "Enable or disable the virtual service."
                    ]
                }, 
                "remove_listening_port_on_vs_down": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "remove_listening_port_on_vs_down", 
                    "required": "False", 
                    "description": [
                        "Remove listening port if virtualservice is down."
                    ]
                }, 
                "discovered_subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "list", 
                    "name": "discovered_subnet", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "(internal-use) discovered subnets providing reachability for client facing virtual service ip.", 
                        "This field is deprecated.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "dns_policies": {
                    "doc_type": "DnsPolicies", 
                    "py_type": "list", 
                    "name": "dns_policies", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsPolicies", 
                    "description": [
                        "Dns policies applied on the dns traffic of the virtual service.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "static_dns_records": {
                    "doc_type": "DnsRecord", 
                    "py_type": "list", 
                    "name": "static_dns_records", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsRecord", 
                    "description": [
                        "List of static dns records applied to this virtual service.", 
                        "These are static entries and no health monitoring is performed against the ip addresses."
                    ]
                }, 
                "analytics_policy": {
                    "doc_type": "AnalyticsPolicy", 
                    "py_type": "AnalyticsPolicy", 
                    "name": "analytics_policy", 
                    "required": "False", 
                    "ref_type": "AnalyticsPolicy", 
                    "description": [
                        "Determines analytics settings for the application."
                    ]
                }, 
                "flow_label_type": {
                    "default_value": "NO_LABEL", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "flow_label_type", 
                    "required": "False", 
                    "option_values": [
                        "NO_LABEL", 
                        "SERVICE_LABEL"
                    ], 
                    "description": [
                        "Criteria for flow labelling.", 
                        "Enum options - NO_LABEL, SERVICE_LABEL."
                    ]
                }
            }
        }, 
        "VirtualServiceDbExtension": {
            "name": "VirtualServiceDbExtension", 
            "properties": {
                "tls_ticket_key": {
                    "doc_type": "TLSTicket", 
                    "py_type": "list", 
                    "name": "tls_ticket_key", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "TLSTicket", 
                    "description": []
                }, 
                "vip_runtime": {
                    "doc_type": "VipDbExtension", 
                    "py_type": "list", 
                    "name": "vip_runtime", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VipDbExtension", 
                    "description": []
                }, 
                "version": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "version", 
                    "required": "False", 
                    "description": [
                        "Version number of the se list update."
                    ]
                }, 
                "ipam_dns_records": {
                    "doc_type": "DnsRecord", 
                    "py_type": "list", 
                    "name": "ipam_dns_records", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsRecord", 
                    "description": []
                }, 
                "apic_extension": {
                    "doc_type": "VsApicExtension", 
                    "py_type": "VsApicExtension", 
                    "name": "apic_extension", 
                    "required": "False", 
                    "ref_type": "VsApicExtension", 
                    "description": []
                }
            }
        }, 
        "VsApicExtension": {
            "name": "VsApicExtension", 
            "properties": {
                "vnic": {
                    "doc_type": "VsSeVnic", 
                    "py_type": "list", 
                    "name": "vnic", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VsSeVnic", 
                    "description": []
                }
            }
        }
    }, 
    "connpool": {
        "ConnectionItem": {
            "name": "ConnectionItem", 
            "properties": {
                "connection": {
                    "doc_type": "ConnectionEntry", 
                    "py_type": "ConnectionEntry", 
                    "name": "connection", 
                    "required": "True", 
                    "ref_type": "ConnectionEntry", 
                    "description": []
                }
            }
        }, 
        "ConnpoolServerInternal": {
            "name": "ConnpoolServerInternal", 
            "properties": {
                "stats": {
                    "doc_type": "ConnpoolStats", 
                    "py_type": "ConnpoolStats", 
                    "name": "stats", 
                    "required": "False", 
                    "ref_type": "ConnpoolStats", 
                    "description": []
                }, 
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "ip_addr": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip_addr", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "conn_free": {
                    "doc_type": "ConnectionItem", 
                    "py_type": "list", 
                    "name": "conn_free", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ConnectionItem", 
                    "description": []
                }, 
                "conn_bind": {
                    "doc_type": "ConnectionItem", 
                    "py_type": "list", 
                    "name": "conn_bind", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ConnectionItem", 
                    "description": []
                }
            }
        }, 
        "ConnpoolInternal": {
            "name": "ConnpoolInternal", 
            "properties": {
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "config": {
                    "doc_type": "ConnpoolConfig", 
                    "py_type": "ConnpoolConfig", 
                    "name": "config", 
                    "required": "False", 
                    "ref_type": "ConnpoolConfig", 
                    "description": []
                }, 
                "servers": {
                    "doc_type": "ConnpoolServerInternal", 
                    "py_type": "list", 
                    "name": "servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ConnpoolServerInternal", 
                    "description": []
                }
            }
        }
    }, 
    "alerts": {
        "AlertSyslogConfig": {
            "name": "AlertSyslogConfig", 
            "properties": {
                "syslog_servers": {
                    "doc_type": "AlertSyslogServer", 
                    "py_type": "list", 
                    "name": "syslog_servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "AlertSyslogServer", 
                    "description": [
                        "The list of syslog servers."
                    ]
                }
            }
        }, 
        "AlertRuleMetric": {
            "name": "AlertRuleMetric", 
            "properties": {
                "metric_threshold": {
                    "doc_type": "AlertMetricThreshold", 
                    "py_type": "AlertMetricThreshold", 
                    "name": "metric_threshold", 
                    "required": "True", 
                    "ref_type": "AlertMetricThreshold", 
                    "description": []
                }
            }
        }, 
        "ActionGroupConfig": {
            "name": "ActionGroupConfig", 
            "properties": {
                "autoscale_trigger_notification": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "autoscale_trigger_notification", 
                    "required": "False", 
                    "description": [
                        "Trigger notification to autoscale manager."
                    ]
                }, 
                "external_only": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "external_only", 
                    "required": "True", 
                    "description": [
                        "Generate alert only to external destinations."
                    ]
                }, 
                "level": {
                    "default_value": "ALERT_LOW", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "level", 
                    "required": "True", 
                    "option_values": [
                        "ALERT_LOW", 
                        "ALERT_MEDIUM", 
                        "ALERT_HIGH"
                    ], 
                    "description": [
                        "When an alert is generated, mark its priority via the alert level.", 
                        "Enum options - ALERT_LOW, ALERT_MEDIUM, ALERT_HIGH."
                    ]
                }
            }
        }, 
        "AlertMgrParams": {
            "name": "AlertMgrParams", 
            "properties": {
                "rolling_window_expiry": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "rolling_window_expiry", 
                    "required": "False", 
                    "description": []
                }, 
                "metrics_round": {
                    "default_value": 300, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "metrics_round", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "MetricLog": {
            "name": "MetricLog", 
            "properties": {
                "time_series": {
                    "doc_type": "MetricsQueryResponse", 
                    "py_type": "MetricsQueryResponse", 
                    "name": "time_series", 
                    "required": "False", 
                    "ref_type": "MetricsQueryResponse", 
                    "description": []
                }
            }
        }, 
        "AlertScriptParam": {
            "name": "AlertScriptParam", 
            "properties": {
                "metric_info": {
                    "doc_type": "MetricLog", 
                    "py_type": "list", 
                    "name": "metric_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MetricLog", 
                    "description": []
                }, 
                "conn_events": {
                    "doc_type": "ConnectionLog", 
                    "py_type": "list", 
                    "name": "conn_events", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ConnectionLog", 
                    "description": []
                }, 
                "events": {
                    "doc_type": "EventLogAlertScriptParams", 
                    "py_type": "list", 
                    "name": "events", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "EventLogAlertScriptParams", 
                    "description": []
                }, 
                "throttle_count": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "throttle_count", 
                    "required": "False", 
                    "description": [
                        "Number of times it was throttled."
                    ]
                }, 
                "app_events": {
                    "doc_type": "ApplicationLog", 
                    "py_type": "list", 
                    "name": "app_events", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ApplicationLog", 
                    "description": []
                }
            }
        }, 
        "Alert": {
            "name": "Alert", 
            "properties": {
                "metric_info": {
                    "doc_type": "MetricLog", 
                    "py_type": "list", 
                    "name": "metric_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MetricLog", 
                    "description": []
                }, 
                "conn_events": {
                    "doc_type": "ConnectionLog", 
                    "py_type": "list", 
                    "name": "conn_events", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ConnectionLog", 
                    "description": []
                }, 
                "events": {
                    "doc_type": "EventLog", 
                    "py_type": "list", 
                    "name": "events", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "EventLog", 
                    "description": []
                }, 
                "throttle_count": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "throttle_count", 
                    "required": "False", 
                    "description": [
                        "Number of times it was throttled."
                    ]
                }, 
                "app_events": {
                    "doc_type": "ApplicationLog", 
                    "py_type": "list", 
                    "name": "app_events", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ApplicationLog", 
                    "description": []
                }
            }
        }, 
        "AlertRule": {
            "name": "AlertRule", 
            "properties": {
                "operator": {
                    "default_value": "OPERATOR_AND", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "operator", 
                    "required": "False", 
                    "option_values": [
                        "OPERATOR_AND", 
                        "OPERATOR_OR"
                    ], 
                    "description": [
                        "Enum options - OPERATOR_AND, OPERATOR_OR."
                    ]
                }, 
                "sys_event_rule": {
                    "doc_type": "AlertRuleEvent", 
                    "py_type": "list", 
                    "name": "sys_event_rule", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "AlertRuleEvent", 
                    "description": []
                }, 
                "metrics_rule": {
                    "doc_type": "AlertRuleMetric", 
                    "py_type": "list", 
                    "name": "metrics_rule", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "AlertRuleMetric", 
                    "description": []
                }, 
                "conn_app_log_rule": {
                    "doc_type": "AlertFilter", 
                    "py_type": "AlertFilter", 
                    "name": "conn_app_log_rule", 
                    "required": "False", 
                    "ref_type": "AlertFilter", 
                    "description": []
                }
            }
        }, 
        "AlertConfig": {
            "name": "AlertConfig", 
            "properties": {
                "category": {
                    "default_value": "REALTIME", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "category", 
                    "required": "True", 
                    "option_values": [
                        "REALTIME", 
                        "ROLLINGWINDOW", 
                        "WATERMARK"
                    ], 
                    "description": [
                        "Determines whether an alert is raised immediately when event occurs (realtime) or after specified number of events occurs within rolling time", 
                        "window.", 
                        "Enum options - REALTIME, ROLLINGWINDOW, WATERMARK."
                    ]
                }, 
                "throttle": {
                    "default_value": 600, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "throttle", 
                    "required": "False", 
                    "range": "0-31536000", 
                    "description": [
                        "Alerts are suppressed (throttled) for this duration of time since the last alert was raised for this alert config.", 
                        "Allowed values are 0-31536000."
                    ]
                }, 
                "enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enabled", 
                    "required": "False", 
                    "description": [
                        "Enable or disable this alert config from generating new alerts."
                    ]
                }, 
                "rolling_window": {
                    "default_value": 300, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "rolling_window", 
                    "required": "False", 
                    "range": "1-31536000", 
                    "description": [
                        "Only if the number of events is reached or exceeded within the time window will an alert be generated.", 
                        "Allowed values are 1-31536000."
                    ]
                }, 
                "alert_rule": {
                    "doc_type": "AlertRule", 
                    "py_type": "AlertRule", 
                    "name": "alert_rule", 
                    "required": "True", 
                    "ref_type": "AlertRule", 
                    "description": [
                        "List of filters matching on events or client logs used for triggering alerts."
                    ]
                }, 
                "threshold": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "threshold", 
                    "required": "False", 
                    "range": "1-65536", 
                    "description": [
                        "An alert is created only when the number of events meets or exceeds this number within the chosen time frame.", 
                        "Allowed values are 1-65536."
                    ]
                }, 
                "expiry_time": {
                    "default_value": 86400, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "expiry_time", 
                    "required": "False", 
                    "range": "1-31536000", 
                    "description": [
                        "An alert is expired and deleted after the expiry time has elapsed.", 
                        "The original event triggering the alert remains in the event's log.", 
                        "Allowed values are 1-31536000."
                    ]
                }
            }
        }, 
        "AlertSyslogServer": {
            "name": "AlertSyslogServer", 
            "properties": {
                "udp": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "udp", 
                    "required": "True", 
                    "description": [
                        "Network protocol to establish syslog session."
                    ]
                }, 
                "syslog_server_port": {
                    "default_value": 514, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "syslog_server_port", 
                    "required": "False", 
                    "description": [
                        "The destination syslog server's service port."
                    ]
                }
            }
        }, 
        "AlertMetricThreshold": {
            "name": "AlertMetricThreshold", 
            "properties": {
                "comparator": {
                    "default_value": "ALERT_OP_GT", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "comparator", 
                    "required": "True", 
                    "option_values": [
                        "ALERT_OP_LT", 
                        "ALERT_OP_LE", 
                        "ALERT_OP_EQ", 
                        "ALERT_OP_NE", 
                        "ALERT_OP_GE", 
                        "ALERT_OP_GT"
                    ], 
                    "description": [
                        "Enum options - ALERT_OP_LT, ALERT_OP_LE, ALERT_OP_EQ, ALERT_OP_NE, ALERT_OP_GE, ALERT_OP_GT."
                    ]
                }
            }
        }, 
        "EventDetailsFilter": {
            "name": "EventDetailsFilter", 
            "properties": {
                "comparator": {
                    "default_value": "ALERT_OP_EQ", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "comparator", 
                    "required": "True", 
                    "option_values": [
                        "ALERT_OP_LT", 
                        "ALERT_OP_LE", 
                        "ALERT_OP_EQ", 
                        "ALERT_OP_NE", 
                        "ALERT_OP_GE", 
                        "ALERT_OP_GT"
                    ], 
                    "description": [
                        "Enum options - ALERT_OP_LT, ALERT_OP_LE, ALERT_OP_EQ, ALERT_OP_NE, ALERT_OP_GE, ALERT_OP_GT."
                    ]
                }
            }
        }, 
        "AlertRuleEvent": {
            "name": "AlertRuleEvent", 
            "properties": {
                "not_cond": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "not_cond", 
                    "required": "False", 
                    "description": []
                }, 
                "event_details": {
                    "doc_type": "EventDetailsFilter", 
                    "py_type": "list", 
                    "name": "event_details", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "EventDetailsFilter", 
                    "description": []
                }
            }
        }
    }, 
    "vs_datascript": {
        "VSDataScriptSet": {
            "name": "VSDataScriptSet", 
            "properties": {
                "datascript": {
                    "doc_type": "VSDataScript", 
                    "py_type": "list", 
                    "name": "datascript", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VSDataScript", 
                    "description": [
                        "Datascripts to execute."
                    ]
                }
            }
        }
    }, 
    "health_score": {
        "DosAttackLevelData": {
            "name": "DosAttackLevelData", 
            "properties": {
                "pct_pkts_dos_attacks": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "pct_pkts_dos_attacks", 
                    "required": "False", 
                    "description": []
                }, 
                "pct_application_dos_attacks": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "pct_application_dos_attacks", 
                    "required": "False", 
                    "description": []
                }, 
                "serviceengine_dosattklevel_scores": {
                    "doc_type": "ServiceEngineDosAttackLevel", 
                    "py_type": "list", 
                    "name": "serviceengine_dosattklevel_scores", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServiceEngineDosAttackLevel", 
                    "description": []
                }, 
                "pct_connections_dos_attacks": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "pct_connections_dos_attacks", 
                    "required": "False", 
                    "description": []
                }, 
                "pct_dos_rx_bytes": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "pct_dos_rx_bytes", 
                    "required": "False", 
                    "description": []
                }, 
                "pct_policy_drops": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "pct_policy_drops", 
                    "required": "False", 
                    "description": []
                }, 
                "value": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "value", 
                    "required": "False", 
                    "description": []
                }, 
                "pct_dos_bandwidth": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "pct_dos_bandwidth", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "HealthScoreResourcesData": {
            "name": "HealthScoreResourcesData", 
            "properties": {
                "controller_resources": {
                    "doc_type": "ControllerResourcesScoreData", 
                    "py_type": "ControllerResourcesScoreData", 
                    "name": "controller_resources", 
                    "required": "False", 
                    "ref_type": "ControllerResourcesScoreData", 
                    "description": []
                }, 
                "server_resources": {
                    "doc_type": "ServerResourcesScoreData", 
                    "py_type": "ServerResourcesScoreData", 
                    "name": "server_resources", 
                    "required": "False", 
                    "ref_type": "ServerResourcesScoreData", 
                    "description": []
                }, 
                "application_resources": {
                    "doc_type": "ApplicationResourcesScoreData", 
                    "py_type": "ApplicationResourcesScoreData", 
                    "name": "application_resources", 
                    "required": "False", 
                    "ref_type": "ApplicationResourcesScoreData", 
                    "description": []
                }, 
                "serviceengine_resources": {
                    "doc_type": "ServiceEngineResourcesScoreData", 
                    "py_type": "ServiceEngineResourcesScoreData", 
                    "name": "serviceengine_resources", 
                    "required": "False", 
                    "ref_type": "ServiceEngineResourcesScoreData", 
                    "description": []
                }, 
                "pool_resources": {
                    "doc_type": "PoolResourcesScoreData", 
                    "py_type": "PoolResourcesScoreData", 
                    "name": "pool_resources", 
                    "required": "False", 
                    "ref_type": "PoolResourcesScoreData", 
                    "description": []
                }, 
                "virtualservice_resources": {
                    "doc_type": "VirtualServiceResourcesScoreData", 
                    "py_type": "VirtualServiceResourcesScoreData", 
                    "name": "virtualservice_resources", 
                    "required": "False", 
                    "ref_type": "VirtualServiceResourcesScoreData", 
                    "description": []
                }
            }
        }, 
        "ServiceEngineAnomalyScore": {
            "name": "ServiceEngineAnomalyScore", 
            "properties": {
                "hs_entity": {
                    "doc_type": "HealthScoreEntity", 
                    "py_type": "HealthScoreEntity", 
                    "name": "hs_entity", 
                    "required": "True", 
                    "ref_type": "HealthScoreEntity", 
                    "description": []
                }, 
                "score_data": {
                    "doc_type": "ServiceEngineAnomalyScoreData", 
                    "py_type": "ServiceEngineAnomalyScoreData", 
                    "name": "score_data", 
                    "required": "False", 
                    "ref_type": "ServiceEngineAnomalyScoreData", 
                    "description": []
                }
            }
        }, 
        "VirtualServiceAnomalyScore": {
            "name": "VirtualServiceAnomalyScore", 
            "properties": {
                "hs_entity": {
                    "doc_type": "HealthScoreEntity", 
                    "py_type": "HealthScoreEntity", 
                    "name": "hs_entity", 
                    "required": "True", 
                    "ref_type": "HealthScoreEntity", 
                    "description": []
                }, 
                "score_data": {
                    "doc_type": "VirtualServiceAnomalyScoreData", 
                    "py_type": "VirtualServiceAnomalyScoreData", 
                    "name": "score_data", 
                    "required": "False", 
                    "ref_type": "VirtualServiceAnomalyScoreData", 
                    "description": []
                }
            }
        }, 
        "HealthScoreQuery": {
            "name": "HealthScoreQuery", 
            "properties": {
                "patch_oper_status": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "patch_oper_status", 
                    "required": "False", 
                    "description": [
                        "Patch health score with operational data?."
                    ]
                }, 
                "dimension_aggregation": {
                    "default_value": "METRICS_DIMENSION_AGG_NONE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "dimension_aggregation", 
                    "required": "False", 
                    "option_values": [
                        "METRICS_DIMENSION_AGG_NONE", 
                        "METRICS_DIMENSION_AGG_AVG", 
                        "METRICS_DIMENSION_AGG_SUM", 
                        "METRICS_DIMENSION_AGG_MAX", 
                        "METRICS_DIMENSION_AGG_MIN", 
                        "METRICS_DIMENSION_AGG_PERCENT", 
                        "METRICS_DIMENSION_AGG_ALL"
                    ], 
                    "description": [
                        "Aggregations for dimensions.", 
                        "Eg.", 
                        "Use dimenstion_aggregation=avg for averaged metric values.", 
                        "Enum options - METRICS_DIMENSION_AGG_NONE, METRICS_DIMENSION_AGG_AVG, METRICS_DIMENSION_AGG_SUM, METRICS_DIMENSION_AGG_MAX,", 
                        "METRICS_DIMENSION_AGG_MIN, METRICS_DIMENSION_AGG_PERCENT, METRICS_DIMENSION_AGG_ALL."
                    ]
                }, 
                "include_refs": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "include_refs", 
                    "required": "False", 
                    "description": [
                        "Resolve uuid to references?."
                    ]
                }, 
                "summary": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "summary", 
                    "required": "False", 
                    "description": [
                        "Return only summary for health score."
                    ]
                }, 
                "start": {
                    "default_value": "1970-01-01T00:00:00", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "start", 
                    "required": "False", 
                    "description": [
                        "Start time for the metrics in iso 8601 format.", 
                        "Default is unix epoch."
                    ]
                }, 
                "step": {
                    "default_value": 300, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "step", 
                    "required": "False", 
                    "description": [
                        "Step interval in seconds."
                    ]
                }, 
                "limit": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "limit", 
                    "required": "False", 
                    "description": [
                        "Max number of metric samples to be returned in the response."
                    ]
                }, 
                "pad_missing_data": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "pad_missing_data", 
                    "required": "False", 
                    "description": [
                        "Pad missing health scores? that is, if data for certain intervals not present, fill up the time series with null values."
                    ]
                }, 
                "result_format": {
                    "default_value": "METRICS_FORMAT_JSON", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "result_format", 
                    "required": "False", 
                    "option_values": [
                        "METRICS_FORMAT_JSON", 
                        "METRICS_FORMAT_CSV", 
                        "METRICS_FORMAT_TXT", 
                        "METRICS_FORMAT_PROTOBUF"
                    ], 
                    "description": [
                        "Format of the data returned.", 
                        "Enum options - METRICS_FORMAT_JSON, METRICS_FORMAT_CSV, METRICS_FORMAT_TXT, METRICS_FORMAT_PROTOBUF."
                    ]
                }, 
                "include_statistics": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "include_statistics", 
                    "required": "False", 
                    "description": [
                        "Include statistics when no filters specified?."
                    ]
                }, 
                "hs_type": {
                    "default_value": "HEALTH_SCORE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "hs_type", 
                    "required": "False", 
                    "option_values": [
                        "HEALTH_SCORE", 
                        "HEALTH_PERFORMANCE_SCORE", 
                        "HEALTH_ANOMALY_SCORE", 
                        "HEALTH_RESOURCES_SCORE", 
                        "HEALTH_SECURITY_THREAT_LEVEL"
                    ], 
                    "description": [
                        "Health score type.", 
                        "Enum options - HEALTH_SCORE, HEALTH_PERFORMANCE_SCORE, HEALTH_ANOMALY_SCORE, HEALTH_RESOURCES_SCORE, HEALTH_SECURITY_THREAT_LEVEL."
                    ]
                }, 
                "detailed_header": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "detailed_header", 
                    "required": "False", 
                    "description": [
                        "Return detailed header with information like contributors etc.?."
                    ]
                }, 
                "metric_entity": {
                    "default_value": "VSERVER_METRICS_ENTITY", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "metric_entity", 
                    "required": "True", 
                    "option_values": [
                        "VSERVER_METRICS_ENTITY", 
                        "VM_METRICS_ENTITY", 
                        "SE_METRICS_ENTITY", 
                        "CONTROLLER_METRICS_ENTITY", 
                        "APPLICATION_METRICS_ENTITY", 
                        "TENANT_METRICS_ENTITY"
                    ], 
                    "description": [
                        "Metrics types supported.", 
                        "Enum options - VSERVER_METRICS_ENTITY, VM_METRICS_ENTITY, SE_METRICS_ENTITY, CONTROLLER_METRICS_ENTITY, APPLICATION_METRICS_ENTITY,", 
                        "TENANT_METRICS_ENTITY."
                    ]
                }
            }
        }, 
        "HealthScoreTypeContributorData": {
            "name": "HealthScoreTypeContributorData", 
            "properties": {
                "entities": {
                    "doc_type": "HealthScoreEntity", 
                    "py_type": "list", 
                    "name": "entities", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HealthScoreEntity", 
                    "description": []
                }
            }
        }, 
        "VirtualServicePerformanceScore": {
            "name": "VirtualServicePerformanceScore", 
            "properties": {
                "hs_entity": {
                    "doc_type": "HealthScoreEntity", 
                    "py_type": "HealthScoreEntity", 
                    "name": "hs_entity", 
                    "required": "True", 
                    "ref_type": "HealthScoreEntity", 
                    "description": []
                }, 
                "score_data": {
                    "doc_type": "VirtualServicePerformanceScoreData", 
                    "py_type": "VirtualServicePerformanceScoreData", 
                    "name": "score_data", 
                    "required": "False", 
                    "ref_type": "VirtualServicePerformanceScoreData", 
                    "description": []
                }
            }
        }, 
        "ApplicationResourcesScore": {
            "name": "ApplicationResourcesScore", 
            "properties": {
                "hs_entity": {
                    "doc_type": "HealthScoreEntity", 
                    "py_type": "HealthScoreEntity", 
                    "name": "hs_entity", 
                    "required": "True", 
                    "ref_type": "HealthScoreEntity", 
                    "description": []
                }, 
                "score_data": {
                    "doc_type": "ApplicationResourcesScoreData", 
                    "py_type": "ApplicationResourcesScoreData", 
                    "name": "score_data", 
                    "required": "False", 
                    "ref_type": "ApplicationResourcesScoreData", 
                    "description": []
                }
            }
        }, 
        "HealthScorePerformanceData": {
            "name": "HealthScorePerformanceData", 
            "properties": {
                "serviceengine_performance": {
                    "doc_type": "ServiceEnginePerformanceScoreData", 
                    "py_type": "ServiceEnginePerformanceScoreData", 
                    "name": "serviceengine_performance", 
                    "required": "False", 
                    "ref_type": "ServiceEnginePerformanceScoreData", 
                    "description": []
                }, 
                "application_performance": {
                    "doc_type": "ApplicationPerformanceScoreData", 
                    "py_type": "ApplicationPerformanceScoreData", 
                    "name": "application_performance", 
                    "required": "False", 
                    "ref_type": "ApplicationPerformanceScoreData", 
                    "description": []
                }, 
                "server_performance": {
                    "doc_type": "ServerPerformanceScoreData", 
                    "py_type": "ServerPerformanceScoreData", 
                    "name": "server_performance", 
                    "required": "False", 
                    "ref_type": "ServerPerformanceScoreData", 
                    "description": []
                }, 
                "pool_performance": {
                    "doc_type": "PoolPerformanceScoreData", 
                    "py_type": "PoolPerformanceScoreData", 
                    "name": "pool_performance", 
                    "required": "False", 
                    "ref_type": "PoolPerformanceScoreData", 
                    "description": []
                }, 
                "virtualservice_performance": {
                    "doc_type": "VirtualServicePerformanceScoreData", 
                    "py_type": "VirtualServicePerformanceScoreData", 
                    "name": "virtualservice_performance", 
                    "required": "False", 
                    "ref_type": "VirtualServicePerformanceScoreData", 
                    "description": []
                }
            }
        }, 
        "HealthScoreQueryResponse": {
            "name": "HealthScoreQueryResponse", 
            "properties": {
                "series": {
                    "doc_type": "HealthScoreDataSeries", 
                    "py_type": "list", 
                    "name": "series", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HealthScoreDataSeries", 
                    "description": []
                }
            }
        }, 
        "ServiceEngineDosAttackLevelData": {
            "name": "ServiceEngineDosAttackLevelData", 
            "properties": {
                "value": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "value", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VirtualServiceAnomalyScoreData": {
            "name": "VirtualServiceAnomalyScoreData", 
            "properties": {
                "pool_anomaly_scores": {
                    "doc_type": "PoolAnomalyScore", 
                    "py_type": "list", 
                    "name": "pool_anomaly_scores", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "PoolAnomalyScore", 
                    "description": []
                }, 
                "serviceengine_anomaly_scores": {
                    "doc_type": "ServiceEngineAnomalyScore", 
                    "py_type": "list", 
                    "name": "serviceengine_anomaly_scores", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServiceEngineAnomalyScore", 
                    "description": []
                }
            }
        }, 
        "VirtualServiceResourcesScoreData": {
            "name": "VirtualServiceResourcesScoreData", 
            "properties": {
                "serviceengine_resources_scores": {
                    "doc_type": "ServiceEngineResourcesScore", 
                    "py_type": "list", 
                    "name": "serviceengine_resources_scores", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServiceEngineResourcesScore", 
                    "description": []
                }, 
                "pool_resources_scores": {
                    "doc_type": "PoolResourcesScore", 
                    "py_type": "list", 
                    "name": "pool_resources_scores", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "PoolResourcesScore", 
                    "description": []
                }
            }
        }, 
        "HealthScoreData": {
            "name": "HealthScoreData", 
            "properties": {
                "resources_penalty": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "resources_penalty", 
                    "required": "False", 
                    "description": []
                }, 
                "ssl_score": {
                    "default_value": 5.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "ssl_score", 
                    "required": "False", 
                    "description": []
                }, 
                "resources_score": {
                    "doc_type": "HealthScoreResourcesData", 
                    "py_type": "HealthScoreResourcesData", 
                    "name": "resources_score", 
                    "required": "False", 
                    "ref_type": "HealthScoreResourcesData", 
                    "description": []
                }, 
                "dos_attack_level": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "dos_attack_level", 
                    "required": "False", 
                    "description": []
                }, 
                "security_threat_level": {
                    "doc_type": "HealthScoreSecurityData", 
                    "py_type": "HealthScoreSecurityData", 
                    "name": "security_threat_level", 
                    "required": "False", 
                    "ref_type": "HealthScoreSecurityData", 
                    "description": []
                }, 
                "performance_score": {
                    "doc_type": "HealthScorePerformanceData", 
                    "py_type": "HealthScorePerformanceData", 
                    "name": "performance_score", 
                    "required": "False", 
                    "ref_type": "HealthScorePerformanceData", 
                    "description": []
                }, 
                "anomaly_score": {
                    "doc_type": "HealthScoreAnomalyData", 
                    "py_type": "HealthScoreAnomalyData", 
                    "name": "anomaly_score", 
                    "required": "False", 
                    "ref_type": "HealthScoreAnomalyData", 
                    "description": []
                }, 
                "anomaly_penalty": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "anomaly_penalty", 
                    "required": "False", 
                    "description": []
                }, 
                "security_penalty": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "security_penalty", 
                    "required": "False", 
                    "description": []
                }, 
                "performance_value": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "performance_value", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VirtualServicePerformanceScoreData": {
            "name": "VirtualServicePerformanceScoreData", 
            "properties": {
                "pool_performance_scores": {
                    "doc_type": "PoolPerformanceScore", 
                    "py_type": "list", 
                    "name": "pool_performance_scores", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "PoolPerformanceScore", 
                    "description": []
                }, 
                "apdexr": {
                    "default_value": 100.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "apdexr", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "ControllerAnomalyScore": {
            "name": "ControllerAnomalyScore", 
            "properties": {
                "hs_entity": {
                    "doc_type": "HealthScoreEntity", 
                    "py_type": "HealthScoreEntity", 
                    "name": "hs_entity", 
                    "required": "True", 
                    "ref_type": "HealthScoreEntity", 
                    "description": []
                }, 
                "score_data": {
                    "doc_type": "ControllerAnomalyScoreData", 
                    "py_type": "ControllerAnomalyScoreData", 
                    "name": "score_data", 
                    "required": "False", 
                    "ref_type": "ControllerAnomalyScoreData", 
                    "description": []
                }
            }
        }, 
        "PoolResourcesScore": {
            "name": "PoolResourcesScore", 
            "properties": {
                "hs_entity": {
                    "doc_type": "HealthScoreEntity", 
                    "py_type": "HealthScoreEntity", 
                    "name": "hs_entity", 
                    "required": "True", 
                    "ref_type": "HealthScoreEntity", 
                    "description": []
                }, 
                "score_data": {
                    "doc_type": "PoolResourcesScoreData", 
                    "py_type": "PoolResourcesScoreData", 
                    "name": "score_data", 
                    "required": "False", 
                    "ref_type": "PoolResourcesScoreData", 
                    "description": []
                }
            }
        }, 
        "ApplicationPerformanceScore": {
            "name": "ApplicationPerformanceScore", 
            "properties": {
                "hs_entity": {
                    "doc_type": "HealthScoreEntity", 
                    "py_type": "HealthScoreEntity", 
                    "name": "hs_entity", 
                    "required": "True", 
                    "ref_type": "HealthScoreEntity", 
                    "description": []
                }, 
                "score_data": {
                    "doc_type": "ApplicationPerformanceScoreData", 
                    "py_type": "ApplicationPerformanceScoreData", 
                    "name": "score_data", 
                    "required": "False", 
                    "ref_type": "ApplicationPerformanceScoreData", 
                    "description": []
                }
            }
        }, 
        "HealthScoreDataSeries": {
            "name": "HealthScoreDataSeries", 
            "properties": {
                "header": {
                    "doc_type": "HealthScoreHeader", 
                    "py_type": "HealthScoreHeader", 
                    "name": "header", 
                    "required": "True", 
                    "ref_type": "HealthScoreHeader", 
                    "description": []
                }, 
                "data": {
                    "doc_type": "HealthScoreData", 
                    "py_type": "list", 
                    "name": "data", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HealthScoreData", 
                    "description": []
                }
            }
        }, 
        "PoolAnomalyScoreData": {
            "name": "PoolAnomalyScoreData", 
            "properties": {
                "server_anomaly_scores": {
                    "doc_type": "ServerAnomalyScore", 
                    "py_type": "list", 
                    "name": "server_anomaly_scores", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerAnomalyScore", 
                    "description": []
                }
            }
        }, 
        "ApplicationAnomalyScore": {
            "name": "ApplicationAnomalyScore", 
            "properties": {
                "hs_entity": {
                    "doc_type": "HealthScoreEntity", 
                    "py_type": "HealthScoreEntity", 
                    "name": "hs_entity", 
                    "required": "True", 
                    "ref_type": "HealthScoreEntity", 
                    "description": []
                }, 
                "score_data": {
                    "doc_type": "ApplicationAnomalyScoreData", 
                    "py_type": "ApplicationAnomalyScoreData", 
                    "name": "score_data", 
                    "required": "False", 
                    "ref_type": "ApplicationAnomalyScoreData", 
                    "description": []
                }
            }
        }, 
        "PoolPerformanceScoreData": {
            "name": "PoolPerformanceScoreData", 
            "properties": {
                "apdexr": {
                    "default_value": 100.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "apdexr", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "HealthScoreAnomalyData": {
            "name": "HealthScoreAnomalyData", 
            "properties": {
                "controller_anomaly": {
                    "doc_type": "ControllerAnomalyScoreData", 
                    "py_type": "ControllerAnomalyScoreData", 
                    "name": "controller_anomaly", 
                    "required": "False", 
                    "ref_type": "ControllerAnomalyScoreData", 
                    "description": []
                }, 
                "serviceengine_anomaly": {
                    "doc_type": "ServiceEngineAnomalyScoreData", 
                    "py_type": "ServiceEngineAnomalyScoreData", 
                    "name": "serviceengine_anomaly", 
                    "required": "False", 
                    "ref_type": "ServiceEngineAnomalyScoreData", 
                    "description": []
                }, 
                "application_anomaly": {
                    "doc_type": "ApplicationAnomalyScoreData", 
                    "py_type": "ApplicationAnomalyScoreData", 
                    "name": "application_anomaly", 
                    "required": "False", 
                    "ref_type": "ApplicationAnomalyScoreData", 
                    "description": []
                }, 
                "pool_anomaly": {
                    "doc_type": "PoolAnomalyScoreData", 
                    "py_type": "PoolAnomalyScoreData", 
                    "name": "pool_anomaly", 
                    "required": "False", 
                    "ref_type": "PoolAnomalyScoreData", 
                    "description": []
                }, 
                "server_anomaly": {
                    "doc_type": "ServerAnomalyScoreData", 
                    "py_type": "ServerAnomalyScoreData", 
                    "name": "server_anomaly", 
                    "required": "False", 
                    "ref_type": "ServerAnomalyScoreData", 
                    "description": []
                }, 
                "virtualservice_anomaly": {
                    "doc_type": "VirtualServiceAnomalyScoreData", 
                    "py_type": "VirtualServiceAnomalyScoreData", 
                    "name": "virtualservice_anomaly", 
                    "required": "False", 
                    "ref_type": "VirtualServiceAnomalyScoreData", 
                    "description": []
                }
            }
        }, 
        "SslScoreData": {
            "name": "SslScoreData", 
            "properties": {
                "disable_client_renegotiation": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disable_client_renegotiation", 
                    "required": "False", 
                    "description": [
                        "Disable client renegotiation."
                    ]
                }, 
                "ssl_enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "ssl_enabled", 
                    "required": "False", 
                    "description": [
                        "Set whether the ssl service is enabled for the vs."
                    ]
                }, 
                "disable_client_renegotiation_score": {
                    "default_value": 5.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "disable_client_renegotiation_score", 
                    "required": "False", 
                    "description": [
                        "Score  disable client renegotiation."
                    ]
                }, 
                "value": {
                    "default_value": 5.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "value", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VirtualServiceResourcesScore": {
            "name": "VirtualServiceResourcesScore", 
            "properties": {
                "hs_entity": {
                    "doc_type": "HealthScoreEntity", 
                    "py_type": "HealthScoreEntity", 
                    "name": "hs_entity", 
                    "required": "True", 
                    "ref_type": "HealthScoreEntity", 
                    "description": []
                }, 
                "score_data": {
                    "doc_type": "VirtualServiceResourcesScoreData", 
                    "py_type": "VirtualServiceResourcesScoreData", 
                    "name": "score_data", 
                    "required": "False", 
                    "ref_type": "VirtualServiceResourcesScoreData", 
                    "description": []
                }
            }
        }, 
        "PoolResourcesScoreData": {
            "name": "PoolResourcesScoreData", 
            "properties": {
                "server_resources_scores": {
                    "doc_type": "ServerResourcesScore", 
                    "py_type": "list", 
                    "name": "server_resources_scores", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerResourcesScore", 
                    "description": []
                }
            }
        }, 
        "ServerAnomalyScore": {
            "name": "ServerAnomalyScore", 
            "properties": {
                "hs_entity": {
                    "doc_type": "HealthScoreEntity", 
                    "py_type": "HealthScoreEntity", 
                    "name": "hs_entity", 
                    "required": "True", 
                    "ref_type": "HealthScoreEntity", 
                    "description": []
                }, 
                "score_data": {
                    "doc_type": "ServerAnomalyScoreData", 
                    "py_type": "ServerAnomalyScoreData", 
                    "name": "score_data", 
                    "required": "False", 
                    "ref_type": "ServerAnomalyScoreData", 
                    "description": []
                }
            }
        }, 
        "HealthScoreSecurityData": {
            "name": "HealthScoreSecurityData", 
            "properties": {
                "dos_attack_level_data": {
                    "doc_type": "DosAttackLevelData", 
                    "py_type": "DosAttackLevelData", 
                    "name": "dos_attack_level_data", 
                    "required": "False", 
                    "ref_type": "DosAttackLevelData", 
                    "description": [
                        "Threat associated with virtualservice dos infrastructure."
                    ]
                }, 
                "reason": {
                    "default_value": "No Security Penalty", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "reason", 
                    "required": "False", 
                    "description": [
                        "Reason for security threat level."
                    ]
                }, 
                "se_dos_attack_level_data": {
                    "doc_type": "ServiceEngineDosAttackLevelData", 
                    "py_type": "ServiceEngineDosAttackLevelData", 
                    "name": "se_dos_attack_level_data", 
                    "required": "False", 
                    "ref_type": "ServiceEngineDosAttackLevelData", 
                    "description": [
                        "Threat associated with serviceengine dos infrastructure."
                    ]
                }, 
                "ssl_score_data": {
                    "doc_type": "SslScoreData", 
                    "py_type": "SslScoreData", 
                    "name": "ssl_score_data", 
                    "required": "False", 
                    "ref_type": "SslScoreData", 
                    "description": [
                        "Threat associated with virtualservice ssl infrastructure."
                    ]
                }, 
                "value": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "value", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "ServerResourcesScore": {
            "name": "ServerResourcesScore", 
            "properties": {
                "hs_entity": {
                    "doc_type": "HealthScoreEntity", 
                    "py_type": "HealthScoreEntity", 
                    "name": "hs_entity", 
                    "required": "True", 
                    "ref_type": "HealthScoreEntity", 
                    "description": []
                }, 
                "score_data": {
                    "doc_type": "ServerResourcesScoreData", 
                    "py_type": "ServerResourcesScoreData", 
                    "name": "score_data", 
                    "required": "False", 
                    "ref_type": "ServerResourcesScoreData", 
                    "description": []
                }
            }
        }, 
        "ApplicationAnomalyScoreData": {
            "name": "ApplicationAnomalyScoreData", 
            "properties": {
                "virtualservice_anomaly_scores": {
                    "doc_type": "VirtualServiceAnomalyScore", 
                    "py_type": "list", 
                    "name": "virtualservice_anomaly_scores", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VirtualServiceAnomalyScore", 
                    "description": []
                }
            }
        }, 
        "ControllerResourcesScore": {
            "name": "ControllerResourcesScore", 
            "properties": {
                "hs_entity": {
                    "doc_type": "HealthScoreEntity", 
                    "py_type": "HealthScoreEntity", 
                    "name": "hs_entity", 
                    "required": "True", 
                    "ref_type": "HealthScoreEntity", 
                    "description": []
                }, 
                "score_data": {
                    "doc_type": "ControllerResourcesScoreData", 
                    "py_type": "ControllerResourcesScoreData", 
                    "name": "score_data", 
                    "required": "False", 
                    "ref_type": "ControllerResourcesScoreData", 
                    "description": []
                }
            }
        }, 
        "PoolPerformanceScore": {
            "name": "PoolPerformanceScore", 
            "properties": {
                "hs_entity": {
                    "doc_type": "HealthScoreEntity", 
                    "py_type": "HealthScoreEntity", 
                    "name": "hs_entity", 
                    "required": "True", 
                    "ref_type": "HealthScoreEntity", 
                    "description": []
                }, 
                "score_data": {
                    "doc_type": "PoolPerformanceScoreData", 
                    "py_type": "PoolPerformanceScoreData", 
                    "name": "score_data", 
                    "required": "False", 
                    "ref_type": "PoolPerformanceScoreData", 
                    "description": []
                }
            }
        }, 
        "ServiceEngineResourcesScore": {
            "name": "ServiceEngineResourcesScore", 
            "properties": {
                "hs_entity": {
                    "doc_type": "HealthScoreEntity", 
                    "py_type": "HealthScoreEntity", 
                    "name": "hs_entity", 
                    "required": "True", 
                    "ref_type": "HealthScoreEntity", 
                    "description": []
                }, 
                "score_data": {
                    "doc_type": "ServiceEngineResourcesScoreData", 
                    "py_type": "ServiceEngineResourcesScoreData", 
                    "name": "score_data", 
                    "required": "False", 
                    "ref_type": "ServiceEngineResourcesScoreData", 
                    "description": []
                }
            }
        }, 
        "ApplicationPerformanceScoreData": {
            "name": "ApplicationPerformanceScoreData", 
            "properties": {
                "virtualservice_performance_scores": {
                    "doc_type": "VirtualServicePerformanceScore", 
                    "py_type": "list", 
                    "name": "virtualservice_performance_scores", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VirtualServicePerformanceScore", 
                    "description": []
                }
            }
        }, 
        "ServiceEngineDosAttackLevel": {
            "name": "ServiceEngineDosAttackLevel", 
            "properties": {
                "hs_entity": {
                    "doc_type": "HealthScoreEntity", 
                    "py_type": "HealthScoreEntity", 
                    "name": "hs_entity", 
                    "required": "False", 
                    "ref_type": "HealthScoreEntity", 
                    "description": []
                }, 
                "value": {
                    "default_value": 0.0, 
                    "doc_type": "float", 
                    "py_type": "float", 
                    "name": "value", 
                    "required": "False", 
                    "description": []
                }, 
                "score_data": {
                    "doc_type": "ServiceEngineDosAttackLevelData", 
                    "py_type": "ServiceEngineDosAttackLevelData", 
                    "name": "score_data", 
                    "required": "False", 
                    "ref_type": "ServiceEngineDosAttackLevelData", 
                    "description": []
                }
            }
        }, 
        "PoolAnomalyScore": {
            "name": "PoolAnomalyScore", 
            "properties": {
                "hs_entity": {
                    "doc_type": "HealthScoreEntity", 
                    "py_type": "HealthScoreEntity", 
                    "name": "hs_entity", 
                    "required": "True", 
                    "ref_type": "HealthScoreEntity", 
                    "description": []
                }, 
                "score_data": {
                    "doc_type": "PoolAnomalyScoreData", 
                    "py_type": "PoolAnomalyScoreData", 
                    "name": "score_data", 
                    "required": "False", 
                    "ref_type": "PoolAnomalyScoreData", 
                    "description": []
                }
            }
        }, 
        "ApplicationResourcesScoreData": {
            "name": "ApplicationResourcesScoreData", 
            "properties": {
                "virtualservice_resources_scores": {
                    "doc_type": "VirtualServiceResourcesScore", 
                    "py_type": "list", 
                    "name": "virtualservice_resources_scores", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VirtualServiceResourcesScore", 
                    "description": []
                }
            }
        }, 
        "HealthScoreHeader": {
            "name": "HealthScoreHeader", 
            "properties": {
                "statistics": {
                    "doc_type": "MetricStatistics", 
                    "py_type": "MetricStatistics", 
                    "name": "statistics", 
                    "required": "False", 
                    "ref_type": "MetricStatistics", 
                    "description": []
                }, 
                "metrics_min_scale": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "metrics_min_scale", 
                    "required": "False", 
                    "description": []
                }, 
                "name": {
                    "default_value": "health_score", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "name", 
                    "required": "False", 
                    "description": [
                        "Health score metric name."
                    ]
                }, 
                "contributors": {
                    "doc_type": "HealthScoreTypeContributorData", 
                    "py_type": "list", 
                    "name": "contributors", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HealthScoreTypeContributorData", 
                    "description": []
                }, 
                "security_penalty_statistics": {
                    "doc_type": "MetricStatistics", 
                    "py_type": "MetricStatistics", 
                    "name": "security_penalty_statistics", 
                    "required": "False", 
                    "ref_type": "MetricStatistics", 
                    "description": []
                }, 
                "anomaly_penalty_statistics": {
                    "doc_type": "MetricStatistics", 
                    "py_type": "MetricStatistics", 
                    "name": "anomaly_penalty_statistics", 
                    "required": "False", 
                    "ref_type": "MetricStatistics", 
                    "description": []
                }, 
                "performance_score_statistics": {
                    "doc_type": "MetricStatistics", 
                    "py_type": "MetricStatistics", 
                    "name": "performance_score_statistics", 
                    "required": "False", 
                    "ref_type": "MetricStatistics", 
                    "description": []
                }, 
                "resources_penalty_statistics": {
                    "doc_type": "MetricStatistics", 
                    "py_type": "MetricStatistics", 
                    "name": "resources_penalty_statistics", 
                    "required": "False", 
                    "ref_type": "MetricStatistics", 
                    "description": []
                }, 
                "missing_intervals": {
                    "doc_type": "MetricsMissingDataInterval", 
                    "py_type": "list", 
                    "name": "missing_intervals", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MetricsMissingDataInterval", 
                    "description": [
                        "Missing data intervals.", 
                        "Data in these intervals are not used for stats calculation."
                    ]
                }, 
                "units": {
                    "default_value": "METRIC_COUNT", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "units", 
                    "required": "False", 
                    "option_values": [
                        "METRIC_COUNT", 
                        "BITS_PER_SECOND", 
                        "MILLISECONDS", 
                        "SECONDS", 
                        "PER_SECOND", 
                        "BYTES", 
                        "PERCENT", 
                        "KILO_BYTES", 
                        "KILO_BYTES_PER_SECOND", 
                        "BYTES_PER_SECOND", 
                        "KILO_BITS_PER_SECOND", 
                        "GIGA_BYTES", 
                        "MEGA_BYTES", 
                        "NORMALIZED", 
                        "SEC", 
                        "MIN", 
                        "DAYS", 
                        "KB", 
                        "MB", 
                        "GB", 
                        "MBPS", 
                        "GHZ", 
                        "RATIO", 
                        "WORD"
                    ], 
                    "description": [
                        "Units of the column data.", 
                        "Enum options - METRIC_COUNT, BITS_PER_SECOND, MILLISECONDS, SECONDS, PER_SECOND, BYTES, PERCENT, KILO_BYTES, KILO_BYTES_PER_SECOND,", 
                        "BYTES_PER_SECOND, KILO_BITS_PER_SECOND, GIGA_BYTES, MEGA_BYTES, NORMALIZED, SEC, MIN, DAYS, KB, MB, GB, MBPS, GHZ, RATIO, WORD."
                    ]
                }
            }
        }, 
        "ServerPerformanceScore": {
            "name": "ServerPerformanceScore", 
            "properties": {
                "hs_entity": {
                    "doc_type": "HealthScoreEntity", 
                    "py_type": "HealthScoreEntity", 
                    "name": "hs_entity", 
                    "required": "True", 
                    "ref_type": "HealthScoreEntity", 
                    "description": []
                }, 
                "score_data": {
                    "doc_type": "ServerPerformanceScoreData", 
                    "py_type": "ServerPerformanceScoreData", 
                    "name": "score_data", 
                    "required": "False", 
                    "ref_type": "ServerPerformanceScoreData", 
                    "description": []
                }
            }
        }
    }, 
    "ipam_profile": {
        "CustomIpamDnsProfile": {
            "name": "CustomIpamDnsProfile", 
            "properties": {
                "script_params": {
                    "doc_type": "CustomParams", 
                    "py_type": "list", 
                    "name": "script_params", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CustomParams", 
                    "description": [
                        "Parameters that are always passed to the ipam or dns script.", 
                        "These specifically do not include credentials and or api version.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "IpamDnsInfobloxProfile": {
            "name": "IpamDnsInfobloxProfile", 
            "properties": {
                "wapi_version": {
                    "default_value": "2.0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "wapi_version", 
                    "required": "False", 
                    "description": [
                        "Wapi version."
                    ]
                }, 
                "usable_subnets": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "list", 
                    "name": "usable_subnets", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Usable subnets to pick from infoblox."
                    ]
                }, 
                "dns_view": {
                    "default_value": "default", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "dns_view", 
                    "required": "False", 
                    "description": [
                        "Dns view."
                    ]
                }, 
                "ip_address": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip_address", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Address of infoblox appliance."
                    ]
                }, 
                "network_view": {
                    "default_value": "default", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "network_view", 
                    "required": "False", 
                    "description": [
                        "Network view."
                    ]
                }
            }
        }, 
        "IpamDnsInternalProfile": {
            "name": "IpamDnsInternalProfile", 
            "properties": {
                "dns_service_domain": {
                    "doc_type": "DnsServiceDomain", 
                    "py_type": "list", 
                    "name": "dns_service_domain", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsServiceDomain", 
                    "description": [
                        "List of service domains."
                    ]
                }, 
                "ttl": {
                    "default_value": 30, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ttl", 
                    "required": "False", 
                    "range": "1-604800", 
                    "description": [
                        "Default ttl for all records, overridden by ttl value for each service domain configured in dnsservicedomain.", 
                        "Allowed values are 1-604800."
                    ]
                }
            }
        }, 
        "IpamDnsGCPProfile": {
            "name": "IpamDnsGCPProfile", 
            "properties": {
                "match_se_group_subnet": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "match_se_group_subnet", 
                    "required": "False", 
                    "description": [
                        "Match se group subnets for vip placement.", 
                        "Default is to not match se group subnets.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "DnsDomain": {
            "name": "DnsDomain", 
            "properties": {
                "domain_type": {
                    "default_value": "DOMAIN_DEFAULT", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "domain_type", 
                    "required": "False", 
                    "option_values": [
                        "DOMAIN_DEFAULT", 
                        "DOMAIN_PRIVATE", 
                        "DOMAIN_PUBLIC", 
                        "DOMAIN_PRIVATE_PUBLIC"
                    ], 
                    "description": [
                        "Domain name is available in private zone and/or public zone.", 
                        "Enum options - DOMAIN_DEFAULT, DOMAIN_PRIVATE, DOMAIN_PUBLIC, DOMAIN_PRIVATE_PUBLIC."
                    ]
                }
            }
        }, 
        "IpamDnsSubnetDomainList": {
            "name": "IpamDnsSubnetDomainList", 
            "properties": {
                "subnets": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "list", 
                    "name": "subnets", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Subnet list."
                    ]
                }, 
                "dns_records": {
                    "doc_type": "IpamDnsRecordInfo", 
                    "py_type": "IpamDnsRecordInfo", 
                    "name": "dns_records", 
                    "required": "False", 
                    "ref_type": "IpamDnsRecordInfo", 
                    "description": [
                        "List of dns records."
                    ]
                }, 
                "zdomains": {
                    "doc_type": "DnsDomain", 
                    "py_type": "list", 
                    "name": "zdomains", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsDomain", 
                    "description": [
                        "Domains list with visibility."
                    ]
                }
            }
        }, 
        "IpamDnsAwsProfile": {
            "name": "IpamDnsAwsProfile", 
            "properties": {
                "use_iam_roles": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_iam_roles", 
                    "required": "False", 
                    "description": [
                        "Use iam roles instead of access and secret key."
                    ]
                }, 
                "zones": {
                    "doc_type": "AwsZoneNetwork", 
                    "py_type": "list", 
                    "name": "zones", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "AwsZoneNetwork", 
                    "description": [
                        "Network configuration for virtual ip per az.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "ttl": {
                    "default_value": 60, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ttl", 
                    "required": "False", 
                    "range": "1-172800", 
                    "description": [
                        "Default ttl for all records.", 
                        "Allowed values are 1-172800.", 
                        "Field introduced in 17.1.3."
                    ]
                }
            }
        }, 
        "IpamDnsRecordInfo": {
            "name": "IpamDnsRecordInfo", 
            "properties": {
                "records": {
                    "doc_type": "DnsRecord", 
                    "py_type": "list", 
                    "name": "records", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsRecord", 
                    "description": [
                        "List of dns records."
                    ]
                }
            }
        }, 
        "DnsServiceDomain": {
            "name": "DnsServiceDomain", 
            "properties": {
                "record_ttl": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "record_ttl", 
                    "required": "False", 
                    "range": "1-604800", 
                    "description": [
                        "Ttl value for dns records.", 
                        "Allowed values are 1-604800."
                    ]
                }, 
                "num_dns_ip": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_dns_ip", 
                    "required": "False", 
                    "range": "0-20", 
                    "special_values": [
                        "'Return all IP addresses'"
                    ], 
                    "description": [
                        "Specifies the number of a records returned by avi dns service.", 
                        "Allowed values are 0-20.", 
                        "Special values are 0- 'return all ip addresses'."
                    ]
                }, 
                "pass_through": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "pass_through", 
                    "required": "False", 
                    "description": [
                        "Third-party authoritative domain requests are delegated todns virtualservice's pool of nameservers."
                    ]
                }
            }
        }, 
        "IpamDnsProviderProfile": {
            "name": "IpamDnsProviderProfile", 
            "properties": {
                "openstack_profile": {
                    "doc_type": "IpamDnsOpenstackProfile", 
                    "py_type": "IpamDnsOpenstackProfile", 
                    "name": "openstack_profile", 
                    "required": "False", 
                    "ref_type": "IpamDnsOpenstackProfile", 
                    "description": [
                        "Provider details if type is openstack."
                    ]
                }, 
                "gcp_profile": {
                    "doc_type": "IpamDnsGCPProfile", 
                    "py_type": "IpamDnsGCPProfile", 
                    "name": "gcp_profile", 
                    "required": "False", 
                    "ref_type": "IpamDnsGCPProfile", 
                    "description": [
                        "Provider details if type is google cloud."
                    ]
                }, 
                "proxy_configuration": {
                    "doc_type": "ProxyConfiguration", 
                    "py_type": "ProxyConfiguration", 
                    "name": "proxy_configuration", 
                    "required": "False", 
                    "ref_type": "ProxyConfiguration", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "infoblox_profile": {
                    "doc_type": "IpamDnsInfobloxProfile", 
                    "py_type": "IpamDnsInfobloxProfile", 
                    "name": "infoblox_profile", 
                    "required": "False", 
                    "ref_type": "IpamDnsInfobloxProfile", 
                    "description": [
                        "Provider details if type is infoblox."
                    ]
                }, 
                "custom_profile": {
                    "doc_type": "IpamDnsCustomProfile", 
                    "py_type": "IpamDnsCustomProfile", 
                    "name": "custom_profile", 
                    "required": "False", 
                    "ref_type": "IpamDnsCustomProfile", 
                    "description": [
                        "Provider details if type is custom.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "internal_profile": {
                    "doc_type": "IpamDnsInternalProfile", 
                    "py_type": "IpamDnsInternalProfile", 
                    "name": "internal_profile", 
                    "required": "False", 
                    "ref_type": "IpamDnsInternalProfile", 
                    "description": [
                        "Provider details if type is avi."
                    ]
                }, 
                "aws_profile": {
                    "doc_type": "IpamDnsAwsProfile", 
                    "py_type": "IpamDnsAwsProfile", 
                    "name": "aws_profile", 
                    "required": "False", 
                    "ref_type": "IpamDnsAwsProfile", 
                    "description": [
                        "Provider details if type is aws."
                    ]
                }
            }
        }, 
        "IpamDnsCustomProfile": {
            "name": "IpamDnsCustomProfile", 
            "properties": {
                "custom_ipam_dns_params": {
                    "doc_type": "CustomParams", 
                    "py_type": "list", 
                    "name": "custom_ipam_dns_params", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CustomParams", 
                    "description": [
                        "Custom parameters that will passed for the ipam/dns provider including but not limited to provider credentials and api version.", 
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }
    }, 
    "health_monitor_runtime": {
        "HealthMonitorRuntime": {
            "name": "HealthMonitorRuntime", 
            "properties": {
                "health_monitor": {
                    "doc_type": "HealthMonitor", 
                    "py_type": "list", 
                    "name": "health_monitor", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HealthMonitor", 
                    "description": []
                }
            }
        }, 
        "LeastConnectionStat": {
            "name": "LeastConnectionStat", 
            "properties": {
                "entry": {
                    "doc_type": "LcEntry", 
                    "py_type": "list", 
                    "name": "entry", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "LcEntry", 
                    "description": []
                }
            }
        }, 
        "CoreAffinityStat": {
            "name": "CoreAffinityStat", 
            "properties": {
                "core_s_indices": {
                    "doc_type": "RepeatedUints", 
                    "py_type": "list", 
                    "name": "core_s_indices", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "RepeatedUints", 
                    "description": [
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "servers": {
                    "doc_type": "LbServer", 
                    "py_type": "list", 
                    "name": "servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "LbServer", 
                    "description": [
                        "Field introduced in 17.1.3."
                    ]
                }
            }
        }, 
        "ServerHealthMonitorRuntime": {
            "name": "ServerHealthMonitorRuntime", 
            "properties": {
                "total_count": {
                    "doc_type": "ServerHealthMonitorCounter", 
                    "py_type": "list", 
                    "name": "total_count", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerHealthMonitorCounter", 
                    "description": []
                }, 
                "curr_count": {
                    "doc_type": "ServerHealthMonitorCounter", 
                    "py_type": "list", 
                    "name": "curr_count", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerHealthMonitorCounter", 
                    "description": []
                }, 
                "snat_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "snat_ip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Snat ip.", 
                        "Field introduced in 17.1.2."
                    ]
                }, 
                "bad_response_timestamp": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "bad_response_timestamp", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "last_transition_timestamp_1": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_transition_timestamp_1", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "last_transition_timestamp_3": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_transition_timestamp_3", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "last_transition_timestamp_2": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_transition_timestamp_2", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }
            }
        }, 
        "LbServer": {
            "name": "LbServer", 
            "properties": {
                "ip_addr": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip_addr", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Field introduced in 17.1.3."
                    ]
                }
            }
        }, 
        "ServerHMStatRuntime": {
            "name": "ServerHMStatRuntime", 
            "properties": {
                "ip_addr": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip_addr", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "shm_runtime": {
                    "doc_type": "ServerHealthMonitorRuntime", 
                    "py_type": "list", 
                    "name": "shm_runtime", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerHealthMonitorRuntime", 
                    "description": []
                }, 
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "last_transition_timestamp_1": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_transition_timestamp_1", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "last_transition_timestamp_3": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_transition_timestamp_3", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "last_transition_timestamp_2": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_transition_timestamp_2", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }
            }
        }, 
        "WrrStat": {
            "name": "WrrStat", 
            "properties": {
                "entry": {
                    "doc_type": "WrrEntry", 
                    "py_type": "list", 
                    "name": "entry", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "WrrEntry", 
                    "description": []
                }
            }
        }, 
        "AlgoStatRuntime": {
            "name": "AlgoStatRuntime", 
            "properties": {
                "ca_stats": {
                    "doc_type": "CoreAffinityStat", 
                    "py_type": "CoreAffinityStat", 
                    "name": "ca_stats", 
                    "required": "False", 
                    "ref_type": "CoreAffinityStat", 
                    "description": [
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "wrr_stats": {
                    "doc_type": "WrrStat", 
                    "py_type": "WrrStat", 
                    "name": "wrr_stats", 
                    "required": "False", 
                    "ref_type": "WrrStat", 
                    "description": []
                }, 
                "lc_stats": {
                    "doc_type": "LeastConnectionStat", 
                    "py_type": "LeastConnectionStat", 
                    "name": "lc_stats", 
                    "required": "False", 
                    "ref_type": "LeastConnectionStat", 
                    "description": []
                }
            }
        }, 
        "HealthMonitorStatRuntime": {
            "name": "HealthMonitorStatRuntime", 
            "properties": {
                "server_hm_stat": {
                    "doc_type": "ServerHMStatRuntime", 
                    "py_type": "list", 
                    "name": "server_hm_stat", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerHMStatRuntime", 
                    "description": []
                }, 
                "last_transition_timestamp_1": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_transition_timestamp_1", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "last_transition_timestamp_3": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_transition_timestamp_3", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "last_transition_timestamp_2": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "last_transition_timestamp_2", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }
            }
        }
    }, 
    "events": {
        "EventLogAlertScriptParams": {
            "name": "EventLogAlertScriptParams", 
            "properties": {
                "event_details": {
                    "doc_type": "EventDetails", 
                    "py_type": "EventDetails", 
                    "name": "event_details", 
                    "required": "False", 
                    "ref_type": "EventDetails", 
                    "description": []
                }
            }
        }, 
        "EventDetails": {
            "name": "EventDetails", 
            "properties": {
                "vcenter_details": {
                    "doc_type": "VinfraVcenterBadCredentials", 
                    "py_type": "VinfraVcenterBadCredentials", 
                    "name": "vcenter_details", 
                    "required": "False", 
                    "ref_type": "VinfraVcenterBadCredentials", 
                    "description": []
                }, 
                "cs_infra_details": {
                    "doc_type": "CloudStackSetup", 
                    "py_type": "CloudStackSetup", 
                    "name": "cs_infra_details", 
                    "required": "False", 
                    "ref_type": "CloudStackSetup", 
                    "description": []
                }, 
                "cluster_service_restored_details": {
                    "doc_type": "ClusterServiceRestoredEvent", 
                    "py_type": "ClusterServiceRestoredEvent", 
                    "name": "cluster_service_restored_details", 
                    "required": "False", 
                    "ref_type": "ClusterServiceRestoredEvent", 
                    "description": []
                }, 
                "seupgrade_disrupted_details": {
                    "doc_type": "SeUpgradeVsDisruptedEventDetails", 
                    "py_type": "SeUpgradeVsDisruptedEventDetails", 
                    "name": "seupgrade_disrupted_details", 
                    "required": "False", 
                    "ref_type": "SeUpgradeVsDisruptedEventDetails", 
                    "description": []
                }, 
                "config_user_logout_details": {
                    "doc_type": "ConfigUserLogout", 
                    "py_type": "ConfigUserLogout", 
                    "name": "config_user_logout_details", 
                    "required": "False", 
                    "ref_type": "ConfigUserLogout", 
                    "description": []
                }, 
                "vs_initialplacement_details": {
                    "doc_type": "VsInitialPlacementEventDetails", 
                    "py_type": "VsInitialPlacementEventDetails", 
                    "name": "vs_initialplacement_details", 
                    "required": "False", 
                    "ref_type": "VsInitialPlacementEventDetails", 
                    "description": []
                }, 
                "ssl_renew_details": {
                    "doc_type": "SSLRenewDetails", 
                    "py_type": "SSLRenewDetails", 
                    "name": "ssl_renew_details", 
                    "required": "False", 
                    "ref_type": "SSLRenewDetails", 
                    "description": []
                }, 
                "vca_infra_details": {
                    "doc_type": "VCASetup", 
                    "py_type": "VCASetup", 
                    "name": "vca_infra_details", 
                    "required": "False", 
                    "ref_type": "VCASetup", 
                    "description": []
                }, 
                "se_hm_gs_details": {
                    "doc_type": "SeHmEventGSDetails", 
                    "py_type": "SeHmEventGSDetails", 
                    "name": "se_hm_gs_details", 
                    "required": "False", 
                    "ref_type": "SeHmEventGSDetails", 
                    "description": []
                }, 
                "server_autoscaleout_info": {
                    "doc_type": "ServerAutoScaleOutInfo", 
                    "py_type": "ServerAutoScaleOutInfo", 
                    "name": "server_autoscaleout_info", 
                    "required": "False", 
                    "ref_type": "ServerAutoScaleOutInfo", 
                    "description": []
                }, 
                "vs_scaleout_details": {
                    "doc_type": "VsScaleOutEventDetails", 
                    "py_type": "VsScaleOutEventDetails", 
                    "name": "vs_scaleout_details", 
                    "required": "False", 
                    "ref_type": "VsScaleOutEventDetails", 
                    "description": []
                }, 
                "seupgrade_migrate_details": {
                    "doc_type": "SeUpgradeMigrateEventDetails", 
                    "py_type": "SeUpgradeMigrateEventDetails", 
                    "name": "seupgrade_migrate_details", 
                    "required": "False", 
                    "ref_type": "SeUpgradeMigrateEventDetails", 
                    "description": []
                }, 
                "vm_details": {
                    "doc_type": "VinfraVmDetails", 
                    "py_type": "VinfraVmDetails", 
                    "name": "vm_details", 
                    "required": "False", 
                    "ref_type": "VinfraVmDetails", 
                    "description": []
                }, 
                "vcenter_disc_failure": {
                    "doc_type": "VinfraVcenterDiscoveryFailure", 
                    "py_type": "VinfraVcenterDiscoveryFailure", 
                    "name": "vcenter_disc_failure", 
                    "required": "False", 
                    "ref_type": "VinfraVcenterDiscoveryFailure", 
                    "description": []
                }, 
                "gs_info": {
                    "doc_type": "GslbServiceStatus", 
                    "py_type": "GslbServiceStatus", 
                    "name": "gs_info", 
                    "required": "False", 
                    "ref_type": "GslbServiceStatus", 
                    "description": []
                }, 
                "nw_subnet_clash_details": {
                    "doc_type": "NetworkSubnetClash", 
                    "py_type": "NetworkSubnetClash", 
                    "name": "nw_subnet_clash_details", 
                    "required": "False", 
                    "ref_type": "NetworkSubnetClash", 
                    "description": []
                }, 
                "se_hm_vs_details": {
                    "doc_type": "SeHmEventVsDetails", 
                    "py_type": "SeHmEventVsDetails", 
                    "name": "se_hm_vs_details", 
                    "required": "False", 
                    "ref_type": "SeHmEventVsDetails", 
                    "description": []
                }, 
                "config_user_not_authrz_rule_details": {
                    "doc_type": "ConfigUserNotAuthrzByRule", 
                    "py_type": "ConfigUserNotAuthrzByRule", 
                    "name": "config_user_not_authrz_rule_details", 
                    "required": "False", 
                    "ref_type": "ConfigUserNotAuthrzByRule", 
                    "description": []
                }, 
                "disc_summary": {
                    "doc_type": "VinfraDiscSummaryDetails", 
                    "py_type": "VinfraDiscSummaryDetails", 
                    "name": "disc_summary", 
                    "required": "False", 
                    "ref_type": "VinfraDiscSummaryDetails", 
                    "description": []
                }, 
                "config_user_login_details": {
                    "doc_type": "ConfigUserLogin", 
                    "py_type": "ConfigUserLogin", 
                    "name": "config_user_login_details", 
                    "required": "False", 
                    "ref_type": "ConfigUserLogin", 
                    "description": []
                }, 
                "seupgrade_event_details": {
                    "doc_type": "SeUpgradeEventDetails", 
                    "py_type": "SeUpgradeEventDetails", 
                    "name": "seupgrade_event_details", 
                    "required": "False", 
                    "ref_type": "SeUpgradeEventDetails", 
                    "description": []
                }, 
                "cc_vip_update_details": {
                    "doc_type": "CloudVipUpdate", 
                    "py_type": "CloudVipUpdate", 
                    "name": "cc_vip_update_details", 
                    "required": "False", 
                    "ref_type": "CloudVipUpdate", 
                    "description": []
                }, 
                "se_details": {
                    "doc_type": "SeMgrEventDetails", 
                    "py_type": "SeMgrEventDetails", 
                    "name": "se_details", 
                    "required": "False", 
                    "ref_type": "SeMgrEventDetails", 
                    "description": []
                }, 
                "reboot_se_details": {
                    "doc_type": "RmRebootSeEventDetails", 
                    "py_type": "RmRebootSeEventDetails", 
                    "name": "reboot_se_details", 
                    "required": "False", 
                    "ref_type": "RmRebootSeEventDetails", 
                    "description": []
                }, 
                "glb_info": {
                    "doc_type": "GslbStatus", 
                    "py_type": "GslbStatus", 
                    "name": "glb_info", 
                    "required": "False", 
                    "ref_type": "GslbStatus", 
                    "description": []
                }, 
                "se_ip_added_event_details": {
                    "doc_type": "SeIpAddedEventDetails", 
                    "py_type": "SeIpAddedEventDetails", 
                    "name": "se_ip_added_event_details", 
                    "required": "False", 
                    "ref_type": "SeIpAddedEventDetails", 
                    "description": []
                }, 
                "se_ip_removed_event_details": {
                    "doc_type": "SeIpRemovedEventDetails", 
                    "py_type": "SeIpRemovedEventDetails", 
                    "name": "se_ip_removed_event_details", 
                    "required": "False", 
                    "ref_type": "SeIpRemovedEventDetails", 
                    "description": []
                }, 
                "license_details": {
                    "doc_type": "LicenseDetails", 
                    "py_type": "LicenseDetails", 
                    "name": "license_details", 
                    "required": "False", 
                    "ref_type": "LicenseDetails", 
                    "description": []
                }, 
                "dos_attack_event_details": {
                    "doc_type": "DosAttackEventDetails", 
                    "py_type": "DosAttackEventDetails", 
                    "name": "dos_attack_event_details", 
                    "required": "False", 
                    "ref_type": "DosAttackEventDetails", 
                    "description": []
                }, 
                "container_cloud_setup": {
                    "doc_type": "ContainerCloudSetup", 
                    "py_type": "ContainerCloudSetup", 
                    "name": "container_cloud_setup", 
                    "required": "False", 
                    "ref_type": "ContainerCloudSetup", 
                    "description": []
                }, 
                "ip_fail_details": {
                    "doc_type": "RmSeIpFailEventDetails", 
                    "py_type": "RmSeIpFailEventDetails", 
                    "name": "ip_fail_details", 
                    "required": "False", 
                    "ref_type": "RmSeIpFailEventDetails", 
                    "description": []
                }, 
                "config_create_details": {
                    "doc_type": "ConfigCreateDetails", 
                    "py_type": "ConfigCreateDetails", 
                    "name": "config_create_details", 
                    "required": "False", 
                    "ref_type": "ConfigCreateDetails", 
                    "description": []
                }, 
                "cc_cluster_vip_details": {
                    "doc_type": "CloudClusterVip", 
                    "py_type": "CloudClusterVip", 
                    "name": "cc_cluster_vip_details", 
                    "required": "False", 
                    "ref_type": "CloudClusterVip", 
                    "description": []
                }, 
                "vcenter_obj_delete_details": {
                    "doc_type": "VinfraVcenterObjDeleteDetails", 
                    "py_type": "VinfraVcenterObjDeleteDetails", 
                    "name": "vcenter_obj_delete_details", 
                    "required": "False", 
                    "ref_type": "VinfraVcenterObjDeleteDetails", 
                    "description": []
                }, 
                "cluster_node_shutdown_details": {
                    "doc_type": "ClusterNodeShutdownEvent", 
                    "py_type": "ClusterNodeShutdownEvent", 
                    "name": "cluster_node_shutdown_details", 
                    "required": "False", 
                    "ref_type": "ClusterNodeShutdownEvent", 
                    "description": []
                }, 
                "se_persistence_details": {
                    "doc_type": "SePersistenceEventDetails", 
                    "py_type": "SePersistenceEventDetails", 
                    "name": "se_persistence_details", 
                    "required": "False", 
                    "ref_type": "SePersistenceEventDetails", 
                    "description": []
                }, 
                "config_update_details": {
                    "doc_type": "ConfigUpdateDetails", 
                    "py_type": "ConfigUpdateDetails", 
                    "name": "config_update_details", 
                    "required": "False", 
                    "ref_type": "ConfigUpdateDetails", 
                    "description": []
                }, 
                "container_cloud_sevice": {
                    "doc_type": "ContainerCloudService", 
                    "py_type": "ContainerCloudService", 
                    "name": "container_cloud_sevice", 
                    "required": "False", 
                    "ref_type": "ContainerCloudService", 
                    "description": []
                }, 
                "aws_infra_details": {
                    "doc_type": "AWSSetup", 
                    "py_type": "AWSSetup", 
                    "name": "aws_infra_details", 
                    "required": "False", 
                    "ref_type": "AWSSetup", 
                    "description": []
                }, 
                "ssl_export_details": {
                    "doc_type": "SSLExportDetails", 
                    "py_type": "SSLExportDetails", 
                    "name": "ssl_export_details", 
                    "required": "False", 
                    "ref_type": "SSLExportDetails", 
                    "description": []
                }, 
                "se_geo_db_details": {
                    "doc_type": "SeGeoDbDetails", 
                    "py_type": "SeGeoDbDetails", 
                    "name": "se_geo_db_details", 
                    "required": "False", 
                    "ref_type": "SeGeoDbDetails", 
                    "description": []
                }, 
                "unbind_vs_se_details": {
                    "doc_type": "RmUnbindVsSeEventDetails", 
                    "py_type": "RmUnbindVsSeEventDetails", 
                    "name": "unbind_vs_se_details", 
                    "required": "False", 
                    "ref_type": "RmUnbindVsSeEventDetails", 
                    "description": []
                }, 
                "cc_vnic_details": {
                    "doc_type": "CloudVnicChange", 
                    "py_type": "CloudVnicChange", 
                    "name": "cc_vnic_details", 
                    "required": "False", 
                    "ref_type": "CloudVnicChange", 
                    "description": []
                }, 
                "cc_infra_details": {
                    "doc_type": "CloudGeneric", 
                    "py_type": "CloudGeneric", 
                    "name": "cc_infra_details", 
                    "required": "False", 
                    "ref_type": "CloudGeneric", 
                    "description": []
                }, 
                "se_hm_gsgroup_details": {
                    "doc_type": "SeHmEventGslbPoolDetails", 
                    "py_type": "SeHmEventGslbPoolDetails", 
                    "name": "se_hm_gsgroup_details", 
                    "required": "False", 
                    "ref_type": "SeHmEventGslbPoolDetails", 
                    "description": []
                }, 
                "seupgrade_scalein_details": {
                    "doc_type": "SeUpgradeScaleinEventDetails", 
                    "py_type": "SeUpgradeScaleinEventDetails", 
                    "name": "seupgrade_scalein_details", 
                    "required": "False", 
                    "ref_type": "SeUpgradeScaleinEventDetails", 
                    "description": []
                }, 
                "cc_ip_details": {
                    "doc_type": "CloudIpChange", 
                    "py_type": "CloudIpChange", 
                    "name": "cc_ip_details", 
                    "required": "False", 
                    "ref_type": "CloudIpChange", 
                    "description": []
                }, 
                "rebalance_scaleout_details": {
                    "doc_type": "RebalanceScaleoutEventDetails", 
                    "py_type": "RebalanceScaleoutEventDetails", 
                    "name": "rebalance_scaleout_details", 
                    "required": "False", 
                    "ref_type": "RebalanceScaleoutEventDetails", 
                    "description": []
                }, 
                "os_ip_details": {
                    "doc_type": "OpenStackIpChange", 
                    "py_type": "OpenStackIpChange", 
                    "name": "os_ip_details", 
                    "required": "False", 
                    "ref_type": "OpenStackIpChange", 
                    "description": []
                }, 
                "os_lbplugin_op_details": {
                    "doc_type": "OpenStackLbPluginOp", 
                    "py_type": "OpenStackLbPluginOp", 
                    "name": "os_lbplugin_op_details", 
                    "required": "False", 
                    "ref_type": "OpenStackLbPluginOp", 
                    "description": []
                }, 
                "metric_threshold_up_details": {
                    "doc_type": "MetricThresoldUpDetails", 
                    "py_type": "MetricThresoldUpDetails", 
                    "name": "metric_threshold_up_details", 
                    "required": "False", 
                    "ref_type": "MetricThresoldUpDetails", 
                    "description": []
                }, 
                "os_infra_details": {
                    "doc_type": "OpenStackClusterSetup", 
                    "py_type": "OpenStackClusterSetup", 
                    "name": "os_infra_details", 
                    "required": "False", 
                    "ref_type": "OpenStackClusterSetup", 
                    "description": []
                }, 
                "rebalance_scalein_details": {
                    "doc_type": "RebalanceScaleinEventDetails", 
                    "py_type": "RebalanceScaleinEventDetails", 
                    "name": "rebalance_scalein_details", 
                    "required": "False", 
                    "ref_type": "RebalanceScaleinEventDetails", 
                    "description": []
                }, 
                "scheduler_action_info": {
                    "doc_type": "SchedulerActionDetails", 
                    "py_type": "SchedulerActionDetails", 
                    "name": "scheduler_action_info", 
                    "required": "False", 
                    "ref_type": "SchedulerActionDetails", 
                    "description": []
                }, 
                "hs_details": {
                    "doc_type": "HealthScoreDetails", 
                    "py_type": "HealthScoreDetails", 
                    "name": "hs_details", 
                    "required": "False", 
                    "ref_type": "HealthScoreDetails", 
                    "description": []
                }, 
                "seupgrade_scaleout_details": {
                    "doc_type": "SeUpgradeScaleoutEventDetails", 
                    "py_type": "SeUpgradeScaleoutEventDetails", 
                    "name": "seupgrade_scaleout_details", 
                    "required": "False", 
                    "ref_type": "SeUpgradeScaleoutEventDetails", 
                    "description": []
                }, 
                "switchover_fail_details": {
                    "doc_type": "SwitchoverFailEventDetails", 
                    "py_type": "SwitchoverFailEventDetails", 
                    "name": "switchover_fail_details", 
                    "required": "False", 
                    "ref_type": "SwitchoverFailEventDetails", 
                    "description": []
                }, 
                "se_hm_pool_details": {
                    "doc_type": "SeHmEventPoolDetails", 
                    "py_type": "SeHmEventPoolDetails", 
                    "name": "se_hm_pool_details", 
                    "required": "False", 
                    "ref_type": "SeHmEventPoolDetails", 
                    "description": []
                }, 
                "vs_fsm_details": {
                    "doc_type": "VsFsmEventDetails", 
                    "py_type": "VsFsmEventDetails", 
                    "name": "vs_fsm_details", 
                    "required": "False", 
                    "ref_type": "VsFsmEventDetails", 
                    "description": []
                }, 
                "os_se_vm_details": {
                    "doc_type": "OpenStackSeVmChange", 
                    "py_type": "OpenStackSeVmChange", 
                    "name": "os_se_vm_details", 
                    "required": "False", 
                    "ref_type": "OpenStackSeVmChange", 
                    "description": []
                }, 
                "rebalance_migrate_details": {
                    "doc_type": "RebalanceMigrateEventDetails", 
                    "py_type": "RebalanceMigrateEventDetails", 
                    "name": "rebalance_migrate_details", 
                    "required": "False", 
                    "ref_type": "RebalanceMigrateEventDetails", 
                    "description": []
                }, 
                "vs_migrate_details": {
                    "doc_type": "VsMigrateEventDetails", 
                    "py_type": "VsMigrateEventDetails", 
                    "name": "vs_migrate_details", 
                    "required": "False", 
                    "ref_type": "VsMigrateEventDetails", 
                    "description": []
                }, 
                "server_autoscalein_info": {
                    "doc_type": "ServerAutoScaleInInfo", 
                    "py_type": "ServerAutoScaleInInfo", 
                    "name": "server_autoscalein_info", 
                    "required": "False", 
                    "ref_type": "ServerAutoScaleInInfo", 
                    "description": []
                }, 
                "config_delete_details": {
                    "doc_type": "ConfigDeleteDetails", 
                    "py_type": "ConfigDeleteDetails", 
                    "name": "config_delete_details", 
                    "required": "False", 
                    "ref_type": "ConfigDeleteDetails", 
                    "description": []
                }, 
                "ssl_expire_details": {
                    "doc_type": "SSLExpireDetails", 
                    "py_type": "SSLExpireDetails", 
                    "name": "ssl_expire_details", 
                    "required": "False", 
                    "ref_type": "SSLExpireDetails", 
                    "description": []
                }, 
                "config_password_change_request_details": {
                    "doc_type": "ConfigUserPasswordChangeRequest", 
                    "py_type": "ConfigUserPasswordChangeRequest", 
                    "name": "config_password_change_request_details", 
                    "required": "False", 
                    "ref_type": "ConfigUserPasswordChangeRequest", 
                    "description": []
                }, 
                "apic_agent_bd_vrf_details": {
                    "doc_type": "ApicAgentBridgeDomainVrfChange", 
                    "py_type": "ApicAgentBridgeDomainVrfChange", 
                    "name": "apic_agent_bd_vrf_details", 
                    "required": "False", 
                    "ref_type": "ApicAgentBridgeDomainVrfChange", 
                    "description": []
                }, 
                "se_thresh_event_details": {
                    "doc_type": "SeThreshEventDetails", 
                    "py_type": "SeThreshEventDetails", 
                    "name": "se_thresh_event_details", 
                    "required": "False", 
                    "ref_type": "SeThreshEventDetails", 
                    "description": []
                }, 
                "modify_networks_details": {
                    "doc_type": "RmModifyNetworksEventDetails", 
                    "py_type": "RmModifyNetworksEventDetails", 
                    "name": "modify_networks_details", 
                    "required": "False", 
                    "ref_type": "RmModifyNetworksEventDetails", 
                    "description": []
                }, 
                "se_dupip_event_details": {
                    "doc_type": "SeDupipEventDetails", 
                    "py_type": "SeDupipEventDetails", 
                    "name": "se_dupip_event_details", 
                    "required": "False", 
                    "ref_type": "SeDupipEventDetails", 
                    "description": []
                }, 
                "config_user_authrz_rule_details": {
                    "doc_type": "ConfigUserAuthrzByRule", 
                    "py_type": "ConfigUserAuthrzByRule", 
                    "name": "config_user_authrz_rule_details", 
                    "required": "False", 
                    "ref_type": "ConfigUserAuthrzByRule", 
                    "description": []
                }, 
                "network_subnet_details": {
                    "doc_type": "NetworkSubnetInfo", 
                    "py_type": "NetworkSubnetInfo", 
                    "name": "network_subnet_details", 
                    "required": "False", 
                    "ref_type": "NetworkSubnetInfo", 
                    "description": []
                }, 
                "cc_sync_services_details": {
                    "doc_type": "CloudSyncServices", 
                    "py_type": "CloudSyncServices", 
                    "name": "cc_sync_services_details", 
                    "required": "False", 
                    "ref_type": "CloudSyncServices", 
                    "description": []
                }, 
                "vs_pool_nw_fltr_details": {
                    "doc_type": "VsPoolNwFilterEventDetails", 
                    "py_type": "VsPoolNwFilterEventDetails", 
                    "name": "vs_pool_nw_fltr_details", 
                    "required": "False", 
                    "ref_type": "VsPoolNwFilterEventDetails", 
                    "description": []
                }, 
                "cluster_service_critical_failure_details": {
                    "doc_type": "ClusterServiceCriticalFailureEvent", 
                    "py_type": "ClusterServiceCriticalFailureEvent", 
                    "name": "cluster_service_critical_failure_details", 
                    "required": "False", 
                    "ref_type": "ClusterServiceCriticalFailureEvent", 
                    "description": []
                }, 
                "cluster_node_started_details": {
                    "doc_type": "ClusterNodeStartedEvent", 
                    "py_type": "ClusterNodeStartedEvent", 
                    "name": "cluster_node_started_details", 
                    "required": "False", 
                    "ref_type": "ClusterNodeStartedEvent", 
                    "description": []
                }, 
                "vs_scalein_details": {
                    "doc_type": "VsScaleInEventDetails", 
                    "py_type": "VsScaleInEventDetails", 
                    "name": "vs_scalein_details", 
                    "required": "False", 
                    "ref_type": "VsScaleInEventDetails", 
                    "description": []
                }, 
                "cluster_config_failed_details": {
                    "doc_type": "ClusterConfigFailedEvent", 
                    "py_type": "ClusterConfigFailedEvent", 
                    "name": "cluster_config_failed_details", 
                    "required": "False", 
                    "ref_type": "ClusterConfigFailedEvent", 
                    "description": []
                }, 
                "delete_se_details": {
                    "doc_type": "RmDeleteSeEventDetails", 
                    "py_type": "RmDeleteSeEventDetails", 
                    "name": "delete_se_details", 
                    "required": "False", 
                    "ref_type": "RmDeleteSeEventDetails", 
                    "description": []
                }, 
                "vcenter_connectivity_status": {
                    "doc_type": "VinfraVcenterConnectivityStatus", 
                    "py_type": "VinfraVcenterConnectivityStatus", 
                    "name": "vcenter_connectivity_status", 
                    "required": "False", 
                    "ref_type": "VinfraVcenterConnectivityStatus", 
                    "description": []
                }, 
                "gcp_info": {
                    "doc_type": "GCPSetup", 
                    "py_type": "GCPSetup", 
                    "name": "gcp_info", 
                    "required": "False", 
                    "ref_type": "GCPSetup", 
                    "description": []
                }, 
                "bootup_fail_details": {
                    "doc_type": "RmSeBootupFailEventDetails", 
                    "py_type": "RmSeBootupFailEventDetails", 
                    "name": "bootup_fail_details", 
                    "required": "False", 
                    "ref_type": "RmSeBootupFailEventDetails", 
                    "description": []
                }, 
                "switchover_details": {
                    "doc_type": "SwitchoverEventDetails", 
                    "py_type": "SwitchoverEventDetails", 
                    "name": "switchover_details", 
                    "required": "False", 
                    "ref_type": "SwitchoverEventDetails", 
                    "description": []
                }, 
                "cc_se_vm_details": {
                    "doc_type": "CloudSeVmChange", 
                    "py_type": "CloudSeVmChange", 
                    "name": "cc_se_vm_details", 
                    "required": "False", 
                    "ref_type": "CloudSeVmChange", 
                    "description": []
                }, 
                "vs_error_details": {
                    "doc_type": "VsErrorEventDetails", 
                    "py_type": "VsErrorEventDetails", 
                    "name": "vs_error_details", 
                    "required": "False", 
                    "ref_type": "VsErrorEventDetails", 
                    "description": []
                }, 
                "apic_agent_vs_network_error": {
                    "doc_type": "ApicAgentVsNetworkError", 
                    "py_type": "ApicAgentVsNetworkError", 
                    "name": "apic_agent_vs_network_error", 
                    "required": "False", 
                    "ref_type": "ApicAgentVsNetworkError", 
                    "description": []
                }, 
                "cntlr_host_list_details": {
                    "doc_type": "VinfraCntlrHostUnreachableList", 
                    "py_type": "VinfraCntlrHostUnreachableList", 
                    "name": "cntlr_host_list_details", 
                    "required": "False", 
                    "ref_type": "VinfraCntlrHostUnreachableList", 
                    "description": []
                }, 
                "server_autoscalein_complete_info": {
                    "doc_type": "ServerAutoScaleInCompleteInfo", 
                    "py_type": "ServerAutoScaleInCompleteInfo", 
                    "name": "server_autoscalein_complete_info", 
                    "required": "False", 
                    "ref_type": "ServerAutoScaleInCompleteInfo", 
                    "description": []
                }, 
                "all_seupgrade_event_details": {
                    "doc_type": "AllSeUpgradeEventDetails", 
                    "py_type": "AllSeUpgradeEventDetails", 
                    "name": "all_seupgrade_event_details", 
                    "required": "False", 
                    "ref_type": "AllSeUpgradeEventDetails", 
                    "description": []
                }, 
                "se_gateway_heartbeat_failed_details": {
                    "doc_type": "SeGatewayHeartbeatFailedDetails", 
                    "py_type": "SeGatewayHeartbeatFailedDetails", 
                    "name": "se_gateway_heartbeat_failed_details", 
                    "required": "False", 
                    "ref_type": "SeGatewayHeartbeatFailedDetails", 
                    "description": []
                }, 
                "pool_server_delete_details": {
                    "doc_type": "VinfraPoolServerDeleteDetails", 
                    "py_type": "VinfraPoolServerDeleteDetails", 
                    "name": "pool_server_delete_details", 
                    "required": "False", 
                    "ref_type": "VinfraPoolServerDeleteDetails", 
                    "description": []
                }, 
                "avg_uptime_change_details": {
                    "doc_type": "AvgUptimeChangeDetails", 
                    "py_type": "AvgUptimeChangeDetails", 
                    "name": "avg_uptime_change_details", 
                    "required": "False", 
                    "ref_type": "AvgUptimeChangeDetails", 
                    "description": []
                }, 
                "server_autoscaleout_complete_info": {
                    "doc_type": "ServerAutoScaleOutCompleteInfo", 
                    "py_type": "ServerAutoScaleOutCompleteInfo", 
                    "name": "server_autoscaleout_complete_info", 
                    "required": "False", 
                    "ref_type": "ServerAutoScaleOutCompleteInfo", 
                    "description": []
                }, 
                "host_unavail_details": {
                    "doc_type": "HostUnavailEventDetails", 
                    "py_type": "HostUnavailEventDetails", 
                    "name": "host_unavail_details", 
                    "required": "False", 
                    "ref_type": "HostUnavailEventDetails", 
                    "description": []
                }, 
                "se_pool_lb_details": {
                    "doc_type": "SePoolLbEventDetails", 
                    "py_type": "SePoolLbEventDetails", 
                    "name": "se_pool_lb_details", 
                    "required": "False", 
                    "ref_type": "SePoolLbEventDetails", 
                    "description": []
                }, 
                "se_gateway_heartbeat_success_details": {
                    "doc_type": "SeGatewayHeartbeatSuccessDetails", 
                    "py_type": "SeGatewayHeartbeatSuccessDetails", 
                    "name": "se_gateway_heartbeat_success_details", 
                    "required": "False", 
                    "ref_type": "SeGatewayHeartbeatSuccessDetails", 
                    "description": []
                }, 
                "server_autoscale_failed_info": {
                    "doc_type": "ServerAutoScaleFailedInfo", 
                    "py_type": "ServerAutoScaleFailedInfo", 
                    "name": "server_autoscale_failed_info", 
                    "required": "False", 
                    "ref_type": "ServerAutoScaleFailedInfo", 
                    "description": []
                }, 
                "system_upgrade_details": {
                    "doc_type": "SystemUpgradeDetails", 
                    "py_type": "SystemUpgradeDetails", 
                    "name": "system_upgrade_details", 
                    "required": "False", 
                    "ref_type": "SystemUpgradeDetails", 
                    "description": []
                }, 
                "se_vnic_down_event_details": {
                    "doc_type": "SeVnicDownEventDetails", 
                    "py_type": "SeVnicDownEventDetails", 
                    "name": "se_vnic_down_event_details", 
                    "required": "False", 
                    "ref_type": "SeVnicDownEventDetails", 
                    "description": []
                }, 
                "vs_awaitingse_details": {
                    "doc_type": "VsAwaitingSeEventDetails", 
                    "py_type": "VsAwaitingSeEventDetails", 
                    "name": "vs_awaitingse_details", 
                    "required": "False", 
                    "ref_type": "VsAwaitingSeEventDetails", 
                    "description": []
                }, 
                "mesos_infra_details": {
                    "doc_type": "MesosSetup", 
                    "py_type": "MesosSetup", 
                    "name": "mesos_infra_details", 
                    "required": "False", 
                    "ref_type": "MesosSetup", 
                    "description": []
                }, 
                "cluster_warm_reboot_details": {
                    "doc_type": "ClusterWarmRebootEvent", 
                    "py_type": "ClusterWarmRebootEvent", 
                    "name": "cluster_warm_reboot_details", 
                    "required": "False", 
                    "ref_type": "ClusterWarmRebootEvent", 
                    "description": []
                }, 
                "mgmt_nw_change_details": {
                    "doc_type": "VinfraMgmtNwChangeDetails", 
                    "py_type": "VinfraMgmtNwChangeDetails", 
                    "name": "mgmt_nw_change_details", 
                    "required": "False", 
                    "ref_type": "VinfraMgmtNwChangeDetails", 
                    "description": []
                }, 
                "marathon_service_port_conflict_details": {
                    "doc_type": "MarathonServicePortConflict", 
                    "py_type": "MarathonServicePortConflict", 
                    "name": "marathon_service_port_conflict_details", 
                    "required": "False", 
                    "ref_type": "MarathonServicePortConflict", 
                    "description": []
                }, 
                "cluster_node_db_failed_details": {
                    "doc_type": "ClusterNodeDbFailedEvent", 
                    "py_type": "ClusterNodeDbFailedEvent", 
                    "name": "cluster_node_db_failed_details", 
                    "required": "False", 
                    "ref_type": "ClusterNodeDbFailedEvent", 
                    "description": []
                }, 
                "cc_health_details": {
                    "doc_type": "CloudHealth", 
                    "py_type": "CloudHealth", 
                    "name": "cc_health_details", 
                    "required": "False", 
                    "ref_type": "CloudHealth", 
                    "description": []
                }, 
                "pool_deployment_failure_info": {
                    "doc_type": "PoolDeploymentFailureInfo", 
                    "py_type": "PoolDeploymentFailureInfo", 
                    "name": "pool_deployment_failure_info", 
                    "required": "False", 
                    "ref_type": "PoolDeploymentFailureInfo", 
                    "description": []
                }, 
                "os_lbaudit_details": {
                    "doc_type": "OpenStackLbProvAuditCheck", 
                    "py_type": "OpenStackLbProvAuditCheck", 
                    "name": "os_lbaudit_details", 
                    "required": "False", 
                    "ref_type": "OpenStackLbProvAuditCheck", 
                    "description": []
                }, 
                "cluster_node_remove_details": {
                    "doc_type": "ClusterNodeRemoveEvent", 
                    "py_type": "ClusterNodeRemoveEvent", 
                    "name": "cluster_node_remove_details", 
                    "required": "False", 
                    "ref_type": "ClusterNodeRemoveEvent", 
                    "description": []
                }, 
                "cluster_node_add_details": {
                    "doc_type": "ClusterNodeAddEvent", 
                    "py_type": "ClusterNodeAddEvent", 
                    "name": "cluster_node_add_details", 
                    "required": "False", 
                    "ref_type": "ClusterNodeAddEvent", 
                    "description": []
                }, 
                "vip_dns_info": {
                    "doc_type": "DNSRegisterInfo", 
                    "py_type": "DNSRegisterInfo", 
                    "name": "vip_dns_info", 
                    "required": "False", 
                    "ref_type": "DNSRegisterInfo", 
                    "description": []
                }, 
                "semigrate_event_details": {
                    "doc_type": "SeMigrateEventDetails", 
                    "py_type": "SeMigrateEventDetails", 
                    "name": "semigrate_event_details", 
                    "required": "False", 
                    "ref_type": "SeMigrateEventDetails", 
                    "description": []
                }, 
                "os_sync_services_details": {
                    "doc_type": "OpenStackSyncServices", 
                    "py_type": "OpenStackSyncServices", 
                    "name": "os_sync_services_details", 
                    "required": "False", 
                    "ref_type": "OpenStackSyncServices", 
                    "description": []
                }, 
                "cc_parkintf_details": {
                    "doc_type": "CloudVipParkingIntf", 
                    "py_type": "CloudVipParkingIntf", 
                    "name": "cc_parkintf_details", 
                    "required": "False", 
                    "ref_type": "CloudVipParkingIntf", 
                    "description": []
                }, 
                "cluster_leader_failover_details": {
                    "doc_type": "ClusterLeaderFailoverEvent", 
                    "py_type": "ClusterLeaderFailoverEvent", 
                    "name": "cluster_leader_failover_details", 
                    "required": "False", 
                    "ref_type": "ClusterLeaderFailoverEvent", 
                    "description": []
                }, 
                "license_expiry_details": {
                    "doc_type": "LicenseExpiryDetails", 
                    "py_type": "LicenseExpiryDetails", 
                    "name": "license_expiry_details", 
                    "required": "False", 
                    "ref_type": "LicenseExpiryDetails", 
                    "description": []
                }, 
                "config_action_details": {
                    "doc_type": "ConfigActionDetails", 
                    "py_type": "ConfigActionDetails", 
                    "name": "config_action_details", 
                    "required": "False", 
                    "ref_type": "ConfigActionDetails", 
                    "description": []
                }, 
                "ssl_renew_failed_details": {
                    "doc_type": "SSLRenewFailedDetails", 
                    "py_type": "SSLRenewFailedDetails", 
                    "name": "ssl_renew_failed_details", 
                    "required": "False", 
                    "ref_type": "SSLRenewFailedDetails", 
                    "description": []
                }, 
                "se_ipfailure_event_details": {
                    "doc_type": "SeIpfailureEventDetails", 
                    "py_type": "SeIpfailureEventDetails", 
                    "name": "se_ipfailure_event_details", 
                    "required": "False", 
                    "ref_type": "SeIpfailureEventDetails", 
                    "description": []
                }, 
                "bm_infra_details": {
                    "doc_type": "BMSetup", 
                    "py_type": "BMSetup", 
                    "name": "bm_infra_details", 
                    "required": "False", 
                    "ref_type": "BMSetup", 
                    "description": []
                }, 
                "metrics_db_disk_details": {
                    "doc_type": "MetricsDbDiskEventDetails", 
                    "py_type": "MetricsDbDiskEventDetails", 
                    "name": "metrics_db_disk_details", 
                    "required": "False", 
                    "ref_type": "MetricsDbDiskEventDetails", 
                    "description": []
                }, 
                "se_version_check_details": {
                    "doc_type": "SeVersionCheckFailedEvent", 
                    "py_type": "SeVersionCheckFailedEvent", 
                    "name": "se_version_check_details", 
                    "required": "False", 
                    "ref_type": "SeVersionCheckFailedEvent", 
                    "description": []
                }, 
                "cc_tenant_del_details": {
                    "doc_type": "CloudTenantsDeleted", 
                    "py_type": "CloudTenantsDeleted", 
                    "name": "cc_tenant_del_details", 
                    "required": "False", 
                    "ref_type": "CloudTenantsDeleted", 
                    "description": []
                }, 
                "dns_sync_info": {
                    "doc_type": "DNSVsSyncInfo", 
                    "py_type": "DNSVsSyncInfo", 
                    "name": "dns_sync_info", 
                    "required": "False", 
                    "ref_type": "DNSVsSyncInfo", 
                    "description": []
                }, 
                "cluster_service_failed_details": {
                    "doc_type": "ClusterServiceFailedEvent", 
                    "py_type": "ClusterServiceFailedEvent", 
                    "name": "cluster_service_failed_details", 
                    "required": "False", 
                    "ref_type": "ClusterServiceFailedEvent", 
                    "description": []
                }, 
                "nw_summarized_details": {
                    "doc_type": "SummarizedInfo", 
                    "py_type": "SummarizedInfo", 
                    "name": "nw_summarized_details", 
                    "required": "False", 
                    "ref_type": "SummarizedInfo", 
                    "description": []
                }, 
                "cc_dns_update_details": {
                    "doc_type": "CloudDnsUpdate", 
                    "py_type": "CloudDnsUpdate", 
                    "name": "cc_dns_update_details", 
                    "required": "False", 
                    "ref_type": "CloudDnsUpdate", 
                    "description": []
                }, 
                "spawn_se_details": {
                    "doc_type": "RmSpawnSeEventDetails", 
                    "py_type": "RmSpawnSeEventDetails", 
                    "name": "spawn_se_details", 
                    "required": "False", 
                    "ref_type": "RmSpawnSeEventDetails", 
                    "description": []
                }, 
                "apic_agent_generic_details": {
                    "doc_type": "ApicAgentGenericEventDetails", 
                    "py_type": "ApicAgentGenericEventDetails", 
                    "name": "apic_agent_generic_details", 
                    "required": "False", 
                    "ref_type": "ApicAgentGenericEventDetails", 
                    "description": []
                }, 
                "anomaly_details": {
                    "doc_type": "AnomalyEventDetails", 
                    "py_type": "AnomalyEventDetails", 
                    "name": "anomaly_details", 
                    "required": "False", 
                    "ref_type": "AnomalyEventDetails", 
                    "description": []
                }, 
                "docker_ucp_details": {
                    "doc_type": "DockerUCPSetup", 
                    "py_type": "DockerUCPSetup", 
                    "name": "docker_ucp_details", 
                    "required": "False", 
                    "ref_type": "DockerUCPSetup", 
                    "description": []
                }, 
                "os_vnic_details": {
                    "doc_type": "OpenStackVnicChange", 
                    "py_type": "OpenStackVnicChange", 
                    "name": "os_vnic_details", 
                    "required": "False", 
                    "ref_type": "OpenStackVnicChange", 
                    "description": []
                }, 
                "pool_deployment_success_info": {
                    "doc_type": "PoolDeploymentSuccessInfo", 
                    "py_type": "PoolDeploymentSuccessInfo", 
                    "name": "pool_deployment_success_info", 
                    "required": "False", 
                    "ref_type": "PoolDeploymentSuccessInfo", 
                    "description": []
                }, 
                "se_hb_event_details": {
                    "doc_type": "SeHBEventDetails", 
                    "py_type": "SeHBEventDetails", 
                    "name": "se_hb_event_details", 
                    "required": "False", 
                    "ref_type": "SeHBEventDetails", 
                    "description": []
                }, 
                "disable_se_migrate_details": {
                    "doc_type": "DisableSeMigrateEventDetails", 
                    "py_type": "DisableSeMigrateEventDetails", 
                    "name": "disable_se_migrate_details", 
                    "required": "False", 
                    "ref_type": "DisableSeMigrateEventDetails", 
                    "description": []
                }, 
                "bind_vs_se_details": {
                    "doc_type": "RmBindVsSeEventDetails", 
                    "py_type": "RmBindVsSeEventDetails", 
                    "name": "bind_vs_se_details", 
                    "required": "False", 
                    "ref_type": "RmBindVsSeEventDetails", 
                    "description": []
                }, 
                "add_networks_details": {
                    "doc_type": "RmAddNetworksEventDetails", 
                    "py_type": "RmAddNetworksEventDetails", 
                    "name": "add_networks_details", 
                    "required": "False", 
                    "ref_type": "RmAddNetworksEventDetails", 
                    "description": []
                }, 
                "se_vnic_tx_queue_stall_event_details": {
                    "doc_type": "SeVnicTxQueueStallEventDetails", 
                    "py_type": "SeVnicTxQueueStallEventDetails", 
                    "name": "se_vnic_tx_queue_stall_event_details", 
                    "required": "False", 
                    "ref_type": "SeVnicTxQueueStallEventDetails", 
                    "description": []
                }
            }
        }, 
        "EventLog": {
            "name": "EventLog", 
            "properties": {
                "event_details": {
                    "doc_type": "EventDetails", 
                    "py_type": "EventDetails", 
                    "name": "event_details", 
                    "required": "False", 
                    "ref_type": "EventDetails", 
                    "description": []
                }, 
                "internal": {
                    "default_value": "EVENT_INTERNAL", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "internal", 
                    "required": "False", 
                    "option_values": [
                        "EVENT_INTERNAL", 
                        "EVENT_EXTERNAL"
                    ], 
                    "description": [
                        "Enum options - EVENT_INTERNAL, EVENT_EXTERNAL."
                    ]
                }, 
                "is_security_event": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_security_event", 
                    "required": "False", 
                    "description": []
                }, 
                "ignore_event_details_display": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "ignore_event_details_display", 
                    "required": "False", 
                    "description": []
                }
            }
        }
    }, 
    "l4_internal": {
        "SeMicroServiceFilter": {
            "name": "SeMicroServiceFilter", 
            "properties": {
                "container_key": {
                    "doc_type": "ContainerTaskIdFilterKey", 
                    "py_type": "list", 
                    "name": "container_key", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ContainerTaskIdFilterKey", 
                    "description": []
                }
            }
        }, 
        "CpuUsageRuntime": {
            "name": "CpuUsageRuntime", 
            "properties": {
                "current": {
                    "doc_type": "CpuUsageEntry", 
                    "py_type": "CpuUsageEntry", 
                    "name": "current", 
                    "required": "True", 
                    "ref_type": "CpuUsageEntry", 
                    "description": []
                }, 
                "last_5_sec_period": {
                    "doc_type": "CpuUsageEntry", 
                    "py_type": "CpuUsageEntry", 
                    "name": "last_5_sec_period", 
                    "required": "True", 
                    "ref_type": "CpuUsageEntry", 
                    "description": []
                }, 
                "since_boot": {
                    "doc_type": "CpuUsageEntry", 
                    "py_type": "CpuUsageEntry", 
                    "name": "since_boot", 
                    "required": "True", 
                    "ref_type": "CpuUsageEntry", 
                    "description": []
                }
            }
        }, 
        "InterfaceSummaryRuntime": {
            "name": "InterfaceSummaryRuntime", 
            "properties": {
                "interface_entries": {
                    "doc_type": "InterfaceSummaryEntry", 
                    "py_type": "list", 
                    "name": "interface_entries", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "InterfaceSummaryEntry", 
                    "description": []
                }
            }
        }, 
        "InterfaceRuntime": {
            "name": "InterfaceRuntime", 
            "properties": {
                "vnics": {
                    "doc_type": "VnicInfo", 
                    "py_type": "list", 
                    "name": "vnics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VnicInfo", 
                    "description": []
                }
            }
        }, 
        "ArptableRuntime": {
            "name": "ArptableRuntime", 
            "properties": {
                "arp_entry": {
                    "doc_type": "ArpEntry", 
                    "py_type": "list", 
                    "name": "arp_entry", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ArpEntry", 
                    "description": []
                }
            }
        }, 
        "InpcbInfo": {
            "name": "InpcbInfo", 
            "properties": {
                "client_mim": {
                    "doc_type": "EtherHeader", 
                    "py_type": "EtherHeader", 
                    "name": "client_mim", 
                    "required": "False", 
                    "ref_type": "EtherHeader", 
                    "description": []
                }
            }
        }, 
        "MicroServiceInternal": {
            "name": "MicroServiceInternal", 
            "properties": {
                "containers": {
                    "doc_type": "ContainerInternal", 
                    "py_type": "list", 
                    "name": "containers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ContainerInternal", 
                    "description": []
                }
            }
        }, 
        "MeminfoRuntime": {
            "name": "MeminfoRuntime", 
            "properties": {
                "shared_memory_stats": {
                    "doc_type": "Jestats", 
                    "py_type": "Jestats", 
                    "name": "shared_memory_stats", 
                    "required": "False", 
                    "ref_type": "Jestats", 
                    "description": []
                }, 
                "protobuf_memory_stats": {
                    "doc_type": "MemProto", 
                    "py_type": "MemProto", 
                    "name": "protobuf_memory_stats", 
                    "required": "False", 
                    "ref_type": "MemProto", 
                    "description": []
                }, 
                "memory_config": {
                    "doc_type": "MemConfig", 
                    "py_type": "MemConfig", 
                    "name": "memory_config", 
                    "required": "False", 
                    "ref_type": "MemConfig", 
                    "description": []
                }, 
                "process_memory_stats": {
                    "doc_type": "Mallstats", 
                    "py_type": "Mallstats", 
                    "name": "process_memory_stats", 
                    "required": "False", 
                    "ref_type": "Mallstats", 
                    "description": []
                }
            }
        }, 
        "SocketInfo": {
            "name": "SocketInfo", 
            "properties": {
                "so_starttime": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "so_starttime", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }, 
                "so_snd": {
                    "doc_type": "SocketBufferInfo", 
                    "py_type": "SocketBufferInfo", 
                    "name": "so_snd", 
                    "required": "False", 
                    "ref_type": "SocketBufferInfo", 
                    "description": []
                }, 
                "so_rcv": {
                    "doc_type": "SocketBufferInfo", 
                    "py_type": "SocketBufferInfo", 
                    "name": "so_rcv", 
                    "required": "False", 
                    "ref_type": "SocketBufferInfo", 
                    "description": []
                }
            }
        }, 
        "TcpConnRuntime": {
            "name": "TcpConnRuntime", 
            "properties": {
                "connection": {
                    "doc_type": "SimpleconnEntry", 
                    "py_type": "list", 
                    "name": "connection", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SimpleconnEntry", 
                    "description": []
                }
            }
        }, 
        "ArpTableFilter": {
            "name": "ArpTableFilter", 
            "properties": {
                "ip_address": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip_address", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address."
                    ]
                }
            }
        }, 
        "Jestats": {
            "name": "Jestats", 
            "properties": {
                "small": {
                    "doc_type": "AllocInfo", 
                    "py_type": "AllocInfo", 
                    "name": "small", 
                    "required": "False", 
                    "ref_type": "AllocInfo", 
                    "description": []
                }, 
                "large": {
                    "doc_type": "AllocInfo", 
                    "py_type": "AllocInfo", 
                    "name": "large", 
                    "required": "False", 
                    "ref_type": "AllocInfo", 
                    "description": []
                }, 
                "total": {
                    "doc_type": "AllocInfo", 
                    "py_type": "AllocInfo", 
                    "name": "total", 
                    "required": "False", 
                    "ref_type": "AllocInfo", 
                    "description": []
                }, 
                "page_stats": {
                    "doc_type": "PageStats", 
                    "py_type": "PageStats", 
                    "name": "page_stats", 
                    "required": "False", 
                    "ref_type": "PageStats", 
                    "description": []
                }
            }
        }, 
        "ShMallocStatRuntime": {
            "name": "ShMallocStatRuntime", 
            "properties": {
                "sh_mallocstat_entry": {
                    "doc_type": "ShMallocStatEntry", 
                    "py_type": "list", 
                    "name": "sh_mallocstat_entry", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ShMallocStatEntry", 
                    "description": []
                }
            }
        }, 
        "BgpRuntime": {
            "name": "BgpRuntime", 
            "properties": {
                "peers": {
                    "doc_type": "BgpPeerRuntime", 
                    "py_type": "list", 
                    "name": "peers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "BgpPeerRuntime", 
                    "description": []
                }
            }
        }, 
        "VnicInfo": {
            "name": "VnicInfo", 
            "properties": {
                "ip_info": {
                    "doc_type": "IpInterface", 
                    "py_type": "list", 
                    "name": "ip_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpInterface", 
                    "description": []
                }, 
                "interface_stats": {
                    "doc_type": "InterfaceStats", 
                    "py_type": "InterfaceStats", 
                    "name": "interface_stats", 
                    "required": "True", 
                    "ref_type": "InterfaceStats", 
                    "description": []
                }, 
                "mbr_intfs": {
                    "doc_type": "MbrIntf", 
                    "py_type": "list", 
                    "name": "mbr_intfs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MbrIntf", 
                    "description": []
                }
            }
        }, 
        "InterfaceStats": {
            "name": "InterfaceStats", 
            "properties": {
                "ifq_stats": {
                    "doc_type": "IfQStats", 
                    "py_type": "list", 
                    "name": "ifq_stats", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IfQStats", 
                    "description": []
                }
            }
        }, 
        "SeMicroService": {
            "name": "SeMicroService", 
            "properties": {
                "services": {
                    "doc_type": "MicroServiceInternal", 
                    "py_type": "list", 
                    "name": "services", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MicroServiceInternal", 
                    "description": []
                }, 
                "containers": {
                    "doc_type": "ContainerInternal", 
                    "py_type": "list", 
                    "name": "containers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ContainerInternal", 
                    "description": []
                }
            }
        }, 
        "SeVsHbStatEntry": {
            "name": "SeVsHbStatEntry", 
            "properties": {
                "short_vs_uuid_len_sent": {
                    "doc_type": "CountHistogramBar", 
                    "py_type": "list", 
                    "name": "short_vs_uuid_len_sent", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CountHistogramBar", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "has_hb_issues_vss": {
                    "doc_type": "RepeatedStrings", 
                    "py_type": "list", 
                    "name": "has_hb_issues_vss", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "RepeatedStrings", 
                    "description": [
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "num_se_vs_hb_in_pkt": {
                    "doc_type": "CountHistogramBar", 
                    "py_type": "list", 
                    "name": "num_se_vs_hb_in_pkt", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CountHistogramBar", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "aggregatable_vss": {
                    "doc_type": "RepeatedStrings", 
                    "py_type": "list", 
                    "name": "aggregatable_vss", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "RepeatedStrings", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "SeReservedVs": {
            "name": "SeReservedVs", 
            "properties": {
                "tcpstat": {
                    "doc_type": "TcpStatRuntime", 
                    "py_type": "list", 
                    "name": "tcpstat", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "TcpStatRuntime", 
                    "description": []
                }, 
                "traffic_clone_stats": {
                    "doc_type": "TrafficCloneRuntime", 
                    "py_type": "list", 
                    "name": "traffic_clone_stats", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "TrafficCloneRuntime", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "internal": {
                    "doc_type": "VirtualServiceInternal", 
                    "py_type": "VirtualServiceInternal", 
                    "name": "internal", 
                    "required": "False", 
                    "ref_type": "VirtualServiceInternal", 
                    "description": []
                }, 
                "udpstat": {
                    "doc_type": "UdpStatRuntime", 
                    "py_type": "list", 
                    "name": "udpstat", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "UdpStatRuntime", 
                    "description": []
                }, 
                "detail": {
                    "doc_type": "VirtualServiceRuntimeDetail", 
                    "py_type": "VirtualServiceRuntimeDetail", 
                    "name": "detail", 
                    "required": "False", 
                    "ref_type": "VirtualServiceRuntimeDetail", 
                    "description": []
                }
            }
        }, 
        "InpcbFastInfo": {
            "name": "InpcbFastInfo", 
            "properties": {
                "inp_starttime": {
                    "doc_type": "TimeStamp", 
                    "py_type": "TimeStamp", 
                    "name": "inp_starttime", 
                    "required": "False", 
                    "ref_type": "TimeStamp", 
                    "description": []
                }
            }
        }, 
        "CpuStatRuntime": {
            "name": "CpuStatRuntime", 
            "properties": {
                "process_cpu_utilization": {
                    "doc_type": "ProcCpuStat", 
                    "py_type": "list", 
                    "name": "process_cpu_utilization", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ProcCpuStat", 
                    "description": []
                }
            }
        }, 
        "DetailedConnEntry": {
            "name": "DetailedConnEntry", 
            "properties": {
                "tcptw_info": {
                    "doc_type": "TcptwInfo", 
                    "py_type": "TcptwInfo", 
                    "name": "tcptw_info", 
                    "required": "False", 
                    "ref_type": "TcptwInfo", 
                    "description": []
                }, 
                "socket_info": {
                    "doc_type": "SocketInfo", 
                    "py_type": "SocketInfo", 
                    "name": "socket_info", 
                    "required": "False", 
                    "ref_type": "SocketInfo", 
                    "description": []
                }, 
                "inpcb_proxy_info": {
                    "doc_type": "InpcbProxyInfo", 
                    "py_type": "InpcbProxyInfo", 
                    "name": "inpcb_proxy_info", 
                    "required": "False", 
                    "ref_type": "InpcbProxyInfo", 
                    "description": []
                }, 
                "tcpcb_info": {
                    "doc_type": "TcpcbInfo", 
                    "py_type": "TcpcbInfo", 
                    "name": "tcpcb_info", 
                    "required": "False", 
                    "ref_type": "TcpcbInfo", 
                    "description": []
                }, 
                "inpcb_fast_info": {
                    "doc_type": "InpcbFastInfo", 
                    "py_type": "InpcbFastInfo", 
                    "name": "inpcb_fast_info", 
                    "required": "False", 
                    "ref_type": "InpcbFastInfo", 
                    "description": []
                }, 
                "inpcb_info": {
                    "doc_type": "InpcbInfo", 
                    "py_type": "InpcbInfo", 
                    "name": "inpcb_info", 
                    "required": "False", 
                    "ref_type": "InpcbInfo", 
                    "description": []
                }
            }
        }, 
        "RouteTableRuntime": {
            "name": "RouteTableRuntime", 
            "properties": {
                "route_entry": {
                    "doc_type": "RouteEntry", 
                    "py_type": "list", 
                    "name": "route_entry", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "RouteEntry", 
                    "description": []
                }
            }
        }, 
        "TcpConnRuntimeDetail": {
            "name": "TcpConnRuntimeDetail", 
            "properties": {
                "conn_detail": {
                    "doc_type": "DetailedConnEntry", 
                    "py_type": "list", 
                    "name": "conn_detail", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DetailedConnEntry", 
                    "description": []
                }
            }
        }, 
        "ConnectionDumpRuntime": {
            "name": "ConnectionDumpRuntime", 
            "properties": {
                "connection": {
                    "doc_type": "ConnectionEntry", 
                    "py_type": "list", 
                    "name": "connection", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ConnectionEntry", 
                    "description": []
                }
            }
        }, 
        "MallocStatRuntime": {
            "name": "MallocStatRuntime", 
            "properties": {
                "mallocstat_entry": {
                    "doc_type": "MallocStatEntry", 
                    "py_type": "list", 
                    "name": "mallocstat_entry", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MallocStatEntry", 
                    "description": []
                }
            }
        }, 
        "InterfaceSummaryEntry": {
            "name": "InterfaceSummaryEntry", 
            "properties": {
                "ip_info": {
                    "doc_type": "IpInterface", 
                    "py_type": "list", 
                    "name": "ip_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpInterface", 
                    "description": []
                }
            }
        }, 
        "SeVsHbStatRuntime": {
            "name": "SeVsHbStatRuntime", 
            "properties": {
                "se_vs_hb_stat_entry": {
                    "doc_type": "SeVsHbStatEntry", 
                    "py_type": "list", 
                    "name": "se_vs_hb_stat_entry", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeVsHbStatEntry", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }
            }
        }, 
        "IcmpStatRuntime": {
            "name": "IcmpStatRuntime", 
            "properties": {
                "more_stats": {
                    "doc_type": "IcmpStat", 
                    "py_type": "IcmpStat", 
                    "name": "more_stats", 
                    "required": "False", 
                    "ref_type": "IcmpStat", 
                    "description": []
                }, 
                "icps_inhist": {
                    "doc_type": "IcmpHist", 
                    "py_type": "IcmpHist", 
                    "name": "icps_inhist", 
                    "required": "False", 
                    "ref_type": "IcmpHist", 
                    "description": []
                }, 
                "icps_outhist": {
                    "doc_type": "IcmpHist", 
                    "py_type": "IcmpHist", 
                    "name": "icps_outhist", 
                    "required": "False", 
                    "ref_type": "IcmpHist", 
                    "description": []
                }
            }
        }, 
        "MicroServiceDetail": {
            "name": "MicroServiceDetail", 
            "properties": {
                "containers": {
                    "doc_type": "ContainerDetail", 
                    "py_type": "list", 
                    "name": "containers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ContainerDetail", 
                    "description": []
                }
            }
        }, 
        "TcpcbInfo": {
            "name": "TcpcbInfo", 
            "properties": {
                "sackhint": {
                    "doc_type": "SackHint", 
                    "py_type": "SackHint", 
                    "name": "sackhint", 
                    "required": "False", 
                    "ref_type": "SackHint", 
                    "description": []
                }, 
                "sackblks": {
                    "doc_type": "SackBlk", 
                    "py_type": "list", 
                    "name": "sackblks", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SackBlk", 
                    "description": []
                }, 
                "cc_info": {
                    "doc_type": "CcInfo", 
                    "py_type": "CcInfo", 
                    "name": "cc_info", 
                    "required": "False", 
                    "ref_type": "CcInfo", 
                    "description": []
                }
            }
        }
    }, 
    "se_shared_db": {
        "SdbKey": {
            "name": "SdbKey", 
            "properties": {
                "ssl_key": {
                    "doc_type": "SslKey", 
                    "py_type": "SslKey", 
                    "name": "ssl_key", 
                    "required": "False", 
                    "ref_type": "SslKey", 
                    "description": []
                }, 
                "ip_persistent_key": {
                    "doc_type": "IpPersistentKey", 
                    "py_type": "IpPersistentKey", 
                    "name": "ip_persistent_key", 
                    "required": "False", 
                    "ref_type": "IpPersistentKey", 
                    "description": []
                }
            }
        }, 
        "SdbValue": {
            "name": "SdbValue", 
            "properties": {
                "ip_persistent_value": {
                    "doc_type": "IpPersistentValue", 
                    "py_type": "IpPersistentValue", 
                    "name": "ip_persistent_value", 
                    "required": "False", 
                    "ref_type": "IpPersistentValue", 
                    "description": []
                }, 
                "ssl_value": {
                    "doc_type": "SslValue", 
                    "py_type": "SslValue", 
                    "name": "ssl_value", 
                    "required": "False", 
                    "ref_type": "SslValue", 
                    "description": []
                }
            }
        }, 
        "IpPersistentValue": {
            "name": "IpPersistentValue", 
            "properties": {
                "server_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "server_ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "IpPersistentKey": {
            "name": "IpPersistentKey", 
            "properties": {
                "client_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "client_ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }
    }, 
    "cloud_connector_message": {
        "CloudHost": {
            "name": "CloudHost", 
            "properties": {
                "services": {
                    "doc_type": "CloudHostSvc", 
                    "py_type": "list", 
                    "name": "services", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CloudHostSvc", 
                    "description": []
                }
            }
        }, 
        "CC_Image": {
            "name": "CC_Image", 
            "properties": {
                "shares": {
                    "doc_type": "CC_RefCnt", 
                    "py_type": "list", 
                    "name": "shares", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_RefCnt", 
                    "description": []
                }
            }
        }, 
        "CC_AgentInternal": {
            "name": "CC_AgentInternal", 
            "properties": {
                "linuxserver": {
                    "doc_type": "CC_LinuxServer", 
                    "py_type": "CC_LinuxServer", 
                    "name": "linuxserver", 
                    "required": "False", 
                    "ref_type": "CC_LinuxServer", 
                    "description": []
                }, 
                "docker": {
                    "doc_type": "CC_Docker", 
                    "py_type": "CC_Docker", 
                    "name": "docker", 
                    "required": "False", 
                    "ref_type": "CC_Docker", 
                    "description": []
                }, 
                "cloudstack": {
                    "doc_type": "CC_CloudStack", 
                    "py_type": "CC_CloudStack", 
                    "name": "cloudstack", 
                    "required": "False", 
                    "ref_type": "CC_CloudStack", 
                    "description": []
                }, 
                "mesos": {
                    "doc_type": "CC_Mesos", 
                    "py_type": "CC_Mesos", 
                    "name": "mesos", 
                    "required": "False", 
                    "ref_type": "CC_Mesos", 
                    "description": []
                }, 
                "cc_flags": {
                    "doc_type": "CC_AgentFlags", 
                    "py_type": "CC_AgentFlags", 
                    "name": "cc_flags", 
                    "required": "False", 
                    "ref_type": "CC_AgentFlags", 
                    "description": []
                }, 
                "format": {
                    "doc_type": "CC_Format", 
                    "py_type": "CC_Format", 
                    "name": "format", 
                    "required": "False", 
                    "ref_type": "CC_Format", 
                    "description": []
                }, 
                "aws": {
                    "doc_type": "CC_AWS", 
                    "py_type": "CC_AWS", 
                    "name": "aws", 
                    "required": "False", 
                    "ref_type": "CC_AWS", 
                    "description": []
                }, 
                "oshift_k8s": {
                    "doc_type": "CC_OShiftK8S", 
                    "py_type": "CC_OShiftK8S", 
                    "name": "oshift_k8s", 
                    "required": "False", 
                    "ref_type": "CC_OShiftK8S", 
                    "description": []
                }, 
                "rancher": {
                    "doc_type": "CC_Rancher", 
                    "py_type": "CC_Rancher", 
                    "name": "rancher", 
                    "required": "False", 
                    "ref_type": "CC_Rancher", 
                    "description": []
                }, 
                "init": {
                    "doc_type": "CC_Init", 
                    "py_type": "CC_Init", 
                    "name": "init", 
                    "required": "False", 
                    "ref_type": "CC_Init", 
                    "description": []
                }, 
                "bgworkers": {
                    "doc_type": "CC_BGWorker", 
                    "py_type": "list", 
                    "name": "bgworkers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_BGWorker", 
                    "description": []
                }, 
                "health": {
                    "doc_type": "CC_Health", 
                    "py_type": "CC_Health", 
                    "name": "health", 
                    "required": "False", 
                    "ref_type": "CC_Health", 
                    "description": []
                }, 
                "proxy": {
                    "doc_type": "ProxyConfiguration", 
                    "py_type": "ProxyConfiguration", 
                    "name": "proxy", 
                    "required": "False", 
                    "ref_type": "ProxyConfiguration", 
                    "description": []
                }, 
                "openstack": {
                    "doc_type": "CC_OpenStack", 
                    "py_type": "CC_OpenStack", 
                    "name": "openstack", 
                    "required": "False", 
                    "ref_type": "CC_OpenStack", 
                    "description": []
                }, 
                "images": {
                    "doc_type": "CC_Image", 
                    "py_type": "list", 
                    "name": "images", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_Image", 
                    "description": []
                }, 
                "async": {
                    "doc_type": "CC_Async", 
                    "py_type": "CC_Async", 
                    "name": "async", 
                    "required": "False", 
                    "ref_type": "CC_Async", 
                    "description": []
                }, 
                "vcloudair": {
                    "doc_type": "CC_VCloudAir", 
                    "py_type": "CC_VCloudAir", 
                    "name": "vcloudair", 
                    "required": "False", 
                    "ref_type": "CC_VCloudAir", 
                    "description": []
                }, 
                "ports": {
                    "doc_type": "CC_Ports", 
                    "py_type": "CC_Ports", 
                    "name": "ports", 
                    "required": "False", 
                    "ref_type": "CC_Ports", 
                    "description": []
                }, 
                "discovery": {
                    "doc_type": "CC_Discovery", 
                    "py_type": "CC_Discovery", 
                    "name": "discovery", 
                    "required": "False", 
                    "ref_type": "CC_Discovery", 
                    "description": []
                }
            }
        }, 
        "CloudAZ": {
            "name": "CloudAZ", 
            "properties": {
                "meta": {
                    "doc_type": "CloudMeta", 
                    "py_type": "list", 
                    "name": "meta", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CloudMeta", 
                    "description": []
                }, 
                "hosts": {
                    "doc_type": "CloudHost", 
                    "py_type": "list", 
                    "name": "hosts", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CloudHost", 
                    "description": []
                }
            }
        }, 
        "AWSLogin": {
            "name": "AWSLogin", 
            "properties": {
                "region": {
                    "default_value": "us-west-1", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "region", 
                    "required": "False", 
                    "description": [
                        "Aws region."
                    ]
                }
            }
        }, 
        "CC_VnicInfo": {
            "name": "CC_VnicInfo", 
            "properties": {
                "status": {
                    "default_value": "SYSERR_SUCCESS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "status", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }
            }
        }, 
        "CC_CloudStack": {
            "name": "CC_CloudStack", 
            "properties": {
                "cfg": {
                    "doc_type": "CloudStackConfiguration", 
                    "py_type": "CloudStackConfiguration", 
                    "name": "cfg", 
                    "required": "False", 
                    "ref_type": "CloudStackConfiguration", 
                    "description": []
                }
            }
        }, 
        "OpenstackLogin": {
            "name": "OpenstackLogin", 
            "properties": {
                "admin_tenant": {
                    "default_value": "admin", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "admin_tenant", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "CC_Rancher": {
            "name": "CC_Rancher", 
            "properties": {
                "cfg": {
                    "doc_type": "RancherConfiguration", 
                    "py_type": "RancherConfiguration", 
                    "name": "cfg", 
                    "required": "False", 
                    "ref_type": "RancherConfiguration", 
                    "description": []
                }, 
                "dns_info": {
                    "doc_type": "CC_DnsInfo", 
                    "py_type": "CC_DnsInfo", 
                    "name": "dns_info", 
                    "required": "False", 
                    "ref_type": "CC_DnsInfo", 
                    "description": []
                }, 
                "hosts": {
                    "doc_type": "CC_Host", 
                    "py_type": "list", 
                    "name": "hosts", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_Host", 
                    "description": []
                }, 
                "ipam_info": {
                    "doc_type": "CC_IpamInfo", 
                    "py_type": "CC_IpamInfo", 
                    "name": "ipam_info", 
                    "required": "False", 
                    "ref_type": "CC_IpamInfo", 
                    "description": []
                }, 
                "sshinfo": {
                    "doc_type": "CC_SshInfo", 
                    "py_type": "CC_SshInfo", 
                    "name": "sshinfo", 
                    "required": "False", 
                    "ref_type": "CC_SshInfo", 
                    "description": []
                }
            }
        }, 
        "CC_OpenStack": {
            "name": "CC_OpenStack", 
            "properties": {
                "cfg": {
                    "doc_type": "OpenStackConfiguration", 
                    "py_type": "OpenStackConfiguration", 
                    "name": "cfg", 
                    "required": "False", 
                    "ref_type": "OpenStackConfiguration", 
                    "description": []
                }, 
                "gc_cc": {
                    "doc_type": "CC_Cron", 
                    "py_type": "CC_Cron", 
                    "name": "gc_cc", 
                    "required": "False", 
                    "ref_type": "CC_Cron", 
                    "description": []
                }, 
                "gc_avi": {
                    "doc_type": "CC_Cron", 
                    "py_type": "CC_Cron", 
                    "name": "gc_avi", 
                    "required": "False", 
                    "ref_type": "CC_Cron", 
                    "description": []
                }, 
                "mgmt_nw": {
                    "doc_type": "CC_MgmtNw", 
                    "py_type": "CC_MgmtNw", 
                    "name": "mgmt_nw", 
                    "required": "False", 
                    "ref_type": "CC_MgmtNw", 
                    "description": []
                }, 
                "park_intfs": {
                    "doc_type": "CC_ParkIntf", 
                    "py_type": "list", 
                    "name": "park_intfs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_ParkIntf", 
                    "description": []
                }
            }
        }, 
        "CC_VCloudAir": {
            "name": "CC_VCloudAir", 
            "properties": {
                "cfg": {
                    "doc_type": "vCloudAirConfiguration", 
                    "py_type": "vCloudAirConfiguration", 
                    "name": "cfg", 
                    "required": "False", 
                    "ref_type": "vCloudAirConfiguration", 
                    "description": []
                }
            }
        }, 
        "CC_Docker": {
            "name": "CC_Docker", 
            "properties": {
                "cfg": {
                    "doc_type": "DockerConfiguration", 
                    "py_type": "DockerConfiguration", 
                    "name": "cfg", 
                    "required": "False", 
                    "ref_type": "DockerConfiguration", 
                    "description": []
                }, 
                "dns_info": {
                    "doc_type": "CC_DnsInfo", 
                    "py_type": "CC_DnsInfo", 
                    "name": "dns_info", 
                    "required": "False", 
                    "ref_type": "CC_DnsInfo", 
                    "description": []
                }, 
                "hosts": {
                    "doc_type": "CC_Host", 
                    "py_type": "list", 
                    "name": "hosts", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_Host", 
                    "description": []
                }, 
                "ipam_info": {
                    "doc_type": "CC_IpamInfo", 
                    "py_type": "CC_IpamInfo", 
                    "name": "ipam_info", 
                    "required": "False", 
                    "ref_type": "CC_IpamInfo", 
                    "description": []
                }, 
                "sshinfo": {
                    "doc_type": "CC_SshInfo", 
                    "py_type": "CC_SshInfo", 
                    "name": "sshinfo", 
                    "required": "False", 
                    "ref_type": "CC_SshInfo", 
                    "description": []
                }
            }
        }, 
        "VCALogin": {
            "name": "VCALogin", 
            "properties": {
                "host": {
                    "default_value": "iam.vchs.vmware.com", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "host", 
                    "required": "False", 
                    "description": [
                        "Host address."
                    ]
                }
            }
        }, 
        "CC_LinuxServer": {
            "name": "CC_LinuxServer", 
            "properties": {
                "cfg": {
                    "doc_type": "LinuxServerConfiguration", 
                    "py_type": "LinuxServerConfiguration", 
                    "name": "cfg", 
                    "required": "False", 
                    "ref_type": "LinuxServerConfiguration", 
                    "description": []
                }, 
                "hosts": {
                    "doc_type": "CC_Host", 
                    "py_type": "list", 
                    "name": "hosts", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_Host", 
                    "description": []
                }, 
                "ipam_info": {
                    "doc_type": "CC_IpamInfo", 
                    "py_type": "CC_IpamInfo", 
                    "name": "ipam_info", 
                    "required": "False", 
                    "ref_type": "CC_IpamInfo", 
                    "description": []
                }, 
                "sshinfo": {
                    "doc_type": "CC_SshInfo", 
                    "py_type": "CC_SshInfo", 
                    "name": "sshinfo", 
                    "required": "False", 
                    "ref_type": "CC_SshInfo", 
                    "description": []
                }
            }
        }, 
        "CC_OShiftK8S": {
            "name": "CC_OShiftK8S", 
            "properties": {
                "cfg": {
                    "doc_type": "OShiftK8SConfiguration", 
                    "py_type": "OShiftK8SConfiguration", 
                    "name": "cfg", 
                    "required": "False", 
                    "ref_type": "OShiftK8SConfiguration", 
                    "description": []
                }, 
                "dns_info": {
                    "doc_type": "CC_DnsInfo", 
                    "py_type": "CC_DnsInfo", 
                    "name": "dns_info", 
                    "required": "False", 
                    "ref_type": "CC_DnsInfo", 
                    "description": []
                }, 
                "hosts": {
                    "doc_type": "CC_Host", 
                    "py_type": "list", 
                    "name": "hosts", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_Host", 
                    "description": []
                }, 
                "ipam_info": {
                    "doc_type": "CC_IpamInfo", 
                    "py_type": "CC_IpamInfo", 
                    "name": "ipam_info", 
                    "required": "False", 
                    "ref_type": "CC_IpamInfo", 
                    "description": []
                }, 
                "sshinfo": {
                    "doc_type": "CC_SshInfo", 
                    "py_type": "CC_SshInfo", 
                    "name": "sshinfo", 
                    "required": "False", 
                    "ref_type": "CC_SshInfo", 
                    "description": []
                }
            }
        }, 
        "CloudRegion": {
            "name": "CloudRegion", 
            "properties": {
                "zones": {
                    "doc_type": "CloudAZ", 
                    "py_type": "list", 
                    "name": "zones", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CloudAZ", 
                    "description": []
                }
            }
        }, 
        "CC_BGWorker": {
            "name": "CC_BGWorker", 
            "properties": {
                "tasks": {
                    "doc_type": "CC_BGTask", 
                    "py_type": "list", 
                    "name": "tasks", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_BGTask", 
                    "description": []
                }
            }
        }, 
        "CC_IpamInfo": {
            "name": "CC_IpamInfo", 
            "properties": {
                "park_intfs": {
                    "doc_type": "CC_ParkIntf", 
                    "py_type": "list", 
                    "name": "park_intfs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_ParkIntf", 
                    "description": []
                }
            }
        }, 
        "CC_Mesos": {
            "name": "CC_Mesos", 
            "properties": {
                "cfg": {
                    "doc_type": "MesosConfiguration", 
                    "py_type": "MesosConfiguration", 
                    "name": "cfg", 
                    "required": "False", 
                    "ref_type": "MesosConfiguration", 
                    "description": []
                }, 
                "dns_info": {
                    "doc_type": "CC_DnsInfo", 
                    "py_type": "CC_DnsInfo", 
                    "name": "dns_info", 
                    "required": "False", 
                    "ref_type": "CC_DnsInfo", 
                    "description": []
                }, 
                "hosts": {
                    "doc_type": "CC_Host", 
                    "py_type": "list", 
                    "name": "hosts", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_Host", 
                    "description": []
                }, 
                "ipam_info": {
                    "doc_type": "CC_IpamInfo", 
                    "py_type": "CC_IpamInfo", 
                    "name": "ipam_info", 
                    "required": "False", 
                    "ref_type": "CC_IpamInfo", 
                    "description": []
                }, 
                "sshinfo": {
                    "doc_type": "CC_SshInfo", 
                    "py_type": "CC_SshInfo", 
                    "name": "sshinfo", 
                    "required": "False", 
                    "ref_type": "CC_SshInfo", 
                    "description": []
                }
            }
        }, 
        "CC_Discovery": {
            "name": "CC_Discovery", 
            "properties": {
                "poll": {
                    "doc_type": "CC_Cron", 
                    "py_type": "CC_Cron", 
                    "name": "poll", 
                    "required": "False", 
                    "ref_type": "CC_Cron", 
                    "description": []
                }, 
                "discovery_tenants": {
                    "doc_type": "CC_Tenant", 
                    "py_type": "list", 
                    "name": "discovery_tenants", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_Tenant", 
                    "description": []
                }, 
                "failed_tenants": {
                    "doc_type": "CC_Tenant", 
                    "py_type": "list", 
                    "name": "failed_tenants", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_Tenant", 
                    "description": []
                }, 
                "tracked_tenants": {
                    "doc_type": "CC_Tenant", 
                    "py_type": "list", 
                    "name": "tracked_tenants", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_Tenant", 
                    "description": []
                }
            }
        }, 
        "CC_AWS": {
            "name": "CC_AWS", 
            "properties": {
                "cfg": {
                    "doc_type": "AwsConfiguration", 
                    "py_type": "AwsConfiguration", 
                    "name": "cfg", 
                    "required": "False", 
                    "ref_type": "AwsConfiguration", 
                    "description": []
                }, 
                "mgmt_nws": {
                    "doc_type": "CC_MgmtNw", 
                    "py_type": "list", 
                    "name": "mgmt_nws", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_MgmtNw", 
                    "description": []
                }, 
                "gc_cc": {
                    "doc_type": "CC_Cron", 
                    "py_type": "CC_Cron", 
                    "name": "gc_cc", 
                    "required": "False", 
                    "ref_type": "CC_Cron", 
                    "description": []
                }, 
                "park_intfs": {
                    "doc_type": "CC_ParkIntf", 
                    "py_type": "list", 
                    "name": "park_intfs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_ParkIntf", 
                    "description": []
                }
            }
        }, 
        "MesosLogin": {
            "name": "MesosLogin", 
            "properties": {
                "marathon_logins": {
                    "doc_type": "MarathonLogin", 
                    "py_type": "list", 
                    "name": "marathon_logins", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MarathonLogin", 
                    "description": [
                        "Logins for separate marathon frameworks."
                    ]
                }, 
                "include_mesos_hosts": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "include_mesos_hosts", 
                    "required": "False", 
                    "description": [
                        "Whether to include a list of mesos_hosts in the response."
                    ]
                }
            }
        }, 
        "CC_Health": {
            "name": "CC_Health", 
            "properties": {
                "services": {
                    "doc_type": "CC_Service_Health", 
                    "py_type": "list", 
                    "name": "services", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_Service_Health", 
                    "description": []
                }, 
                "last_fails": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "last_fails", 
                    "required": "False", 
                    "description": []
                }, 
                "num_fails": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_fails", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "CC_Async": {
            "name": "CC_Async", 
            "properties": {
                "tasks": {
                    "doc_type": "CC_AsyncTask", 
                    "py_type": "list", 
                    "name": "tasks", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_AsyncTask", 
                    "description": []
                }
            }
        }
    }, 
    "se_agent_rpc": {
        "SeAgentPing": {
            "name": "SeAgentPing", 
            "properties": {
                "failover": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "failover", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SeAgentRumMessage": {
            "name": "SeAgentRumMessage", 
            "properties": {
                "vserver_rum": {
                    "doc_type": "VserverRum", 
                    "py_type": "VserverRum", 
                    "name": "vserver_rum", 
                    "required": "True", 
                    "ref_type": "VserverRum", 
                    "description": []
                }
            }
        }, 
        "SeAgentVnicRequest": {
            "name": "SeAgentVnicRequest", 
            "properties": {
                "vnic": {
                    "doc_type": "vNIC", 
                    "py_type": "list", 
                    "name": "vnic", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "vNIC", 
                    "description": []
                }, 
                "route": {
                    "doc_type": "SeAgentRoute", 
                    "py_type": "list", 
                    "name": "route", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeAgentRoute", 
                    "description": []
                }, 
                "vrf": {
                    "doc_type": "VrfContext", 
                    "py_type": "list", 
                    "name": "vrf", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VrfContext", 
                    "description": []
                }
            }
        }, 
        "SeAgentTaskRequest": {
            "name": "SeAgentTaskRequest", 
            "properties": {
                "pool_object": {
                    "doc_type": "Pool", 
                    "py_type": "list", 
                    "name": "pool_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Pool", 
                    "description": []
                }, 
                "pkiprofile_object": {
                    "doc_type": "PKIProfile", 
                    "py_type": "list", 
                    "name": "pkiprofile_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "PKIProfile", 
                    "description": []
                }, 
                "prioritylabels_object": {
                    "doc_type": "PriorityLabels", 
                    "py_type": "list", 
                    "name": "prioritylabels_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "PriorityLabels", 
                    "description": []
                }, 
                "analyticsprofile_object": {
                    "doc_type": "AnalyticsProfile", 
                    "py_type": "list", 
                    "name": "analyticsprofile_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "AnalyticsProfile", 
                    "description": []
                }, 
                "serviceenginegroup_object": {
                    "doc_type": "ServiceEngineGroup", 
                    "py_type": "list", 
                    "name": "serviceenginegroup_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServiceEngineGroup", 
                    "description": []
                }, 
                "stringgroup_object": {
                    "doc_type": "StringGroup", 
                    "py_type": "list", 
                    "name": "stringgroup_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "StringGroup", 
                    "description": []
                }, 
                "serverautoscalepolicy_object": {
                    "doc_type": "ServerAutoScalePolicy", 
                    "py_type": "list", 
                    "name": "serverautoscalepolicy_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerAutoScalePolicy", 
                    "description": []
                }, 
                "sslprofile_object": {
                    "doc_type": "SSLProfile", 
                    "py_type": "list", 
                    "name": "sslprofile_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SSLProfile", 
                    "description": []
                }, 
                "serverstateupdateinfo_object": {
                    "doc_type": "ServerStateUpdateInfo", 
                    "py_type": "list", 
                    "name": "serverstateupdateinfo_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerStateUpdateInfo", 
                    "description": []
                }, 
                "gslb_object": {
                    "doc_type": "Gslb", 
                    "py_type": "list", 
                    "name": "gslb_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Gslb", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "networksecuritypolicy_object": {
                    "doc_type": "NetworkSecurityPolicy", 
                    "py_type": "list", 
                    "name": "networksecuritypolicy_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NetworkSecurityPolicy", 
                    "description": []
                }, 
                "vrfcontext_object": {
                    "doc_type": "VrfContext", 
                    "py_type": "list", 
                    "name": "vrfcontext_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VrfContext", 
                    "description": []
                }, 
                "virtualservicese_object": {
                    "doc_type": "VirtualServiceSe", 
                    "py_type": "list", 
                    "name": "virtualservicese_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VirtualServiceSe", 
                    "description": []
                }, 
                "applicationprofile_object": {
                    "doc_type": "ApplicationProfile", 
                    "py_type": "list", 
                    "name": "applicationprofile_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ApplicationProfile", 
                    "description": []
                }, 
                "ipaddrgroup_object": {
                    "doc_type": "IpAddrGroup", 
                    "py_type": "list", 
                    "name": "ipaddrgroup_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrGroup", 
                    "description": []
                }, 
                "vsdatascriptset_object": {
                    "doc_type": "VSDataScriptSet", 
                    "py_type": "list", 
                    "name": "vsdatascriptset_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VSDataScriptSet", 
                    "description": []
                }, 
                "gslbgeodbprofile_object": {
                    "doc_type": "GslbGeoDbProfile", 
                    "py_type": "list", 
                    "name": "gslbgeodbprofile_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbGeoDbProfile", 
                    "description": [
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "cloud_object": {
                    "doc_type": "Cloud", 
                    "py_type": "list", 
                    "name": "cloud_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Cloud", 
                    "description": []
                }, 
                "healthmonitor_object": {
                    "doc_type": "HealthMonitor", 
                    "py_type": "list", 
                    "name": "healthmonitor_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HealthMonitor", 
                    "description": []
                }, 
                "dnspolicy_object": {
                    "doc_type": "DnsPolicy", 
                    "py_type": "list", 
                    "name": "dnspolicy_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsPolicy", 
                    "description": []
                }, 
                "seheadlessonlinereq_object": {
                    "doc_type": "SeHeadlessOnlineReq", 
                    "py_type": "list", 
                    "name": "seheadlessonlinereq_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeHeadlessOnlineReq", 
                    "description": []
                }, 
                "seproperties_object": {
                    "doc_type": "SeProperties", 
                    "py_type": "list", 
                    "name": "seproperties_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeProperties", 
                    "description": []
                }, 
                "tenant_object": {
                    "doc_type": "Tenant", 
                    "py_type": "list", 
                    "name": "tenant_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Tenant", 
                    "description": []
                }, 
                "hardwaresecuritymodulegroup_object": {
                    "doc_type": "HardwareSecurityModuleGroup", 
                    "py_type": "list", 
                    "name": "hardwaresecuritymodulegroup_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HardwareSecurityModuleGroup", 
                    "description": []
                }, 
                "sslkeyandcertificate_object": {
                    "doc_type": "SSLKeyAndCertificate", 
                    "py_type": "list", 
                    "name": "sslkeyandcertificate_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SSLKeyAndCertificate", 
                    "description": []
                }, 
                "networkprofile_object": {
                    "doc_type": "NetworkProfile", 
                    "py_type": "list", 
                    "name": "networkprofile_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NetworkProfile", 
                    "description": []
                }, 
                "serverupdatereq_object": {
                    "doc_type": "ServerUpdateReq", 
                    "py_type": "list", 
                    "name": "serverupdatereq_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerUpdateReq", 
                    "description": []
                }, 
                "autoscalelaunchconfig_object": {
                    "doc_type": "AutoScaleLaunchConfig", 
                    "py_type": "list", 
                    "name": "autoscalelaunchconfig_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "AutoScaleLaunchConfig", 
                    "description": []
                }, 
                "setrolesrequest_object": {
                    "doc_type": "SetRolesRequest", 
                    "py_type": "list", 
                    "name": "setrolesrequest_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SetRolesRequest", 
                    "description": []
                }, 
                "debugserviceengine_object": {
                    "doc_type": "DebugServiceEngine", 
                    "py_type": "list", 
                    "name": "debugserviceengine_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DebugServiceEngine", 
                    "description": []
                }, 
                "microservicegroup_object": {
                    "doc_type": "MicroServiceGroup", 
                    "py_type": "list", 
                    "name": "microservicegroup_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MicroServiceGroup", 
                    "description": []
                }, 
                "poolgroup_object": {
                    "doc_type": "PoolGroup", 
                    "py_type": "list", 
                    "name": "poolgroup_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "PoolGroup", 
                    "description": []
                }, 
                "seagentvnicrequest_object": {
                    "doc_type": "SeAgentVnicRequest", 
                    "py_type": "list", 
                    "name": "seagentvnicrequest_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeAgentVnicRequest", 
                    "description": []
                }, 
                "gslbserviceruntime_object": {
                    "doc_type": "GslbServiceRuntime", 
                    "py_type": "list", 
                    "name": "gslbserviceruntime_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbServiceRuntime", 
                    "description": []
                }, 
                "httppolicyset_object": {
                    "doc_type": "HTTPPolicySet", 
                    "py_type": "list", 
                    "name": "httppolicyset_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HTTPPolicySet", 
                    "description": []
                }, 
                "gslbservice_object": {
                    "doc_type": "GslbService", 
                    "py_type": "list", 
                    "name": "gslbservice_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "GslbService", 
                    "description": []
                }, 
                "trafficcloneprofile_object": {
                    "doc_type": "TrafficCloneProfile", 
                    "py_type": "list", 
                    "name": "trafficcloneprofile_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "TrafficCloneProfile", 
                    "description": []
                }, 
                "authprofile_object": {
                    "doc_type": "AuthProfile", 
                    "py_type": "list", 
                    "name": "authprofile_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "AuthProfile", 
                    "description": []
                }, 
                "applicationpersistenceprofile_object": {
                    "doc_type": "ApplicationPersistenceProfile", 
                    "py_type": "list", 
                    "name": "applicationpersistenceprofile_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ApplicationPersistenceProfile", 
                    "description": []
                }, 
                "microservice_object": {
                    "doc_type": "MicroService", 
                    "py_type": "list", 
                    "name": "microservice_object", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MicroService", 
                    "description": []
                }
            }
        }, 
        "SetRolesRequest": {
            "name": "SetRolesRequest", 
            "properties": {
                "active_se_2": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "active_se_2", 
                    "required": "False", 
                    "description": []
                }, 
                "active_se_1": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "active_se_1", 
                    "required": "False", 
                    "description": []
                }
            }
        }
    }, 
    "dos": {
        "DosAttackEventDetails": {
            "name": "DosAttackEventDetails", 
            "properties": {
                "meta_data": {
                    "doc_type": "AttackMetaData", 
                    "py_type": "list", 
                    "name": "meta_data", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "AttackMetaData", 
                    "description": []
                }
            }
        }, 
        "DosMetrics": {
            "name": "DosMetrics", 
            "properties": {
                "attacker_info": {
                    "doc_type": "MaliciousIpInfo", 
                    "py_type": "list", 
                    "name": "attacker_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MaliciousIpInfo", 
                    "description": []
                }
            }
        }, 
        "DosThresholdProfile": {
            "name": "DosThresholdProfile", 
            "properties": {
                "thresh_period": {
                    "default_value": 5, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "thresh_period", 
                    "required": "True", 
                    "description": [
                        "Timer value in seconds to collect dos attack metrics based on threshold on the service engine for this virtual service."
                    ]
                }, 
                "thresh_info": {
                    "doc_type": "DosThreshold", 
                    "py_type": "list", 
                    "name": "thresh_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DosThreshold", 
                    "description": [
                        "Attack type, min and max values for dos attack detection."
                    ]
                }
            }
        }, 
        "MaliciousIpInfo": {
            "name": "MaliciousIpInfo", 
            "properties": {
                "dos_dimension": {
                    "default_value": "DOS_IP", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "dos_dimension", 
                    "required": "False", 
                    "option_values": [
                        "DOS_IP", 
                        "DOS_URI", 
                        "DOS_IP_URI", 
                        "DOS_HIGH_RESP_TIME", 
                        "DOS_HDR"
                    ], 
                    "description": [
                        "Enum options - DOS_IP, DOS_URI, DOS_IP_URI, DOS_HIGH_RESP_TIME, DOS_HDR."
                    ]
                }, 
                "meta_data": {
                    "doc_type": "AttackMetaData", 
                    "py_type": "AttackMetaData", 
                    "name": "meta_data", 
                    "required": "False", 
                    "ref_type": "AttackMetaData", 
                    "description": []
                }
            }
        }
    }, 
    "vi_mgr_common": {
        "VcenterHostDiag": {
            "name": "VcenterHostDiag", 
            "properties": {
                "cntlr_accessible": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "cntlr_accessible", 
                    "required": "False", 
                    "description": [
                        "Esx host accessible from avi controller."
                    ]
                }, 
                "maintenance_mode": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "maintenance_mode", 
                    "required": "False", 
                    "description": [
                        "Esx host maintenance mode."
                    ]
                }, 
                "connection_state": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "connection_state", 
                    "required": "False", 
                    "description": [
                        "Esx host connection to vcenter."
                    ]
                }, 
                "powerstate_up": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "powerstate_up", 
                    "required": "False", 
                    "description": [
                        "Esx host power state."
                    ]
                }, 
                "quarantined": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "quarantined", 
                    "required": "False", 
                    "description": [
                        "Esx host quarantined from service engine placements."
                    ]
                }
            }
        }, 
        "VIHostResources": {
            "name": "VIHostResources", 
            "properties": {
                "hosts": {
                    "doc_type": "HostResourceInfo", 
                    "py_type": "list", 
                    "name": "hosts", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HostResourceInfo", 
                    "description": []
                }
            }
        }, 
        "OverlappingSubnetInfo": {
            "name": "OverlappingSubnetInfo", 
            "properties": {
                "network_subnets": {
                    "doc_type": "OverlappingSubnetPair", 
                    "py_type": "list", 
                    "name": "network_subnets", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "OverlappingSubnetPair", 
                    "description": []
                }
            }
        }, 
        "RetrieveVcenterSubfoldersRsp": {
            "name": "RetrieveVcenterSubfoldersRsp", 
            "properties": {
                "folder_info": {
                    "doc_type": "VISubfolders", 
                    "py_type": "VISubfolders", 
                    "name": "folder_info", 
                    "required": "False", 
                    "ref_type": "VISubfolders", 
                    "description": []
                }
            }
        }, 
        "VcenterNetworkDiag": {
            "name": "VcenterNetworkDiag", 
            "properties": {
                "mgmt_nw_diag": {
                    "doc_type": "VcenterMgmtNwDiag", 
                    "py_type": "VcenterMgmtNwDiag", 
                    "name": "mgmt_nw_diag", 
                    "required": "False", 
                    "ref_type": "VcenterMgmtNwDiag", 
                    "description": []
                }, 
                "overlapping_subnets": {
                    "doc_type": "OverlappingSubnetInfo", 
                    "py_type": "list", 
                    "name": "overlapping_subnets", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "OverlappingSubnetInfo", 
                    "description": []
                }
            }
        }, 
        "EntityCounters": {
            "name": "EntityCounters", 
            "properties": {
                "supported": {
                    "doc_type": "VmwarePerfMetricId", 
                    "py_type": "list", 
                    "name": "supported", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VmwarePerfMetricId", 
                    "description": []
                }, 
                "interested": {
                    "doc_type": "VmwarePerfMetricId", 
                    "py_type": "list", 
                    "name": "interested", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VmwarePerfMetricId", 
                    "description": []
                }, 
                "counters": {
                    "doc_type": "VcenterPerfCounter", 
                    "py_type": "list", 
                    "name": "counters", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VcenterPerfCounter", 
                    "description": []
                }
            }
        }, 
        "QueryHostsCapabilityReq": {
            "name": "QueryHostsCapabilityReq", 
            "properties": {
                "admin": {
                    "doc_type": "VIAdminCredentials", 
                    "py_type": "VIAdminCredentials", 
                    "name": "admin", 
                    "required": "True", 
                    "ref_type": "VIAdminCredentials", 
                    "description": []
                }, 
                "host_list": {
                    "doc_type": "HostInfo", 
                    "py_type": "list", 
                    "name": "host_list", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HostInfo", 
                    "description": []
                }, 
                "vcenter_ds_info": {
                    "doc_type": "VcenterDatastore", 
                    "py_type": "list", 
                    "name": "vcenter_ds_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VcenterDatastore", 
                    "description": []
                }, 
                "ignore_vcenter_query": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "ignore_vcenter_query", 
                    "required": "False", 
                    "description": []
                }, 
                "async": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "async", 
                    "required": "False", 
                    "description": []
                }, 
                "vcenter_se_disk_size_KB": {
                    "default_value": 10485760, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vcenter_se_disk_size_KB", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SEVMCreateProgress": {
            "name": "SEVMCreateProgress", 
            "properties": {
                "sevms": {
                    "doc_type": "SEVMCreateProgressSingle", 
                    "py_type": "list", 
                    "name": "sevms", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SEVMCreateProgressSingle", 
                    "description": []
                }
            }
        }, 
        "VcenterSupportedCounters": {
            "name": "VcenterSupportedCounters", 
            "properties": {
                "counters": {
                    "doc_type": "VmwarePerfCounterInfo", 
                    "py_type": "list", 
                    "name": "counters", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VmwarePerfCounterInfo", 
                    "description": []
                }
            }
        }, 
        "QueryHostsCapabilityRsp": {
            "name": "QueryHostsCapabilityRsp", 
            "properties": {
                "host_list": {
                    "doc_type": "HostInfo", 
                    "py_type": "list", 
                    "name": "host_list", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HostInfo", 
                    "description": []
                }
            }
        }, 
        "VIDatastore": {
            "name": "VIDatastore", 
            "properties": {
                "datastores": {
                    "doc_type": "DatastoreInfo", 
                    "py_type": "list", 
                    "name": "datastores", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DatastoreInfo", 
                    "description": []
                }
            }
        }, 
        "VISetMgmtIpSEReq": {
            "name": "VISetMgmtIpSEReq", 
            "properties": {
                "admin": {
                    "doc_type": "VIAdminCredentials", 
                    "py_type": "VIAdminCredentials", 
                    "name": "admin", 
                    "required": "False", 
                    "ref_type": "VIAdminCredentials", 
                    "description": []
                }, 
                "ip_params": {
                    "doc_type": "VISeVmIpConfParams", 
                    "py_type": "VISeVmIpConfParams", 
                    "name": "ip_params", 
                    "required": "True", 
                    "ref_type": "VISeVmIpConfParams", 
                    "description": []
                }, 
                "all_vnic_connected": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "all_vnic_connected", 
                    "required": "False", 
                    "description": []
                }, 
                "power_on": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "power_on", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VIAdminCredentials": {
            "name": "VIAdminCredentials", 
            "properties": {
                "name": {
                    "default_value": "root", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "name", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VIValidateVcenterReq": {
            "name": "VIValidateVcenterReq", 
            "properties": {
                "admin": {
                    "doc_type": "VIAdminCredentials", 
                    "py_type": "VIAdminCredentials", 
                    "name": "admin", 
                    "required": "True", 
                    "ref_type": "VIAdminCredentials", 
                    "description": []
                }
            }
        }, 
        "NetworkManagerDiagReq": {
            "name": "NetworkManagerDiagReq", 
            "properties": {
                "summary": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "summary", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VIPGInfo": {
            "name": "VIPGInfo", 
            "properties": {
                "vlan_id_range": {
                    "doc_type": "VlanRange", 
                    "py_type": "list", 
                    "name": "vlan_id_range", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VlanRange", 
                    "description": []
                }
            }
        }, 
        "VIControllerVnicInfo": {
            "name": "VIControllerVnicInfo", 
            "properties": {
                "vnic_ip": {
                    "doc_type": "VIGuestvNicIPAddr", 
                    "py_type": "list", 
                    "name": "vnic_ip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIGuestvNicIPAddr", 
                    "description": []
                }
            }
        }, 
        "VIPerformanceMonitorInfo": {
            "name": "VIPerformanceMonitorInfo", 
            "properties": {
                "admin": {
                    "doc_type": "VIAdminCredentials", 
                    "py_type": "VIAdminCredentials", 
                    "name": "admin", 
                    "required": "True", 
                    "ref_type": "VIAdminCredentials", 
                    "description": []
                }
            }
        }, 
        "OverlappingSubnetPair": {
            "name": "OverlappingSubnetPair", 
            "properties": {
                "subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }
            }
        }, 
        "VISubfolders": {
            "name": "VISubfolders", 
            "properties": {
                "subfolders": {
                    "doc_type": "SubfolderInfo", 
                    "py_type": "list", 
                    "name": "subfolders", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SubfolderInfo", 
                    "description": []
                }
            }
        }, 
        "NetworkManagerDiagRsp": {
            "name": "NetworkManagerDiagRsp", 
            "properties": {
                "networks": {
                    "doc_type": "VcenterNetworkDiag", 
                    "py_type": "VcenterNetworkDiag", 
                    "name": "networks", 
                    "required": "False", 
                    "ref_type": "VcenterNetworkDiag", 
                    "description": []
                }, 
                "success": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "success", 
                    "required": "False", 
                    "description": []
                }, 
                "summary": {
                    "default_value": "Success", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "summary", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VIValidateVcenterRsp": {
            "name": "VIValidateVcenterRsp", 
            "properties": {
                "datacenters": {
                    "doc_type": "VIDCInfo", 
                    "py_type": "list", 
                    "name": "datacenters", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIDCInfo", 
                    "description": []
                }, 
                "ctrl_vnics": {
                    "doc_type": "VIControllerVnicInfo", 
                    "py_type": "list", 
                    "name": "ctrl_vnics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIControllerVnicInfo", 
                    "description": []
                }
            }
        }, 
        "VcenterLoginRsp": {
            "name": "VcenterLoginRsp", 
            "properties": {
                "datacenters": {
                    "doc_type": "VIDCInfo", 
                    "py_type": "list", 
                    "name": "datacenters", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIDCInfo", 
                    "description": []
                }, 
                "login": {
                    "doc_type": "VcenterLogin", 
                    "py_type": "VcenterLogin", 
                    "name": "login", 
                    "required": "True", 
                    "ref_type": "VcenterLogin", 
                    "description": []
                }
            }
        }, 
        "VcenterInventoryDiagRsp": {
            "name": "VcenterInventoryDiagRsp", 
            "properties": {
                "hosts": {
                    "doc_type": "VcenterHostDiag", 
                    "py_type": "list", 
                    "name": "hosts", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VcenterHostDiag", 
                    "description": []
                }, 
                "networks": {
                    "doc_type": "VcenterNetworkDiag", 
                    "py_type": "VcenterNetworkDiag", 
                    "name": "networks", 
                    "required": "False", 
                    "ref_type": "VcenterNetworkDiag", 
                    "description": []
                }
            }
        }, 
        "RetrieveVcenterDatastoreReq": {
            "name": "RetrieveVcenterDatastoreReq", 
            "properties": {
                "admin": {
                    "doc_type": "VIAdminCredentials", 
                    "py_type": "VIAdminCredentials", 
                    "name": "admin", 
                    "required": "False", 
                    "ref_type": "VIAdminCredentials", 
                    "description": []
                }
            }
        }, 
        "VISetvNicNwReq": {
            "name": "VISetvNicNwReq", 
            "properties": {
                "vcenter_admin": {
                    "doc_type": "VIAdminCredentials", 
                    "py_type": "VIAdminCredentials", 
                    "name": "vcenter_admin", 
                    "required": "False", 
                    "ref_type": "VIAdminCredentials", 
                    "description": []
                }, 
                "vcenter_vnic_info": {
                    "doc_type": "VIVmVnicInfo", 
                    "py_type": "list", 
                    "name": "vcenter_vnic_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VIVmVnicInfo", 
                    "description": []
                }
            }
        }, 
        "VINetworkSubnetVMs": {
            "name": "VINetworkSubnetVMs", 
            "properties": {
                "vms": {
                    "doc_type": "NetworkSubnetVM", 
                    "py_type": "list", 
                    "name": "vms", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NetworkSubnetVM", 
                    "description": []
                }
            }
        }, 
        "RetrieveVcenterDatastoreRsp": {
            "name": "RetrieveVcenterDatastoreRsp", 
            "properties": {
                "ds_info": {
                    "doc_type": "VIDatastore", 
                    "py_type": "VIDatastore", 
                    "name": "ds_info", 
                    "required": "False", 
                    "ref_type": "VIDatastore", 
                    "description": []
                }
            }
        }, 
        "HostInfo": {
            "name": "HostInfo", 
            "properties": {
                "num_se_possible": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_se_possible", 
                    "required": "False", 
                    "description": []
                }, 
                "mem_ok": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "mem_ok", 
                    "required": "False", 
                    "description": []
                }, 
                "se_mgmt_ok": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "se_mgmt_ok", 
                    "required": "False", 
                    "description": []
                }, 
                "cpu_ok": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "cpu_ok", 
                    "required": "False", 
                    "description": []
                }, 
                "disk_ok": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disk_ok", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VcenterMgmtNwDiag": {
            "name": "VcenterMgmtNwDiag", 
            "properties": {
                "is_static": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_static", 
                    "required": "False", 
                    "description": [
                        "Static/dhcp mode for vcenter management network."
                    ]
                }, 
                "static_ip_pool_exhausted": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "static_ip_pool_exhausted", 
                    "required": "False", 
                    "description": [
                        "Static ip pool configuration exhausted for management network."
                    ]
                }, 
                "static_no_ip_pool": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "static_no_ip_pool", 
                    "required": "False", 
                    "description": [
                        "Static ip configuration for management network."
                    ]
                }, 
                "static_subnet_not_present": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "static_subnet_not_present", 
                    "required": "False", 
                    "description": [
                        "Ip subnet for management network not provided."
                    ]
                }
            }
        }, 
        "vCenterNumJavaThreads": {
            "name": "vCenterNumJavaThreads", 
            "properties": {
                "num_threads": {
                    "default_value": 8, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_threads", 
                    "required": "True", 
                    "description": []
                }
            }
        }, 
        "VISeVmOvaParams": {
            "name": "VISeVmOvaParams", 
            "properties": {
                "vcenter_num_mem": {
                    "default_value": 2048, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vcenter_num_mem", 
                    "required": "False", 
                    "description": []
                }, 
                "vcenter_internal": {
                    "default_value": "UNIFIED ADMIN", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "vcenter_internal", 
                    "required": "False", 
                    "description": []
                }, 
                "vcenter_ds_info": {
                    "doc_type": "VcenterDatastore", 
                    "py_type": "list", 
                    "name": "vcenter_ds_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VcenterDatastore", 
                    "description": []
                }, 
                "vcenter_num_se_cores": {
                    "default_value": 2, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vcenter_num_se_cores", 
                    "required": "False", 
                    "description": []
                }, 
                "vcenter_mem_reserv": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "vcenter_mem_reserv", 
                    "required": "False", 
                    "description": []
                }, 
                "vcenter_cpu_reserv": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "vcenter_cpu_reserv", 
                    "required": "False", 
                    "description": []
                }, 
                "vcenter_se_disk_size_KB": {
                    "default_value": 10485760, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vcenter_se_disk_size_KB", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VIFaultInjection": {
            "name": "VIFaultInjection", 
            "properties": {
                "status": {
                    "default_value": "SEVM_CREATE_FAILURE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "status", 
                    "required": "False", 
                    "option_values": [
                        "SEVM_SUCCESS", 
                        "SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SEVM_CREATE_FAIL_NO_CPU", 
                        "SEVM_CREATE_FAIL_NO_MEM", 
                        "SEVM_CREATE_FAIL_NO_LEASE", 
                        "SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SEVM_CREATE_FAIL_ABORTED", 
                        "SEVM_CREATE_FAILURE", 
                        "SEVM_CREATE_FAIL_POWER_ON", 
                        "SEVM_VNIC_NO_VM", 
                        "SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SEVM_VNIC_FAILURE", 
                        "SEVM_VNIC_NO_PG_PORTS", 
                        "SEVM_DELETE_FAILURE", 
                        "SEVM_CREATE_LIMIT_REACHED", 
                        "SEVM_SET_MGMT_IP_FAILED", 
                        "SEVM_CREATE_ACCESS_ERROR", 
                        "SEVM_CREATE_NO_IMAGE", 
                        "SEVM_VINFRA_UNINITIALIZED", 
                        "SEVM_CREATE_NO_HOST", 
                        "SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SEVM_INVALID_DATA", 
                        "SEVM_VCENTER_CONN_FAIL", 
                        "SEVM_TIMED_OUT", 
                        "SEVM_NO_SOURCE_CLONE", 
                        "SEVM_NO_AVAILABILITY_ZONE", 
                        "SEVM_FLAVOR_UNAVAIL", 
                        "SEVM_DELETED", 
                        "SEVM_VINFRA_FAILURE", 
                        "SEVM_VNIC_FAILURE_QUESTION", 
                        "SEVM_VNIC_NO_IPS_AVAILABLE", 
                        "SEVM_NO_MGMT_IP_AVAILABLE"
                    ], 
                    "description": [
                        "Enum options - SEVM_SUCCESS, SEVM_CREATE_FAIL_NO_HW_INFO, SEVM_CREATE_FAIL_DUPLICATE_NAME, SEVM_CREATE_FAIL_NO_MGMT_NW, SEVM_CREATE_FAIL_NO_CPU,", 
                        "SEVM_CREATE_FAIL_NO_MEM, SEVM_CREATE_FAIL_NO_LEASE, SEVM_CREATE_FAIL_OVF_ERROR, SEVM_CREATE_NO_HOST_VM_NETWORK, SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SEVM_CREATE_FAIL_ABORTED, SEVM_CREATE_FAILURE, SEVM_CREATE_FAIL_POWER_ON, SEVM_VNIC_NO_VM, SEVM_VNIC_MAC_ADDR_ERROR, SEVM_VNIC_FAILURE,", 
                        "SEVM_VNIC_NO_PG_PORTS, SEVM_DELETE_FAILURE, SEVM_CREATE_LIMIT_REACHED, SEVM_SET_MGMT_IP_FAILED, SEVM_CREATE_ACCESS_ERROR, SEVM_CREATE_NO_IMAGE,", 
                        "SEVM_VINFRA_UNINITIALIZED, SEVM_CREATE_NO_HOST, SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SEVM_INVALID_DATA, SEVM_VCENTER_CONN_FAIL, SEVM_TIMED_OUT,", 
                        "SEVM_NO_SOURCE_CLONE, SEVM_NO_AVAILABILITY_ZONE, SEVM_FLAVOR_UNAVAIL, SEVM_DELETED, SEVM_VINFRA_FAILURE, SEVM_VNIC_FAILURE_QUESTION,", 
                        "SEVM_VNIC_NO_IPS_AVAILABLE, SEVM_NO_MGMT_IP_AVAILABLE."
                    ]
                }
            }
        }, 
        "VIMgrIPSubnetRuntime": {
            "name": "VIMgrIPSubnetRuntime", 
            "properties": {
                "fip_available": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "fip_available", 
                    "required": "False", 
                    "description": [
                        "Indicates floating/elastic ip association possibility."
                    ]
                }, 
                "prefix": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "prefix", 
                    "required": "True", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }, 
                "se_ref_count": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "se_ref_count", 
                    "required": "False", 
                    "description": []
                }, 
                "primary": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "primary", 
                    "required": "False", 
                    "description": [
                        "True if prefix is primary ip on interface, else false."
                    ]
                }
            }
        }, 
        "VcenterMap": {
            "name": "VcenterMap", 
            "properties": {
                "datacenters": {
                    "doc_type": "DatacenterMap", 
                    "py_type": "list", 
                    "name": "datacenters", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DatacenterMap", 
                    "description": []
                }
            }
        }, 
        "VIControllerIpSubnetInfo": {
            "name": "VIControllerIpSubnetInfo", 
            "properties": {
                "ip_subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "ip_subnet", 
                    "required": "True", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }
            }
        }, 
        "RetrieveVcenterSubfoldersReq": {
            "name": "RetrieveVcenterSubfoldersReq", 
            "properties": {
                "admin": {
                    "doc_type": "VIAdminCredentials", 
                    "py_type": "VIAdminCredentials", 
                    "name": "admin", 
                    "required": "False", 
                    "ref_type": "VIAdminCredentials", 
                    "description": []
                }
            }
        }, 
        "VIHostInfo": {
            "name": "VIHostInfo", 
            "properties": {
                "pnics": {
                    "doc_type": "CdpLldpInfo", 
                    "py_type": "list", 
                    "name": "pnics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CdpLldpInfo", 
                    "description": []
                }
            }
        }
    }, 
    "pool": {
        "PoolGroup": {
            "name": "PoolGroup", 
            "properties": {
                "fail_action": {
                    "doc_type": "FailAction", 
                    "py_type": "FailAction", 
                    "name": "fail_action", 
                    "required": "False", 
                    "ref_type": "FailAction", 
                    "description": [
                        "Enable an action - close connection, http redirect, or local http response - when a pool group failure happens.", 
                        "By default, a connection will be closed, in case the pool group experiences a failure."
                    ]
                }, 
                "min_servers": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "min_servers", 
                    "required": "False", 
                    "range": "1-65535", 
                    "special_values": [
                        "'Disable'"
                    ], 
                    "description": [
                        "The minimum number of servers to distribute traffic to.", 
                        "Allowed values are 1-65535.", 
                        "Special values are 0 - 'disable'."
                    ]
                }, 
                "members": {
                    "doc_type": "PoolGroupMember", 
                    "py_type": "list", 
                    "name": "members", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "PoolGroupMember", 
                    "description": [
                        "List of pool group members object of type poolgroupmember."
                    ]
                }
            }
        }, 
        "PoolGroupMember": {
            "name": "PoolGroupMember", 
            "properties": {
                "ratio": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ratio", 
                    "required": "False", 
                    "range": "1-1000", 
                    "special_values": [
                        "'Do not select this pool for new connections'"
                    ], 
                    "description": [
                        "Ratio of selecting eligible pools in the pool group.", 
                        "Allowed values are 1-1000.", 
                        "Special values are 0 - 'do not select this pool for new connections'."
                    ]
                }
            }
        }, 
        "PoolDeploymentSuccessInfo": {
            "name": "PoolDeploymentSuccessInfo", 
            "properties": {
                "results": {
                    "doc_type": "PGDeploymentRuleResult", 
                    "py_type": "list", 
                    "name": "results", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "PGDeploymentRuleResult", 
                    "description": [
                        "List of results for each deployment rule."
                    ]
                }
            }
        }, 
        "PlacementNetwork": {
            "name": "PlacementNetwork", 
            "properties": {
                "subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }
            }
        }, 
        "FailAction": {
            "name": "FailAction", 
            "properties": {
                "redirect": {
                    "doc_type": "FailActionHTTPRedirect", 
                    "py_type": "FailActionHTTPRedirect", 
                    "name": "redirect", 
                    "required": "False", 
                    "ref_type": "FailActionHTTPRedirect", 
                    "description": [
                        "Url to redirect http requests to when pool experiences a failure."
                    ]
                }, 
                "backup_pool": {
                    "doc_type": "FailActionBackupPool", 
                    "py_type": "FailActionBackupPool", 
                    "name": "backup_pool", 
                    "required": "False", 
                    "ref_type": "FailActionBackupPool", 
                    "description": [
                        "Backup pool when pool experiences a failure."
                    ]
                }, 
                "local_rsp": {
                    "doc_type": "FailActionHTTPLocalResponse", 
                    "py_type": "FailActionHTTPLocalResponse", 
                    "name": "local_rsp", 
                    "required": "False", 
                    "ref_type": "FailActionHTTPLocalResponse", 
                    "description": [
                        "Local response to http requests when pool experiences a failure."
                    ]
                }, 
                "type": {
                    "default_value": "FAIL_ACTION_CLOSE_CONN", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "type", 
                    "required": "True", 
                    "option_values": [
                        "FAIL_ACTION_HTTP_REDIRECT", 
                        "FAIL_ACTION_HTTP_LOCAL_RSP", 
                        "FAIL_ACTION_CLOSE_CONN", 
                        "FAIL_ACTION_BACKUP_POOL"
                    ], 
                    "description": [
                        "Enables a response to client when pool experiences a failure.", 
                        "By default tcp connection is closed.", 
                        "Enum options - FAIL_ACTION_HTTP_REDIRECT, FAIL_ACTION_HTTP_LOCAL_RSP, FAIL_ACTION_CLOSE_CONN, FAIL_ACTION_BACKUP_POOL."
                    ]
                }
            }
        }, 
        "HTTPServerReselect": {
            "name": "HTTPServerReselect", 
            "properties": {
                "retry_nonidempotent": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "retry_nonidempotent", 
                    "required": "False", 
                    "description": [
                        "Allow retry of non-idempotent http requests."
                    ]
                }, 
                "svr_resp_code": {
                    "doc_type": "HTTPReselectRespCode", 
                    "py_type": "HTTPReselectRespCode", 
                    "name": "svr_resp_code", 
                    "required": "False", 
                    "ref_type": "HTTPReselectRespCode", 
                    "description": [
                        "Server response codes which will trigger an http request retry."
                    ]
                }, 
                "num_retries": {
                    "default_value": 4, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_retries", 
                    "required": "False", 
                    "description": [
                        "Number of times to retry an http request when server responds with configured status codes."
                    ]
                }, 
                "enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enabled", 
                    "required": "True", 
                    "description": [
                        "Enable http request reselect when server responds with specific response codes."
                    ]
                }
            }
        }, 
        "PriorityLabels": {
            "name": "PriorityLabels", 
            "properties": {
                "equivalent_labels": {
                    "doc_type": "EquivalentLabels", 
                    "py_type": "list", 
                    "name": "equivalent_labels", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "EquivalentLabels", 
                    "description": [
                        "Equivalent priority labels in descending order."
                    ]
                }
            }
        }, 
        "PoolGroupDeploymentPolicy": {
            "name": "PoolGroupDeploymentPolicy", 
            "properties": {
                "target_test_traffic_ratio": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "target_test_traffic_ratio", 
                    "required": "False", 
                    "range": "1-100", 
                    "description": [
                        "Target traffic ratio before pool is made production.", 
                        "Allowed values are 1-100."
                    ]
                }, 
                "evaluation_duration": {
                    "default_value": 300, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "evaluation_duration", 
                    "required": "False", 
                    "range": "60-86400", 
                    "description": [
                        "Duration of evaluation period for automatic deployment.", 
                        "Allowed values are 60-86400."
                    ]
                }, 
                "test_traffic_ratio_rampup": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "test_traffic_ratio_rampup", 
                    "required": "False", 
                    "range": "1-100", 
                    "description": [
                        "Ratio of the traffic that is sent to the pool under test.", 
                        "Test ratio of 100 means blue green.", 
                        "Allowed values are 1-100."
                    ]
                }, 
                "rules": {
                    "doc_type": "PGDeploymentRule", 
                    "py_type": "list", 
                    "name": "rules", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "PGDeploymentRule", 
                    "description": []
                }, 
                "auto_disable_old_prod_pools": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "auto_disable_old_prod_pools", 
                    "required": "False", 
                    "description": [
                        "It will automatically disable old production pools once there is a new production candidate."
                    ]
                }, 
                "scheme": {
                    "default_value": "BLUE_GREEN", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "scheme", 
                    "required": "False", 
                    "option_values": [
                        "BLUE_GREEN", 
                        "CANARY"
                    ], 
                    "description": [
                        "Deployment scheme.", 
                        "Enum options - BLUE_GREEN, CANARY."
                    ]
                }
            }
        }, 
        "PGDeploymentRuleResult": {
            "name": "PGDeploymentRuleResult", 
            "properties": {
                "rule": {
                    "doc_type": "PGDeploymentRule", 
                    "py_type": "PGDeploymentRule", 
                    "name": "rule", 
                    "required": "True", 
                    "ref_type": "PGDeploymentRule", 
                    "description": [
                        "Rule used for evaluation."
                    ]
                }
            }
        }, 
        "Pool": {
            "name": "Pool", 
            "properties": {
                "lb_algorithm": {
                    "default_value": "LB_ALGORITHM_LEAST_CONNECTIONS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "lb_algorithm", 
                    "required": "False", 
                    "option_values": [
                        "LB_ALGORITHM_LEAST_CONNECTIONS", 
                        "LB_ALGORITHM_ROUND_ROBIN", 
                        "LB_ALGORITHM_FASTEST_RESPONSE", 
                        "LB_ALGORITHM_CONSISTENT_HASH", 
                        "LB_ALGORITHM_LEAST_LOAD", 
                        "LB_ALGORITHM_FEWEST_SERVERS", 
                        "LB_ALGORITHM_RANDOM", 
                        "LB_ALGORITHM_FEWEST_TASKS", 
                        "LB_ALGORITHM_NEAREST_SERVER", 
                        "LB_ALGORITHM_CORE_AFFINITY"
                    ], 
                    "description": [
                        "The load balancing algorithm will pick a server within the pool's list of available servers.", 
                        "Enum options - LB_ALGORITHM_LEAST_CONNECTIONS, LB_ALGORITHM_ROUND_ROBIN, LB_ALGORITHM_FASTEST_RESPONSE, LB_ALGORITHM_CONSISTENT_HASH,", 
                        "LB_ALGORITHM_LEAST_LOAD, LB_ALGORITHM_FEWEST_SERVERS, LB_ALGORITHM_RANDOM, LB_ALGORITHM_FEWEST_TASKS, LB_ALGORITHM_NEAREST_SERVER,", 
                        "LB_ALGORITHM_CORE_AFFINITY."
                    ]
                }, 
                "use_service_port": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_service_port", 
                    "required": "False", 
                    "description": [
                        "Do not translate the client's destination port when sending the connection to the server.", 
                        "The pool or servers specified service port will still be used for health monitoring."
                    ]
                }, 
                "server_auto_scale": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "server_auto_scale", 
                    "required": "False", 
                    "description": [
                        "Server autoscale.", 
                        "Not used anymore."
                    ]
                }, 
                "host_check_enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "host_check_enabled", 
                    "required": "False", 
                    "description": [
                        "Enable common name check for server certificate.", 
                        "If enabled and no explicit domain name is specified, avi will use the incoming host header to do the match."
                    ]
                }, 
                "rewrite_host_header_to_sni": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "rewrite_host_header_to_sni", 
                    "required": "False", 
                    "description": [
                        "If sni server name is specified, rewrite incoming host header to the sni server name."
                    ]
                }, 
                "capacity_estimation": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "capacity_estimation", 
                    "required": "False", 
                    "description": [
                        "Inline estimation of capacity of servers."
                    ]
                }, 
                "max_conn_rate_per_server": {
                    "doc_type": "RateProfile", 
                    "py_type": "RateProfile", 
                    "name": "max_conn_rate_per_server", 
                    "required": "False", 
                    "ref_type": "RateProfile", 
                    "description": [
                        "Rate limit connections to each server."
                    ]
                }, 
                "servers": {
                    "doc_type": "Server", 
                    "py_type": "list", 
                    "name": "servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "Server", 
                    "description": [
                        "The pool directs load balanced traffic to this list of destination servers.", 
                        "The servers can be configured by ip address, name, network or via ip address group."
                    ]
                }, 
                "fewest_tasks_feedback_delay": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "fewest_tasks_feedback_delay", 
                    "required": "False", 
                    "range": "1-300", 
                    "description": [
                        "Periodicity of feedback for fewest tasks server selection algorithm.", 
                        "Allowed values are 1-300."
                    ]
                }, 
                "rewrite_host_header_to_server_name": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "rewrite_host_header_to_server_name", 
                    "required": "False", 
                    "description": [
                        "Rewrite incoming host header to server name of the server to which the request is proxied.", 
                        "Enabling this feature rewrites host header for requests to all servers in the pool."
                    ]
                }, 
                "capacity_estimation_ttfb_thresh": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "capacity_estimation_ttfb_thresh", 
                    "required": "False", 
                    "range": "1-5000", 
                    "special_values": [
                        "'Automatic'"
                    ], 
                    "description": [
                        "The maximum time-to-first-byte of a server.", 
                        "Allowed values are 1-5000.", 
                        "Special values are 0 - 'automatic'."
                    ]
                }, 
                "ab_pool": {
                    "doc_type": "AbPool", 
                    "py_type": "AbPool", 
                    "name": "ab_pool", 
                    "required": "False", 
                    "ref_type": "AbPool", 
                    "description": [
                        "A/b pool configuration."
                    ]
                }, 
                "fail_action": {
                    "doc_type": "FailAction", 
                    "py_type": "FailAction", 
                    "name": "fail_action", 
                    "required": "False", 
                    "ref_type": "FailAction", 
                    "description": [
                        "Enable an action - close connection, http redirect or local http response - when a pool failure happens.", 
                        "By default, a connection will be closed, in case the pool experiences a failure."
                    ]
                }, 
                "networks": {
                    "doc_type": "NetworkFilter", 
                    "py_type": "list", 
                    "name": "networks", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "NetworkFilter", 
                    "description": [
                        "(internal-use) networks designated as containing servers for this pool.", 
                        "The servers may be further narrowed down by a filter.", 
                        "This field is used internally by avi, not editable by the user."
                    ]
                }, 
                "lb_algorithm_hash": {
                    "default_value": "LB_ALGORITHM_CONSISTENT_HASH_SOURCE_IP_ADDRESS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "lb_algorithm_hash", 
                    "required": "False", 
                    "option_values": [
                        "LB_ALGORITHM_CONSISTENT_HASH_SOURCE_IP_ADDRESS", 
                        "LB_ALGORITHM_CONSISTENT_HASH_SOURCE_IP_ADDRESS_AND_PORT", 
                        "LB_ALGORITHM_CONSISTENT_HASH_URI", 
                        "LB_ALGORITHM_CONSISTENT_HASH_CUSTOM_HEADER"
                    ], 
                    "description": [
                        "Criteria used as a key for determining the hash between the client and  server.", 
                        "Enum options - LB_ALGORITHM_CONSISTENT_HASH_SOURCE_IP_ADDRESS, LB_ALGORITHM_CONSISTENT_HASH_SOURCE_IP_ADDRESS_AND_PORT,", 
                        "LB_ALGORITHM_CONSISTENT_HASH_URI, LB_ALGORITHM_CONSISTENT_HASH_CUSTOM_HEADER."
                    ]
                }, 
                "sni_enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "sni_enabled", 
                    "required": "False", 
                    "description": [
                        "Enable tls sni for server connections.", 
                        "If disabled, avi will not send the sni extension as part of the handshake."
                    ]
                }, 
                "lb_algorithm_core_nonaffinity": {
                    "default_value": 2, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "lb_algorithm_core_nonaffinity", 
                    "required": "False", 
                    "range": "1-65535", 
                    "description": [
                        "Degree of non-affinity for core afffinity based server selection.", 
                        "Allowed values are 1-65535.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "placement_networks": {
                    "doc_type": "PlacementNetwork", 
                    "py_type": "list", 
                    "name": "placement_networks", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "PlacementNetwork", 
                    "description": [
                        "Manually select the networks and subnets used to provide reachability to the pool's servers.", 
                        "Specify the subnet using the following syntax  10-1-1-0/24.", 
                        "Use static routes in vrf configuration when pool servers are not directly connected butroutable from the service engine."
                    ]
                }, 
                "server_reselect": {
                    "doc_type": "HTTPServerReselect", 
                    "py_type": "HTTPServerReselect", 
                    "name": "server_reselect", 
                    "required": "False", 
                    "ref_type": "HTTPServerReselect", 
                    "description": [
                        "Server reselect configuration for http requests."
                    ]
                }, 
                "inline_health_monitor": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "inline_health_monitor", 
                    "required": "False", 
                    "description": [
                        "The passive monitor will monitor client to server connections and requests and adjust traffic load to servers based on successful responses.", 
                        "This may alter the expected behavior of the lb method, such as round robin."
                    ]
                }, 
                "default_server_port": {
                    "default_value": 80, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "default_server_port", 
                    "required": "False", 
                    "range": "1-65535", 
                    "description": [
                        "Traffic sent to servers will use this destination server port unless overridden by the server's specific port attribute.", 
                        "The ssl checkbox enables avi to server encryption.", 
                        "Allowed values are 1-65535."
                    ]
                }, 
                "request_queue_depth": {
                    "default_value": 128, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "request_queue_depth", 
                    "required": "False", 
                    "description": [
                        "Minimum number of requests to be queued when pool is full."
                    ]
                }, 
                "graceful_disable_timeout": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "graceful_disable_timeout", 
                    "required": "False", 
                    "range": "1-60", 
                    "special_values": [
                        "'Immediate'", 
                        "'Infinite'"
                    ], 
                    "description": [
                        "Used to gracefully disable a server.", 
                        "Virtual service waits for the specified time before terminating the existing connections  to the servers that are disabled.", 
                        "Allowed values are 1-60.", 
                        "Special values are 0 - 'immediate', -1 - 'infinite'."
                    ]
                }, 
                "server_count": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "server_count", 
                    "required": "False", 
                    "description": []
                }, 
                "request_queue_enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "request_queue_enabled", 
                    "required": "False", 
                    "description": [
                        "Enable request queue when pool is full."
                    ]
                }, 
                "max_concurrent_connections_per_server": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_concurrent_connections_per_server", 
                    "required": "False", 
                    "description": [
                        "The maximum number of concurrent connections allowed to each server within the pool.", 
                        "Note  applied value will be no less than the number of service engines that the pool is placed on.", 
                        "If set to 0, no limit is applied."
                    ]
                }, 
                "enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enabled", 
                    "required": "False", 
                    "description": [
                        "Enable or disable the pool.", 
                        "Disabling will terminate all open connections and pause health monitors."
                    ]
                }, 
                "connection_ramp_duration": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "connection_ramp_duration", 
                    "required": "False", 
                    "range": "1-300", 
                    "special_values": [
                        "'Immediate'"
                    ], 
                    "description": [
                        "Duration for which new connections will be gradually ramped up to a server recently brought online.", 
                        "Useful for lb algorithms that are least connection based.", 
                        "Allowed values are 1-300.", 
                        "Special values are 0 - 'immediate'."
                    ]
                }
            }
        }, 
        "FailActionHTTPLocalResponse": {
            "name": "FailActionHTTPLocalResponse", 
            "properties": {
                "status_code": {
                    "default_value": "FAIL_HTTP_STATUS_CODE_503", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "status_code", 
                    "required": "False", 
                    "option_values": [
                        "FAIL_HTTP_STATUS_CODE_200", 
                        "FAIL_HTTP_STATUS_CODE_503"
                    ], 
                    "description": [
                        "Enum options - FAIL_HTTP_STATUS_CODE_200, FAIL_HTTP_STATUS_CODE_503."
                    ]
                }, 
                "file": {
                    "doc_type": "HTTPLocalFile", 
                    "py_type": "HTTPLocalFile", 
                    "name": "file", 
                    "required": "False", 
                    "ref_type": "HTTPLocalFile", 
                    "description": []
                }
            }
        }, 
        "ServerUpdateReq": {
            "name": "ServerUpdateReq", 
            "properties": {
                "server_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "server_ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "AbPool": {
            "name": "AbPool", 
            "properties": {
                "ratio": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ratio", 
                    "required": "False", 
                    "range": "0-100", 
                    "description": [
                        "Ratio of traffic diverted to the b pool, for a/b testing.", 
                        "Allowed values are 0-100."
                    ]
                }
            }
        }, 
        "Server": {
            "name": "Server", 
            "properties": {
                "ratio": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "ratio", 
                    "required": "False", 
                    "range": "1-20", 
                    "description": [
                        "Ratio of selecting eligible servers in the pool.", 
                        "Allowed values are 1-20."
                    ]
                }, 
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": [
                        "Ip address of the server.", 
                        "Required if there is no resolvable host name."
                    ]
                }, 
                "discovered_networks": {
                    "doc_type": "DiscoveredNetwork", 
                    "py_type": "list", 
                    "name": "discovered_networks", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DiscoveredNetwork", 
                    "description": [
                        "(internal-use) discovered networks providing reachability for server ip.", 
                        "This field is used internally by avi, not editable by the user."
                    ]
                }, 
                "enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enabled", 
                    "required": "False", 
                    "description": [
                        "Enable, disable or graceful disable determine if new or existing connections to the server are allowed."
                    ]
                }, 
                "discovered_subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "list", 
                    "name": "discovered_subnet", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "(internal-use) discovered subnet for this server.", 
                        "This field is deprecated.", 
                        "Field deprecated in 17.1.1."
                    ]
                }, 
                "verify_network": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "verify_network", 
                    "required": "False", 
                    "description": [
                        "Verify server belongs to a discovered network or reachable via a discovered network.", 
                        "Verify reachable network isn't the openstack management network."
                    ]
                }, 
                "static": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "static", 
                    "required": "False", 
                    "description": [
                        "If statically learned."
                    ]
                }, 
                "location": {
                    "doc_type": "GeoLocation", 
                    "py_type": "GeoLocation", 
                    "name": "location", 
                    "required": "False", 
                    "ref_type": "GeoLocation", 
                    "description": [
                        "(internal-use) geographic location of the server.currently only for internal usage.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "resolve_server_by_dns": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "resolve_server_by_dns", 
                    "required": "False", 
                    "description": [
                        "Auto resolve server's ip using dns name."
                    ]
                }, 
                "rewrite_host_header": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "rewrite_host_header", 
                    "required": "False", 
                    "description": [
                        "Rewrite incoming host header to server name."
                    ]
                }, 
                "port": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "port", 
                    "required": "False", 
                    "range": "1-65535", 
                    "special_values": [
                        "'use backend port in pool'"
                    ], 
                    "description": [
                        "Optionally specify the servers port number.", 
                        "This will override the pool's default server port attribute.", 
                        "Allowed values are 1-65535.", 
                        "Special values are 0- 'use backend port in pool'."
                    ]
                }
            }
        }, 
        "FailActionHTTPRedirect": {
            "name": "FailActionHTTPRedirect", 
            "properties": {
                "status_code": {
                    "default_value": "HTTP_REDIRECT_STATUS_CODE_302", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "status_code", 
                    "required": "False", 
                    "option_values": [
                        "HTTP_REDIRECT_STATUS_CODE_301", 
                        "HTTP_REDIRECT_STATUS_CODE_302", 
                        "HTTP_REDIRECT_STATUS_CODE_307"
                    ], 
                    "description": [
                        "Enum options - HTTP_REDIRECT_STATUS_CODE_301, HTTP_REDIRECT_STATUS_CODE_302, HTTP_REDIRECT_STATUS_CODE_307."
                    ]
                }, 
                "protocol": {
                    "default_value": "HTTPS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "protocol", 
                    "required": "False", 
                    "option_values": [
                        "HTTP", 
                        "HTTPS"
                    ], 
                    "description": [
                        "Enum options - HTTP, HTTPS."
                    ]
                }
            }
        }, 
        "PGDeploymentRule": {
            "name": "PGDeploymentRule", 
            "properties": {
                "operator": {
                    "default_value": "CO_GE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "operator", 
                    "required": "False", 
                    "option_values": [
                        "CO_EQ", 
                        "CO_GT", 
                        "CO_GE", 
                        "CO_LT", 
                        "CO_LE", 
                        "CO_NE"
                    ], 
                    "description": [
                        "Enum options - CO_EQ, CO_GT, CO_GE, CO_LT, CO_LE, CO_NE."
                    ]
                }, 
                "metric_id": {
                    "default_value": "health.health_score_value", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "metric_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "PoolDeploymentFailureInfo": {
            "name": "PoolDeploymentFailureInfo", 
            "properties": {
                "results": {
                    "doc_type": "PGDeploymentRuleResult", 
                    "py_type": "list", 
                    "name": "results", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "PGDeploymentRuleResult", 
                    "description": []
                }
            }
        }, 
        "PoolX509Certificate": {
            "name": "PoolX509Certificate", 
            "properties": {
                "is_ca": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_ca", 
                    "required": "False", 
                    "description": [
                        "Flag to indicate if the certificate is a certificate authority.", 
                        "This field is deprecated and ca certificates should now be configured through pki profile."
                    ]
                }
            }
        }, 
        "ServerStateUpdateInfo": {
            "name": "ServerStateUpdateInfo", 
            "properties": {
                "servers": {
                    "doc_type": "ServerState", 
                    "py_type": "list", 
                    "name": "servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerState", 
                    "description": []
                }
            }
        }, 
        "DiscoveredNetwork": {
            "name": "DiscoveredNetwork", 
            "properties": {
                "subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "list", 
                    "name": "subnet", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Discovered subnet for this ip."
                    ]
                }
            }
        }, 
        "HTTPReselectRespCode": {
            "name": "HTTPReselectRespCode", 
            "properties": {
                "ranges": {
                    "doc_type": "HTTPStatusRange", 
                    "py_type": "list", 
                    "name": "ranges", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HTTPStatusRange", 
                    "description": [
                        "Http response code ranges to match."
                    ]
                }, 
                "codes": {
                    "doc_type": "integer", 
                    "py_type": "list", 
                    "name": "codes", 
                    "required": "False", 
                    "range": "400-599", 
                    "array": true, 
                    "description": [
                        "Http response code to be matched.", 
                        "Allowed values are 400-599."
                    ]
                }
            }
        }, 
        "ServerState": {
            "name": "ServerState", 
            "properties": {
                "server_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "server_ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }
    }, 
    "application_policy": {
        "HTTPSecurityRule": {
            "name": "HTTPSecurityRule", 
            "properties": {
                "action": {
                    "doc_type": "HTTPSecurityAction", 
                    "py_type": "HTTPSecurityAction", 
                    "name": "action", 
                    "required": "False", 
                    "ref_type": "HTTPSecurityAction", 
                    "description": [
                        "Action to be performed upon successful matching."
                    ]
                }, 
                "enable": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable", 
                    "required": "True", 
                    "description": [
                        "Enable or disable the rule."
                    ]
                }, 
                "match": {
                    "doc_type": "MatchTarget", 
                    "py_type": "MatchTarget", 
                    "name": "match", 
                    "required": "False", 
                    "ref_type": "MatchTarget", 
                    "description": [
                        "Add match criteria to the rule."
                    ]
                }
            }
        }, 
        "HTTPPolicySet": {
            "name": "HTTPPolicySet", 
            "properties": {
                "http_request_policy": {
                    "doc_type": "HTTPRequestPolicy", 
                    "py_type": "HTTPRequestPolicy", 
                    "name": "http_request_policy", 
                    "required": "False", 
                    "ref_type": "HTTPRequestPolicy", 
                    "description": [
                        "Http request policy for the virtual service."
                    ]
                }, 
                "http_response_policy": {
                    "doc_type": "HTTPResponsePolicy", 
                    "py_type": "HTTPResponsePolicy", 
                    "name": "http_response_policy", 
                    "required": "False", 
                    "ref_type": "HTTPResponsePolicy", 
                    "description": [
                        "Http response policy for the virtual service."
                    ]
                }, 
                "http_security_policy": {
                    "doc_type": "HTTPSecurityPolicy", 
                    "py_type": "HTTPSecurityPolicy", 
                    "name": "http_security_policy", 
                    "required": "False", 
                    "ref_type": "HTTPSecurityPolicy", 
                    "description": [
                        "Http security policy for the virtual service."
                    ]
                }, 
                "is_internal_policy": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_internal_policy", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "HTTPSecurityAction": {
            "name": "HTTPSecurityAction", 
            "properties": {
                "rate_limit": {
                    "doc_type": "RateProfile", 
                    "py_type": "RateProfile", 
                    "name": "rate_limit", 
                    "required": "False", 
                    "ref_type": "RateProfile", 
                    "description": [
                        "Rate limit profile to be used to rate-limit the flow."
                    ]
                }, 
                "https_port": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "https_port", 
                    "required": "False", 
                    "range": "1-65535", 
                    "description": [
                        "Secure ssl/tls port to redirect the http request to.", 
                        "Allowed values are 1-65535."
                    ]
                }, 
                "file": {
                    "doc_type": "HTTPLocalFile", 
                    "py_type": "HTTPLocalFile", 
                    "name": "file", 
                    "required": "False", 
                    "ref_type": "HTTPLocalFile", 
                    "description": [
                        "File to be used for generating http local response."
                    ]
                }
            }
        }, 
        "HTTPRequestPolicy": {
            "name": "HTTPRequestPolicy", 
            "properties": {
                "rules": {
                    "doc_type": "HTTPRequestRule", 
                    "py_type": "list", 
                    "name": "rules", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HTTPRequestRule", 
                    "description": [
                        "Add rules to the http request policy."
                    ]
                }
            }
        }, 
        "HTTPSecurityPolicy": {
            "name": "HTTPSecurityPolicy", 
            "properties": {
                "rules": {
                    "doc_type": "HTTPSecurityRule", 
                    "py_type": "list", 
                    "name": "rules", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HTTPSecurityRule", 
                    "description": [
                        "Add rules to the http security policy."
                    ]
                }
            }
        }, 
        "HTTPRequestRule": {
            "name": "HTTPRequestRule", 
            "properties": {
                "rewrite_url_action": {
                    "doc_type": "HTTPRewriteURLAction", 
                    "py_type": "HTTPRewriteURLAction", 
                    "name": "rewrite_url_action", 
                    "required": "False", 
                    "ref_type": "HTTPRewriteURLAction", 
                    "description": [
                        "Http request url rewrite action."
                    ]
                }, 
                "enable": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable", 
                    "required": "True", 
                    "description": [
                        "Enable or disable the rule."
                    ]
                }, 
                "switching_action": {
                    "doc_type": "HTTPSwitchingAction", 
                    "py_type": "HTTPSwitchingAction", 
                    "name": "switching_action", 
                    "required": "False", 
                    "ref_type": "HTTPSwitchingAction", 
                    "description": [
                        "Content switching action."
                    ]
                }, 
                "redirect_action": {
                    "doc_type": "HTTPRedirectAction", 
                    "py_type": "HTTPRedirectAction", 
                    "name": "redirect_action", 
                    "required": "False", 
                    "ref_type": "HTTPRedirectAction", 
                    "description": [
                        "Http redirect action."
                    ]
                }, 
                "hdr_action": {
                    "doc_type": "HTTPHdrAction", 
                    "py_type": "list", 
                    "name": "hdr_action", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HTTPHdrAction", 
                    "description": [
                        "Http header rewrite action."
                    ]
                }, 
                "match": {
                    "doc_type": "MatchTarget", 
                    "py_type": "MatchTarget", 
                    "name": "match", 
                    "required": "False", 
                    "ref_type": "MatchTarget", 
                    "description": [
                        "Add match criteria to the rule."
                    ]
                }
            }
        }, 
        "HTTPResponsePolicy": {
            "name": "HTTPResponsePolicy", 
            "properties": {
                "rules": {
                    "doc_type": "HTTPResponseRule", 
                    "py_type": "list", 
                    "name": "rules", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HTTPResponseRule", 
                    "description": [
                        "Add rules to the http response policy."
                    ]
                }
            }
        }, 
        "HTTPResponseRule": {
            "name": "HTTPResponseRule", 
            "properties": {
                "loc_hdr_action": {
                    "doc_type": "HTTPRewriteLocHdrAction", 
                    "py_type": "HTTPRewriteLocHdrAction", 
                    "name": "loc_hdr_action", 
                    "required": "False", 
                    "ref_type": "HTTPRewriteLocHdrAction", 
                    "description": [
                        "Location header rewrite action."
                    ]
                }, 
                "enable": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable", 
                    "required": "True", 
                    "description": [
                        "Enable or disable the rule."
                    ]
                }, 
                "hdr_action": {
                    "doc_type": "HTTPHdrAction", 
                    "py_type": "list", 
                    "name": "hdr_action", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "HTTPHdrAction", 
                    "description": [
                        "Http header rewrite action."
                    ]
                }, 
                "match": {
                    "doc_type": "ResponseMatchTarget", 
                    "py_type": "ResponseMatchTarget", 
                    "name": "match", 
                    "required": "False", 
                    "ref_type": "ResponseMatchTarget", 
                    "description": [
                        "Add match criteria to the rule."
                    ]
                }
            }
        }
    }, 
    "server_autoscale": {
        "ServerScaleInTrigger": {
            "name": "ServerScaleInTrigger", 
            "properties": {
                "servers": {
                    "doc_type": "ServerId", 
                    "py_type": "list", 
                    "name": "servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerId", 
                    "description": [
                        "List of server ids that should be scaled in."
                    ]
                }
            }
        }, 
        "AutoScaleMesosSettings": {
            "name": "AutoScaleMesosSettings", 
            "properties": {
                "force": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "force", 
                    "required": "False", 
                    "description": [
                        "Apply scaleout even when there are deployments inprogress."
                    ]
                }
            }
        }, 
        "ServerAutoScaleInCompleteInfo": {
            "name": "ServerAutoScaleInCompleteInfo", 
            "properties": {
                "reason_code": {
                    "default_value": "SYSERR_SUCCESS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "reason_code", 
                    "required": "True", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }, 
                "scaled_in_servers": {
                    "doc_type": "ServerId", 
                    "py_type": "list", 
                    "name": "scaled_in_servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerId", 
                    "description": []
                }
            }
        }, 
        "ServerAutoScaleOutInfo": {
            "name": "ServerAutoScaleOutInfo", 
            "properties": {
                "reason_code": {
                    "default_value": "SYSERR_SUCCESS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "reason_code", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }
            }
        }, 
        "ServerScaleInParams": {
            "name": "ServerScaleInParams", 
            "properties": {
                "servers": {
                    "doc_type": "ServerId", 
                    "py_type": "list", 
                    "name": "servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerId", 
                    "description": [
                        "List of server ids that should be scaled in."
                    ]
                }
            }
        }, 
        "ServerAutoScaleInInfo": {
            "name": "ServerAutoScaleInInfo", 
            "properties": {
                "scalein_server_candidates": {
                    "doc_type": "ServerId", 
                    "py_type": "list", 
                    "name": "scalein_server_candidates", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerId", 
                    "description": []
                }, 
                "reason_code": {
                    "default_value": "SYSERR_SUCCESS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "reason_code", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }
            }
        }, 
        "ServerAutoScaleOutCompleteInfo": {
            "name": "ServerAutoScaleOutCompleteInfo", 
            "properties": {
                "reason_code": {
                    "default_value": "SYSERR_SUCCESS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "reason_code", 
                    "required": "True", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }, 
                "scaled_out_servers": {
                    "doc_type": "ServerId", 
                    "py_type": "list", 
                    "name": "scaled_out_servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerId", 
                    "description": []
                }
            }
        }, 
        "AutoScaleState": {
            "name": "AutoScaleState", 
            "properties": {
                "autoscale_enabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "autoscale_enabled", 
                    "required": "True", 
                    "description": []
                }, 
                "last_action": {
                    "default_value": "SCALEOUT", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "last_action", 
                    "required": "False", 
                    "option_values": [
                        "SCALEOUT", 
                        "SCALEIN"
                    ], 
                    "description": [
                        "Enum options - SCALEOUT, SCALEIN."
                    ]
                }, 
                "last_scaleout_reason": {
                    "default_value": "SYSERR_SUCCESS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "last_scaleout_reason", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }, 
                "last_scalein_reason": {
                    "default_value": "SYSERR_SUCCESS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "last_scalein_reason", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }, 
                "launch_retries": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "launch_retries", 
                    "required": "False", 
                    "description": []
                }, 
                "autoscale_in_progress": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "autoscale_in_progress", 
                    "required": "False", 
                    "description": []
                }, 
                "launch_error": {
                    "default_value": "SYSERR_SUCCESS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "launch_error", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }
            }
        }, 
        "AutoScaleLaunchConfig": {
            "name": "AutoScaleLaunchConfig", 
            "properties": {
                "openstack": {
                    "doc_type": "AutoScaleOpenStackSettings", 
                    "py_type": "AutoScaleOpenStackSettings", 
                    "name": "openstack", 
                    "required": "False", 
                    "ref_type": "AutoScaleOpenStackSettings", 
                    "description": []
                }, 
                "aws": {
                    "doc_type": "AutoScaleAWSSettings", 
                    "py_type": "AutoScaleAWSSettings", 
                    "name": "aws", 
                    "required": "False", 
                    "ref_type": "AutoScaleAWSSettings", 
                    "description": []
                }, 
                "mesos": {
                    "doc_type": "AutoScaleMesosSettings", 
                    "py_type": "AutoScaleMesosSettings", 
                    "name": "mesos", 
                    "required": "False", 
                    "ref_type": "AutoScaleMesosSettings", 
                    "description": []
                }
            }
        }, 
        "ServerAutoScaleFailedInfo": {
            "name": "ServerAutoScaleFailedInfo", 
            "properties": {
                "reason_code": {
                    "default_value": "SYSERR_SUCCESS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "reason_code", 
                    "required": "True", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }
            }
        }, 
        "IntelligentAutoScaleState": {
            "name": "IntelligentAutoScaleState", 
            "properties": {
                "estimated_capacity": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "estimated_capacity", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "ServerAutoScalePolicy": {
            "name": "ServerAutoScalePolicy", 
            "properties": {
                "max_scalein_adjustment_step": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_scalein_adjustment_step", 
                    "required": "False", 
                    "description": [
                        "Maximum number of servers to scalein simultaneously.", 
                        "The actual number of servers to scalein is chosen such that target number of servers is always more than or equal to the min_size."
                    ]
                }, 
                "intelligent_autoscale": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "intelligent_autoscale", 
                    "required": "False", 
                    "description": [
                        "Use avi intelligent autoscale algorithm where autoscale is performed by comparing load on the pool against estimated capacity of all the servers."
                    ]
                }, 
                "intelligent_scalein_margin": {
                    "default_value": 40, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "intelligent_scalein_margin", 
                    "required": "False", 
                    "range": "1-99", 
                    "description": [
                        "Maximum extra capacity as percentage of load used by the intelligent scheme.", 
                        "Scalein is triggered when available capacity is more than this margin.", 
                        "Allowed values are 1-99."
                    ]
                }, 
                "use_predicted_load": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_predicted_load", 
                    "required": "False", 
                    "description": [
                        "Use predicted load rather than current load."
                    ]
                }, 
                "intelligent_scaleout_margin": {
                    "default_value": 20, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "intelligent_scaleout_margin", 
                    "required": "False", 
                    "range": "1-99", 
                    "description": [
                        "Minimum extra capacity as percentage of load used by the intelligent scheme.", 
                        "Scaleout is triggered when available capacity is less than this margin.", 
                        "Allowed values are 1-99."
                    ]
                }, 
                "min_size": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "min_size", 
                    "required": "False", 
                    "range": "0-400", 
                    "description": [
                        "No scale-in happens once number of operationally up servers reach min_servers.", 
                        "Allowed values are 0-400."
                    ]
                }, 
                "scalein_cooldown": {
                    "default_value": 300, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "scalein_cooldown", 
                    "required": "False", 
                    "description": [
                        "Cooldown period during which no new scalein is triggered to allow previous scalein to successfully complete."
                    ]
                }, 
                "max_scaleout_adjustment_step": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_scaleout_adjustment_step", 
                    "required": "False", 
                    "description": [
                        "Maximum number of servers to scaleout simultaneously.", 
                        "The actual number of servers to scaleout is chosen such that target number of servers is always less than or equal to the max_size."
                    ]
                }, 
                "scaleout_cooldown": {
                    "default_value": 300, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "scaleout_cooldown", 
                    "required": "False", 
                    "description": [
                        "Cooldown period during which no new scaleout is triggered to allow previous scaleout to successfully complete."
                    ]
                }, 
                "max_size": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "max_size", 
                    "required": "False", 
                    "range": "0-400", 
                    "description": [
                        "Maximum number of servers after scaleout.", 
                        "Allowed values are 0-400."
                    ]
                }
            }
        }, 
        "ServerId": {
            "name": "ServerId", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }
    }, 
    "se_res_mgr_rpc": {
        "SeResourceDelResp": {
            "name": "SeResourceDelResp", 
            "properties": {
                "svc_ids": {
                    "doc_type": "SeMgrSvcId", 
                    "py_type": "list", 
                    "name": "svc_ids", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeMgrSvcId", 
                    "description": []
                }
            }
        }, 
        "SeVmVnicOpStatus": {
            "name": "SeVmVnicOpStatus", 
            "properties": {
                "vnics": {
                    "doc_type": "vNIC", 
                    "py_type": "list", 
                    "name": "vnics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "vNIC", 
                    "description": []
                }, 
                "cc_vnics": {
                    "doc_type": "CC_VnicInfo", 
                    "py_type": "list", 
                    "name": "cc_vnics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CC_VnicInfo", 
                    "description": []
                }, 
                "syserr": {
                    "default_value": "SYSERR_FAILURE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "syserr", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }
            }
        }, 
        "SeCreateResp": {
            "name": "SeCreateResp", 
            "properties": {
                "status": {
                    "default_value": "SYSERR_SUCCESS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "status", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }
            }
        }, 
        "SeResVerifyBindingResp": {
            "name": "SeResVerifyBindingResp", 
            "properties": {
                "se_binding_info": {
                    "doc_type": "SeAllocInfo", 
                    "py_type": "list", 
                    "name": "se_binding_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeAllocInfo", 
                    "description": []
                }
            }
        }, 
        "SeInfo": {
            "name": "SeInfo", 
            "properties": {
                "status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "status", 
                    "required": "True", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "se_alloc_info": {
                    "doc_type": "SeAllocInfo", 
                    "py_type": "list", 
                    "name": "se_alloc_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeAllocInfo", 
                    "description": []
                }
            }
        }, 
        "SeAssignFailResp": {
            "name": "SeAssignFailResp", 
            "properties": {
                "reason": {
                    "default_value": "Failed to release SE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "reason", 
                    "required": "False", 
                    "description": []
                }, 
                "syserr": {
                    "default_value": "SYSERR_FAILURE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "syserr", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }
            }
        }, 
        "SeResourceFindReqBatch": {
            "name": "SeResourceFindReqBatch", 
            "properties": {
                "child_reqs": {
                    "doc_type": "SeResourceFindReq", 
                    "py_type": "list", 
                    "name": "child_reqs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeResourceFindReq", 
                    "description": []
                }, 
                "parent_req": {
                    "doc_type": "SeResourceFindReq", 
                    "py_type": "SeResourceFindReq", 
                    "name": "parent_req", 
                    "required": "False", 
                    "ref_type": "SeResourceFindReq", 
                    "description": []
                }
            }
        }, 
        "SeConsumerResyncResp": {
            "name": "SeConsumerResyncResp", 
            "properties": {
                "res_rsp": {
                    "doc_type": "SeResourceFindResp", 
                    "py_type": "SeResourceFindResp", 
                    "name": "res_rsp", 
                    "required": "False", 
                    "ref_type": "SeResourceFindResp", 
                    "description": []
                }
            }
        }, 
        "SeVniReachUpdReq": {
            "name": "SeVniReachUpdReq", 
            "properties": {
                "vnics": {
                    "doc_type": "SeResourceVnic", 
                    "py_type": "list", 
                    "name": "vnics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeResourceVnic", 
                    "description": []
                }
            }
        }, 
        "SeResourcePreReleaseReq": {
            "name": "SeResourcePreReleaseReq", 
            "properties": {
                "svc_id": {
                    "doc_type": "SeMgrSvcId", 
                    "py_type": "SeMgrSvcId", 
                    "name": "svc_id", 
                    "required": "True", 
                    "ref_type": "SeMgrSvcId", 
                    "description": []
                }, 
                "se_alloc_info": {
                    "doc_type": "SeAllocInfo", 
                    "py_type": "list", 
                    "name": "se_alloc_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeAllocInfo", 
                    "description": []
                }, 
                "notify_failure": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "notify_failure", 
                    "required": "False", 
                    "description": []
                }, 
                "admin_down": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "admin_down", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SeResourceDelReq": {
            "name": "SeResourceDelReq", 
            "properties": {
                "se_deleted": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "se_deleted", 
                    "required": "False", 
                    "description": []
                }, 
                "reason_code": {
                    "default_value": "SE_DEREG_POWERED_OFF", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "reason_code", 
                    "required": "False", 
                    "option_values": [
                        "SE_DEREG_HB_FAILURE", 
                        "SE_DEREG_POWERED_OFF", 
                        "SE_DEREG_SUSPENDED", 
                        "SE_DEREG_FATAL_ERROR", 
                        "SE_DEREG_UNREACHABLE", 
                        "SE_DEREG_VM_DELETED", 
                        "SE_DEREG_REBOOTED", 
                        "SE_DEREG_PURGE", 
                        "SE_DEREG_HEALTH_CHECK", 
                        "SE_DEREG_VINFRA_POWERED_OFF", 
                        "SE_DEREG_UPGRADING", 
                        "SE_DEREG_DP_HB_FAIL"
                    ], 
                    "description": [
                        "Enum options - SE_DEREG_HB_FAILURE, SE_DEREG_POWERED_OFF, SE_DEREG_SUSPENDED, SE_DEREG_FATAL_ERROR, SE_DEREG_UNREACHABLE, SE_DEREG_VM_DELETED,", 
                        "SE_DEREG_REBOOTED, SE_DEREG_PURGE, SE_DEREG_HEALTH_CHECK, SE_DEREG_VINFRA_POWERED_OFF, SE_DEREG_UPGRADING, SE_DEREG_DP_HB_FAIL."
                    ]
                }
            }
        }, 
        "SeResReachabilityAddReq": {
            "name": "SeResReachabilityAddReq", 
            "properties": {
                "subnet_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "subnet_ip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "SePreReleaseFailResp": {
            "name": "SePreReleaseFailResp", 
            "properties": {
                "reason": {
                    "default_value": "Failed to release SE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "reason", 
                    "required": "False", 
                    "description": []
                }, 
                "syserr": {
                    "default_value": "SYSERR_FAILURE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "syserr", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }, 
                "migrate_primary": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "migrate_primary", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SeResourceFindReq": {
            "name": "SeResourceFindReq", 
            "properties": {
                "notify_on_avail": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "notify_on_avail", 
                    "required": "False", 
                    "description": []
                }, 
                "servers": {
                    "doc_type": "ConServer", 
                    "py_type": "list", 
                    "name": "servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ConServer", 
                    "description": []
                }, 
                "disabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disabled", 
                    "required": "False", 
                    "description": []
                }, 
                "vip": {
                    "doc_type": "ConVip", 
                    "py_type": "ConVip", 
                    "name": "vip", 
                    "required": "False", 
                    "ref_type": "ConVip", 
                    "description": []
                }, 
                "snat_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "snat_ip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "enable_rhi_snat": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_rhi_snat", 
                    "required": "False", 
                    "description": []
                }, 
                "svc_id": {
                    "doc_type": "SeMgrSvcId", 
                    "py_type": "SeMgrSvcId", 
                    "name": "svc_id", 
                    "required": "True", 
                    "ref_type": "SeMgrSvcId", 
                    "description": []
                }, 
                "fip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "fip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "enable_rhi": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable_rhi", 
                    "required": "False", 
                    "description": []
                }, 
                "service_subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "service_subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": [
                        "Subnet for choosing vnic that vip is placed on."
                    ]
                }, 
                "scaleout_ecmp": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "scaleout_ecmp", 
                    "required": "False", 
                    "description": []
                }, 
                "num_standby_se": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_standby_se", 
                    "required": "False", 
                    "description": []
                }, 
                "apic_mode": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "apic_mode", 
                    "required": "False", 
                    "description": []
                }, 
                "num_vnics": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_vnics", 
                    "required": "False", 
                    "description": []
                }, 
                "active_standby_se_tag": {
                    "default_value": "ACTIVE_STANDBY_SE_1", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "active_standby_se_tag", 
                    "required": "False", 
                    "option_values": [
                        "ACTIVE_STANDBY_SE_1", 
                        "ACTIVE_STANDBY_SE_2"
                    ], 
                    "description": [
                        "Enum options - ACTIVE_STANDBY_SE_1, ACTIVE_STANDBY_SE_2."
                    ]
                }, 
                "clear_placement_disabled_flags": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "clear_placement_disabled_flags", 
                    "required": "False", 
                    "description": []
                }, 
                "use_res_profile": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_res_profile", 
                    "required": "False", 
                    "description": []
                }, 
                "services": {
                    "doc_type": "VsProtocol", 
                    "py_type": "list", 
                    "name": "services", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VsProtocol", 
                    "description": []
                }, 
                "res_profile": {
                    "doc_type": "VsResProfile", 
                    "py_type": "VsResProfile", 
                    "name": "res_profile", 
                    "required": "False", 
                    "ref_type": "VsResProfile", 
                    "description": []
                }, 
                "ign_pool_net_reach": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "ign_pool_net_reach", 
                    "required": "False", 
                    "description": []
                }, 
                "east_west_placement": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "east_west_placement", 
                    "required": "False", 
                    "description": [
                        "Force placement on all se's in service group (mesos mode only)."
                    ]
                }, 
                "dns_info": {
                    "doc_type": "DnsInfo", 
                    "py_type": "list", 
                    "name": "dns_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsInfo", 
                    "description": []
                }
            }
        }, 
        "SeResourceReleaseReq": {
            "name": "SeResourceReleaseReq", 
            "properties": {
                "svc_id": {
                    "doc_type": "SeMgrSvcId", 
                    "py_type": "SeMgrSvcId", 
                    "name": "svc_id", 
                    "required": "True", 
                    "ref_type": "SeMgrSvcId", 
                    "description": []
                }, 
                "dns_info": {
                    "doc_type": "DnsInfo", 
                    "py_type": "list", 
                    "name": "dns_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsInfo", 
                    "description": []
                }, 
                "release_all_se": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "release_all_se", 
                    "required": "False", 
                    "description": []
                }, 
                "res_profile": {
                    "doc_type": "VsResProfile", 
                    "py_type": "VsResProfile", 
                    "name": "res_profile", 
                    "required": "True", 
                    "ref_type": "VsResProfile", 
                    "description": []
                }, 
                "disabled": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "disabled", 
                    "required": "False", 
                    "description": []
                }, 
                "consumer_inactive": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "consumer_inactive", 
                    "required": "False", 
                    "description": []
                }, 
                "use_res_profile": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "use_res_profile", 
                    "required": "True", 
                    "description": []
                }, 
                "num_stby_se": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "num_stby_se", 
                    "required": "False", 
                    "description": []
                }, 
                "rel_reason": {
                    "default_value": "SE_REL_NOT_IN_USE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "rel_reason", 
                    "required": "False", 
                    "option_values": [
                        "SE_REL_NOT_IN_USE", 
                        "SE_REL_CANCEL_ASSIGN_REQ", 
                        "SE_REL_APIC_TXN_RESOLVED", 
                        "SE_REL_SE_GROUP_DELETED", 
                        "SE_REL_SWITCHOVER_FORCE"
                    ], 
                    "description": [
                        "Enum options - SE_REL_NOT_IN_USE, SE_REL_CANCEL_ASSIGN_REQ, SE_REL_APIC_TXN_RESOLVED, SE_REL_SE_GROUP_DELETED, SE_REL_SWITCHOVER_FORCE."
                    ]
                }
            }
        }, 
        "SeAssignReqBatch": {
            "name": "SeAssignReqBatch", 
            "properties": {
                "child_reqs": {
                    "doc_type": "SeResourceFindReq", 
                    "py_type": "list", 
                    "name": "child_reqs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeResourceFindReq", 
                    "description": []
                }, 
                "parent_req": {
                    "doc_type": "SeAssignReq", 
                    "py_type": "SeAssignReq", 
                    "name": "parent_req", 
                    "required": "False", 
                    "ref_type": "SeAssignReq", 
                    "description": []
                }
            }
        }, 
        "SeAssignReq": {
            "name": "SeAssignReq", 
            "properties": {
                "new_se": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "new_se", 
                    "required": "False", 
                    "description": []
                }, 
                "con_info": {
                    "doc_type": "SeResourceFindReq", 
                    "py_type": "SeResourceFindReq", 
                    "name": "con_info", 
                    "required": "True", 
                    "ref_type": "SeResourceFindReq", 
                    "description": []
                }, 
                "curr_se_info": {
                    "doc_type": "CurSeInfo", 
                    "py_type": "list", 
                    "name": "curr_se_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CurSeInfo", 
                    "description": []
                }
            }
        }, 
        "SeMgmtIpFailReq": {
            "name": "SeMgmtIpFailReq", 
            "properties": {
                "subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "subnet", 
                    "required": "False", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }, 
                "reason_code": {
                    "default_value": "SYSERR_FAILURE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "reason_code", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }
            }
        }, 
        "SeAllocInfo": {
            "name": "SeAllocInfo", 
            "properties": {
                "version": {
                    "default_value": "0.0.0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "version", 
                    "required": "False", 
                    "description": []
                }, 
                "admin_down": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "admin_down", 
                    "required": "False", 
                    "description": []
                }, 
                "sec_idx": {
                    "default_value": 1, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "sec_idx", 
                    "required": "False", 
                    "description": []
                }, 
                "vip_intf_list": {
                    "doc_type": "SeVipInterfaceList", 
                    "py_type": "list", 
                    "name": "vip_intf_list", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeVipInterfaceList", 
                    "description": []
                }, 
                "scaling_in": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "scaling_in", 
                    "required": "False", 
                    "description": []
                }, 
                "at_curr_ver": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "at_curr_ver", 
                    "required": "False", 
                    "description": []
                }, 
                "floating_intf_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "floating_intf_ip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "vnics": {
                    "doc_type": "SeResourceVnic", 
                    "py_type": "list", 
                    "name": "vnics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeResourceVnic", 
                    "description": []
                }
            }
        }, 
        "SeResourceFindResp": {
            "name": "SeResourceFindResp", 
            "properties": {
                "se_alloc_info": {
                    "doc_type": "SeAllocInfo", 
                    "py_type": "list", 
                    "name": "se_alloc_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeAllocInfo", 
                    "description": []
                }
            }
        }, 
        "SeVmAttachIpStatus": {
            "name": "SeVmAttachIpStatus", 
            "properties": {
                "syserr": {
                    "default_value": "SYSERR_SUCCESS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "syserr", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }
            }
        }, 
        "SeDisconnectReq": {
            "name": "SeDisconnectReq", 
            "properties": {
                "upgrading": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "upgrading", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SeConsumerResyncReq": {
            "name": "SeConsumerResyncReq", 
            "properties": {
                "se_alloc_info": {
                    "doc_type": "SeAllocInfo", 
                    "py_type": "list", 
                    "name": "se_alloc_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeAllocInfo", 
                    "description": []
                }, 
                "consumer_info": {
                    "doc_type": "SeResourceFindReq", 
                    "py_type": "SeResourceFindReq", 
                    "name": "consumer_info", 
                    "required": "True", 
                    "ref_type": "SeResourceFindReq", 
                    "description": []
                }
            }
        }, 
        "PingStatusResp": {
            "name": "PingStatusResp", 
            "properties": {
                "status": {
                    "default_value": "SYSERR_SUCCESS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "status", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }, 
                "failover": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "failover", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SeAssignResp": {
            "name": "SeAssignResp", 
            "properties": {
                "se_alloc_info": {
                    "doc_type": "SeAllocInfo", 
                    "py_type": "list", 
                    "name": "se_alloc_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeAllocInfo", 
                    "description": []
                }
            }
        }, 
        "SeResReachabilityDelReq": {
            "name": "SeResReachabilityDelReq", 
            "properties": {
                "subnet_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "subnet_ip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "SeVmDeleteStatus": {
            "name": "SeVmDeleteStatus", 
            "properties": {
                "syserr": {
                    "default_value": "SYSERR_SUCCESS", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "syserr", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }
            }
        }, 
        "SeResVerifyBindingReq": {
            "name": "SeResVerifyBindingReq", 
            "properties": {
                "update_consumer": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "update_consumer", 
                    "required": "False", 
                    "description": []
                }, 
                "con_info": {
                    "doc_type": "SeResourceFindReq", 
                    "py_type": "SeResourceFindReq", 
                    "name": "con_info", 
                    "required": "True", 
                    "ref_type": "SeResourceFindReq", 
                    "description": []
                }
            }
        }, 
        "WriteAccessRoleReq": {
            "name": "WriteAccessRoleReq", 
            "properties": {
                "enable": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SeVmCreateStatus": {
            "name": "SeVmCreateStatus", 
            "properties": {
                "vnics": {
                    "doc_type": "vNIC", 
                    "py_type": "list", 
                    "name": "vnics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "vNIC", 
                    "description": []
                }, 
                "syserr": {
                    "default_value": "SYSERR_FAILURE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "syserr", 
                    "required": "False", 
                    "option_values": [
                        "SYSERR_SUCCESS", 
                        "SYSERR_FAILURE", 
                        "SYSERR_OUT_OF_MEMORY", 
                        "SYSERR_NO_ENT", 
                        "SYSERR_INVAL", 
                        "SYSERR_ACCESS", 
                        "SYSERR_FAULT", 
                        "SYSERR_IO", 
                        "SYSERR_TIMEOUT", 
                        "SYSERR_NOT_SUPPORTED", 
                        "SYSERR_NOT_READY", 
                        "SYSERR_UPGRADE_IN_PROGRESS", 
                        "SYSERR_WARM_START_IN_PROGRESS", 
                        "SYSERR_TRY_AGAIN", 
                        "SYSERR_NOT_UPGRADING", 
                        "SYSERR_BAD_REQUEST", 
                        "SYSERR_TEST1", 
                        "SYSERR_TEST2", 
                        "SYSERR_QUEUE_TRANSPORT_FAILURE", 
                        "SYSERR_QUEUE_RETRY_TASK", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE", 
                        "SYSERR_DATASTORE_UNKNOWN_FAILURE", 
                        "SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST", 
                        "SYSERR_DATASTORE_DB_LOCKED", 
                        "SYSERR_DATASTORE_LOCK_FAILURE", 
                        "SYSERR_DATASTORE_TBL_NOT_EXIST", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW", 
                        "SYSERR_RPC_CANCELED_BY_CLIENT", 
                        "SYSERR_RPC_TIMED_OUT", 
                        "SYSERR_RPC_SEND_FAILED", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP", 
                        "SYSERR_NO_MULTICAST_RECEIVERS", 
                        "SYSERR_RPC_FAILED", 
                        "SYSERR_RPC_CONNECT_FAILED", 
                        "SYSERR_CONTROLLER_NOT_READY", 
                        "SYSERR_VERSION_MISMATCH", 
                        "SYSERR_INVALID_METHOD", 
                        "SYSERR_DESERIALIZATION", 
                        "SYSERR_SERIALIZATION", 
                        "SYSERR_ENQUEUE", 
                        "SYSERR_DEQUEUE", 
                        "SYSERR_VS_INVALID_METHOD", 
                        "SYSERR_VS_NOT_PRESENT", 
                        "SYSERR_VS_INVALID_REQUEST", 
                        "SYSERR_VS_NOT_ENOUGH_RESOURCES", 
                        "SYSERR_VS_SE_NOT_AVAILABLE", 
                        "SYSERR_VS_VNIC_FAILURE", 
                        "SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED", 
                        "SYSERR_INVALID_HEALTH_MONITOR_TYPE", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED", 
                        "SYSERR_VS_INVALID_OBJECT", 
                        "SYSERR_VS_SERVICE_ENGINE_DOWN", 
                        "SYSERR_VS_RPC_FAILURE", 
                        "SYSERR_VS_NOT_BOUND", 
                        "SYSERR_VS_DISABLED", 
                        "SYSERR_VS_INTERNAL_ERROR", 
                        "SYSERR_VS_SCALEOUT_ERROR", 
                        "SYSERR_VS_SCALEIN_ERROR", 
                        "SYSERR_VS_MIGRATE_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR", 
                        "SYSERR_VS_MIGRATE_SCALEIN_ERROR", 
                        "SYSERR_VS_AWAIT_STATIC_SE", 
                        "SYSERR_VS_MIN_SE_NOT_ASSIGNED", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL", 
                        "SYSERR_SE_MGR_VNIC_NOT_FOUND", 
                        "SYSERR_SE_MGR_UNKNOWN_SE", 
                        "SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE", 
                        "SYSERR_SE_UPGRADE_IN_PROGRESS", 
                        "SYSERR_SE_NOT_CONNECTED", 
                        "SYSERR_RM_RES_UNAVAIL", 
                        "SYSERR_RM_RES_UNAVAIL_NOTIFY", 
                        "SYSERR_RM_RES_NOT_INUSE", 
                        "SYSERR_RM_CONSUMER_NOT_FOUND", 
                        "SYSERR_RM_REACHABILITY_FAILED", 
                        "SYSERR_RM_RELEASE_SE_UNAVAIL", 
                        "SYSERR_RM_UNKNOWN_SE_GROUP", 
                        "SYSERR_RM_NO_SE_FOUND", 
                        "SYSERR_RM_PARTIAL_SE_FOUND", 
                        "SYSERR_RM_AWAIT_VM_CREATE", 
                        "SYSERR_RM_AWAIT_VNIC_ADD", 
                        "SYSERR_RM_AWAIT_BOOTUP", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND", 
                        "SYSERR_RM_CANNOT_SPAWN_SE", 
                        "SYSERR_RM_RES_NOT_NEEDED", 
                        "SYSERR_RM_RES_INFRA_DELETED", 
                        "SYSERR_RM_RES_USER_DELETED", 
                        "SYSERR_RM_RES_USER_REBOOTED", 
                        "SYSERR_RM_RES_CRASHED", 
                        "SYSERR_RM_RES_CONN_LOST", 
                        "SYSERR_RM_RES_VIP_REACH_LOST", 
                        "SYSERR_RM_VS_PROCESSING", 
                        "SYSERR_RM_VNIC_IP_FAILURE", 
                        "SYSERR_RM_STATIC_NO_POOL", 
                        "SYSERR_RM_STATIC_POOL_EXHAUSTED", 
                        "SYSERR_RM_VIP_MULT_NETWORKS", 
                        "SYSERR_RM_SRVR_MULT_NETWORKS", 
                        "SYSERR_RM_VIP_NO_NETWORK", 
                        "SYSERR_RM_SRVR_NO_NETWORK", 
                        "SYSERR_RM_MAX_PARALLEL_SE_CREATE", 
                        "SYSERR_RM_MAX_SE_CREATE_ATTEMPTS", 
                        "SYSERR_RM_MULT_SE_CRASH", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG", 
                        "SYSERR_RM_VS_SE_BOOTUP_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG", 
                        "SYSERR_RM_VS_SE_VNIC_IP_IN_PROG", 
                        "SYSERR_RM_NO_SUITABLE_HOST", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS", 
                        "SYSERR_RM_VIP_SE_NW_ACC", 
                        "SYSERR_RM_VIP_SE_MAX_VS", 
                        "SYSERR_RM_VIP_SE_GRP_MISMATCH", 
                        "SYSERR_RM_VIP_SE_PENDING_OP", 
                        "SYSERR_RM_MULT_MGMT_SUBNET", 
                        "SYSERR_RM_MAX_SE_IN_GRP", 
                        "SYSERR_RM_BOOTUP_FAILURE", 
                        "SYSERR_RM_PENDING_VNIC_OP", 
                        "SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED", 
                        "SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED", 
                        "SYSERR_RM_NO_MGMT_SUBNET", 
                        "SYSERR_RM_MGMT_DHCP_FAILURE", 
                        "SYSERR_RM_CANNOT_ADD_VNICS", 
                        "SYSERR_RM_CONSUMER_RESOURCES_SATISFIED", 
                        "SYSERR_RM_DATA_DHCP_FAILURE", 
                        "SYSERR_RM_QUERY_HOST_IN_PROGRESS", 
                        "SYSERR_RM_INSUFFICIENT_BUFFER_SE", 
                        "SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW", 
                        "SYSERR_RM_PARENT_SE_NW_ACC", 
                        "SYSERR_RM_PARENT_SE_MAX_VS", 
                        "SYSERR_RM_PARENT_SE_GRP_MISMATCH", 
                        "SYSERR_RM_DEF_GW_INCORRECT", 
                        "SYSERR_RM_NETWORK_NOT_FOUND", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED", 
                        "SYSERR_RM_SE_GRP_PENDING_OP", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED", 
                        "SYSERR_RM_VS_SE_PING_CHECK_IN_PROG", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK", 
                        "SYSERR_RM_SE_GRP_VIP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_NW_ACC", 
                        "SYSERR_RM_SE_GRP_MAX_VS", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN", 
                        "SYSERR_RM_SE_GW_DOWN", 
                        "SYSERR_RM_SE_DISCONNECTED", 
                        "SYSERR_VI_MGR_SEVM_VNIC_SUCCESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_VM", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS", 
                        "SYSERR_VI_MGR_SEVM_DELETE_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED", 
                        "SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_HOST", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS", 
                        "SYSERR_VI_MGR_SEVM_INVALID_DATA", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL", 
                        "SYSERR_VI_MGR_SEVM_TIMED_OUT", 
                        "SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE", 
                        "SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL", 
                        "SYSERR_VI_MGR_SEVM_DELETED", 
                        "SYSERR_VI_MGR_SEVM_VINFRA_FAILURE", 
                        "SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS", 
                        "SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND", 
                        "SYSERR_DB_CACHE_OBJ_NOT_FOUND", 
                        "SYSERR_DB_QUERY_QUEUED", 
                        "SYSERR_DB_QUERY_BATCHED", 
                        "SYSERR_DB_UPDATE_FAILED", 
                        "SYSERR_DB_QUERY_FAILED", 
                        "SYSERR_OS_AGENT_Q_FULL", 
                        "SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED", 
                        "SYSERR_OS_AGENT_OPENSTACK_ACCESSERR", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR", 
                        "SYSERR_OS_AGENT_TENANT_ABSENT", 
                        "SYSERR_OS_AGENT_INVALID_DATA", 
                        "SYSERR_CC_SVC_Q_FULL", 
                        "SYSERR_CC_AGENT_UNINITIALIZED", 
                        "SYSERR_CC_AGENT_ACCESSERR", 
                        "SYSERR_CC_AGENT_RESOURCEERR", 
                        "SYSERR_CC_AGENT_TENANT_ACCESSERR", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT", 
                        "SYSERR_CC_SVC_INVALID_DATA", 
                        "SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR", 
                        "SYSERR_CC_NO_FLAVOR", 
                        "SYSERR_CC_AGENT_ABSENT", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_DECONFIG_FAILURE", 
                        "SYSERR_CC_AGENT_NON_INFRA_SEVM", 
                        "SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT", 
                        "SYSERR_MARATHON_APP_TERMINATED", 
                        "SYSERR_MARATHON_INACCESSIBLE", 
                        "SYSERR_FLEET_API_ERROR", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT", 
                        "SYSERR_MESOS_SSH_ABORTED", 
                        "SYSERR_MESOS_SSH_FAILURE", 
                        "SYSERR_MESOS_SSH_NOTFOUND", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE", 
                        "SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK", 
                        "SYSERR_CC_AGENT_VNIC_FAILURE", 
                        "SYSERR_CC_AGENT_SCALE_IN_FAILED", 
                        "SYSERR_CC_AGENT_DS_FAILED", 
                        "SYSERR_CC_AGENT_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED", 
                        "SYSERR_CC_AGENT_GENERIC_FAILURE", 
                        "SYSERR_RUM_TOOMANYSAMPLES", 
                        "SYSERR_METRICS_TOO_MANY_MSG", 
                        "SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES", 
                        "SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE", 
                        "SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE", 
                        "SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE", 
                        "SYSERR_AUTOSCALE_REASON_ALERT", 
                        "SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN", 
                        "SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT", 
                        "SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS", 
                        "SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED", 
                        "SYSERR_AUTOSCALE_REASON_MANUAL", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND", 
                        "SYSERR_SEAGENT_OBJ_INACTIVE", 
                        "SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING", 
                        "SYSERR_SEAGENT_OBJ_ACTIVE", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DP_ERROR", 
                        "SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL", 
                        "SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR", 
                        "SYSERR_GSLB_INVALID_MTYPE", 
                        "SYSERR_GSLB_INVALID_SITE_CREDENTIALS", 
                        "SYSERR_GSLB_OBJECT_NOT_FOUND", 
                        "SYSERR_GSLB_INVALID_OPS", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS", 
                        "SYSERR_GSLB_FQDN_CONFLICT", 
                        "SYSERR_GSLB_CLEANUP_IN_PROGRESS", 
                        "SYSERR_GSLB_METHOD_NOP", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS"
                    ], 
                    "description": [
                        "Enum options - SYSERR_SUCCESS, SYSERR_FAILURE, SYSERR_OUT_OF_MEMORY, SYSERR_NO_ENT, SYSERR_INVAL, SYSERR_ACCESS, SYSERR_FAULT, SYSERR_IO,", 
                        "SYSERR_TIMEOUT, SYSERR_NOT_SUPPORTED, SYSERR_NOT_READY, SYSERR_UPGRADE_IN_PROGRESS, SYSERR_WARM_START_IN_PROGRESS, SYSERR_TRY_AGAIN,", 
                        "SYSERR_NOT_UPGRADING, SYSERR_BAD_REQUEST, SYSERR_TEST1, SYSERR_TEST2, SYSERR_QUEUE_TRANSPORT_FAILURE, SYSERR_QUEUE_RETRY_TASK,", 
                        "SYSERR_DATASTORE_TRANSPORT_FAILURE, SYSERR_DATASTORE_UNKNOWN_FAILURE, SYSERR_DATASTORE_OBJECT_DOES_NOT_EXIST,", 
                        "SYSERR_DATASTORE_REFERENCE_DOES_NOT_EXIST, SYSERR_DATASTORE_DB_LOCKED, SYSERR_DATASTORE_LOCK_FAILURE, SYSERR_DATASTORE_TBL_NOT_EXIST,", 
                        "SYSERR_SVC_COMMON_OBJECT_NOT_IN_CACHED_VIEW, SYSERR_RPC_CANCELED_BY_CLIENT, SYSERR_RPC_TIMED_OUT, SYSERR_RPC_SEND_FAILED,", 
                        "SYSERR_RPC_CANCELED_BY_TRANSACTION_CLEANUP, SYSERR_NO_MULTICAST_RECEIVERS, SYSERR_RPC_FAILED, SYSERR_RPC_CONNECT_FAILED,", 
                        "SYSERR_CONTROLLER_NOT_READY, SYSERR_VERSION_MISMATCH, SYSERR_INVALID_METHOD, SYSERR_DESERIALIZATION, SYSERR_SERIALIZATION, SYSERR_ENQUEUE,", 
                        "SYSERR_DEQUEUE, SYSERR_VS_INVALID_METHOD, SYSERR_VS_NOT_PRESENT, SYSERR_VS_INVALID_REQUEST, SYSERR_VS_NOT_ENOUGH_RESOURCES,", 
                        "SYSERR_VS_SE_NOT_AVAILABLE, SYSERR_VS_VNIC_FAILURE, SYSERR_VS_DELETE_WHILE_STILL_BEING_REFERRED, SYSERR_INVALID_HEALTH_MONITOR_TYPE,", 
                        "SYSERR_VS_SE_ASSIGNMENT_FAILED, SYSERR_VS_INVALID_OBJECT, SYSERR_VS_SERVICE_ENGINE_DOWN, SYSERR_VS_RPC_FAILURE, SYSERR_VS_NOT_BOUND,", 
                        "SYSERR_VS_DISABLED, SYSERR_VS_INTERNAL_ERROR, SYSERR_VS_SCALEOUT_ERROR, SYSERR_VS_SCALEIN_ERROR, SYSERR_VS_MIGRATE_ERROR,", 
                        "SYSERR_VS_MIGRATE_SCALEOUT_ERROR, SYSERR_VS_MIGRATE_SCALEIN_ERROR, SYSERR_VS_AWAIT_STATIC_SE, SYSERR_VS_MIN_SE_NOT_ASSIGNED,", 
                        "SYSERR_SE_MGR_VNIC_ALLOC_FAIL, SYSERR_SE_MGR_VNIC_NOT_FOUND, SYSERR_SE_MGR_UNKNOWN_SE, SYSERR_SE_MGR_UNKNOWN_STATE_TRANSITION,", 
                        "SYSERR_SE_MGR_SE_OFFLINE_HB_FAILURE, SYSERR_SE_UPGRADE_IN_PROGRESS, SYSERR_SE_NOT_CONNECTED, SYSERR_RM_RES_UNAVAIL, SYSERR_RM_RES_UNAVAIL_NOTIFY,", 
                        "SYSERR_RM_RES_NOT_INUSE, SYSERR_RM_CONSUMER_NOT_FOUND, SYSERR_RM_REACHABILITY_FAILED, SYSERR_RM_RELEASE_SE_UNAVAIL, SYSERR_RM_UNKNOWN_SE_GROUP,", 
                        "SYSERR_RM_NO_SE_FOUND, SYSERR_RM_PARTIAL_SE_FOUND, SYSERR_RM_AWAIT_VM_CREATE, SYSERR_RM_AWAIT_VNIC_ADD, SYSERR_RM_AWAIT_BOOTUP,", 
                        "SYSERR_RM_RESOURCE_NOT_FOUND, SYSERR_RM_CANNOT_SPAWN_SE, SYSERR_RM_RES_NOT_NEEDED, SYSERR_RM_RES_INFRA_DELETED, SYSERR_RM_RES_USER_DELETED,", 
                        "SYSERR_RM_RES_USER_REBOOTED, SYSERR_RM_RES_CRASHED, SYSERR_RM_RES_CONN_LOST, SYSERR_RM_RES_VIP_REACH_LOST, SYSERR_RM_VS_PROCESSING,", 
                        "SYSERR_RM_VNIC_IP_FAILURE, SYSERR_RM_STATIC_NO_POOL, SYSERR_RM_STATIC_POOL_EXHAUSTED, SYSERR_RM_VIP_MULT_NETWORKS, SYSERR_RM_SRVR_MULT_NETWORKS,", 
                        "SYSERR_RM_VIP_NO_NETWORK, SYSERR_RM_SRVR_NO_NETWORK, SYSERR_RM_MAX_PARALLEL_SE_CREATE, SYSERR_RM_MAX_SE_CREATE_ATTEMPTS, SYSERR_RM_MULT_SE_CRASH,", 
                        "SYSERR_RM_VS_SE_CREATE_IN_PROG, SYSERR_RM_VS_SE_BOOTUP_IN_PROG, SYSERR_RM_VS_SE_VNIC_ADD_IN_PROG, SYSERR_RM_VS_SE_VNIC_IP_IN_PROG,", 
                        "SYSERR_RM_NO_SUITABLE_HOST, SYSERR_RM_NO_SE_IN_SE_GRP, SYSERR_RM_ALL_SE_IN_SE_GRP_DOWN, SYSERR_RM_NO_SE_IN_SE_GRP_SRVR_ACC,", 
                        "SYSERR_RM_NO_SE_IN_SE_GRP_VIP_ACC, SYSERR_RM_ALL_SE_IN_SE_GRP_MAX_VS, SYSERR_RM_ALL_SE_IN_SE_GRP_NW_ACC_MAX_VS, SYSERR_RM_VIP_SE_NW_ACC,", 
                        "SYSERR_RM_VIP_SE_MAX_VS, SYSERR_RM_VIP_SE_GRP_MISMATCH, SYSERR_RM_VIP_SE_PENDING_OP, SYSERR_RM_MULT_MGMT_SUBNET, SYSERR_RM_MAX_SE_IN_GRP,", 
                        "SYSERR_RM_BOOTUP_FAILURE, SYSERR_RM_PENDING_VNIC_OP, SYSERR_RM_SE_MGMT_NO_STATIC_IPS_CONFIGURED, SYSERR_RM_SE_MGMT_STATIC_IPS_EXHAUSTED,", 
                        "SYSERR_RM_NO_MGMT_SUBNET, SYSERR_RM_MGMT_DHCP_FAILURE, SYSERR_RM_CANNOT_ADD_VNICS, SYSERR_RM_CONSUMER_RESOURCES_SATISFIED,", 
                        "SYSERR_RM_DATA_DHCP_FAILURE, SYSERR_RM_QUERY_HOST_IN_PROGRESS, SYSERR_RM_INSUFFICIENT_BUFFER_SE, SYSERR_RM_NO_DEFAULT_GW_SE_MGMT_NW,", 
                        "SYSERR_RM_PARENT_SE_NW_ACC, SYSERR_RM_PARENT_SE_MAX_VS, SYSERR_RM_PARENT_SE_GRP_MISMATCH, SYSERR_RM_DEF_GW_INCORRECT, SYSERR_RM_NETWORK_NOT_FOUND,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_USED, SYSERR_RM_SE_GRP_PENDING_OP, SYSERR_RM_ALL_SE_IN_SE_GRP_DISABLED, SYSERR_RM_VS_SE_PING_CHECK_IN_PROG,", 
                        "SYSERR_RM_CONSUMER_PENDING_TASK, SYSERR_RM_SE_GRP_VIP_NW_ACC, SYSERR_RM_SE_GRP_NW_ACC, SYSERR_RM_SE_GRP_MAX_VS,", 
                        "SYSERR_RM_ALL_SE_IN_SE_GRP_GW_DOWN, SYSERR_RM_SE_GW_DOWN, SYSERR_RM_SE_DISCONNECTED, SYSERR_VI_MGR_SEVM_VNIC_SUCCESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_HW_INFO, SYSERR_VI_MGR_SEVM_CREATE_FAIL_DUPLICATE_NAME, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_CPU, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MEM, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_LEASE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_OVF_ERROR, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST_VM_NETWORK, SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_PROGRESS,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_ABORTED, SYSERR_VI_MGR_SEVM_CREATE_FAILURE, SYSERR_VI_MGR_SEVM_CREATE_FAIL_POWER_ON, SYSERR_VI_MGR_SEVM_VNIC_NO_VM,", 
                        "SYSERR_VI_MGR_SEVM_VNIC_MAC_ADDR_ERROR, SYSERR_VI_MGR_SEVM_VNIC_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_NO_PG_PORTS, SYSERR_VI_MGR_SEVM_DELETE_FAILURE,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_LIMIT_REACHED, SYSERR_VI_MGR_SEVM_SET_MGMT_IP_FAILED, SYSERR_VI_MGR_SEVM_CREATE_ACCESS_ERROR,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_NO_IMAGE, SYSERR_VI_MGR_SEVM_VINFRA_UNINITIALIZED, SYSERR_VI_MGR_SEVM_CREATE_NO_HOST,", 
                        "SYSERR_VI_MGR_SEVM_CREATE_FAIL_NO_MGMT_NW_PORTS, SYSERR_VI_MGR_SEVM_INVALID_DATA, SYSERR_VI_MGR_SEVM_CREATE_FAIL_MULTIPLE_MGMT_NW,", 
                        "SYSERR_VI_MGR_SEVM_VCENTER_CONN_FAIL, SYSERR_VI_MGR_SEVM_TIMED_OUT, SYSERR_VI_MGR_SEVM_NO_SOURCE_CLONE, SYSERR_VI_MGR_SEVM_NO_AVAILABILITY_ZONE,", 
                        "SYSERR_VI_MGR_SEVM_FLAVOR_UNAVAIL, SYSERR_VI_MGR_SEVM_DELETED, SYSERR_VI_MGR_SEVM_VINFRA_FAILURE, SYSERR_VI_MGR_SEVM_VNIC_FAILURE_QUESTION,", 
                        "SYSERR_VI_MGR_LOGIN_FAIL_NO_VCENTER, SYSERR_VI_MGR_LOGIN_FAIL_USER_CREDENTIALS, SYSERR_VI_MGR_VCENTER_VERSION_MISMATCH,", 
                        "SYSERR_DB_CACHE_TBL_NOT_FOUND, SYSERR_DB_CACHE_OBJ_NOT_FOUND, SYSERR_DB_QUERY_QUEUED, SYSERR_DB_QUERY_BATCHED, SYSERR_DB_UPDATE_FAILED,", 
                        "SYSERR_DB_QUERY_FAILED, SYSERR_OS_AGENT_Q_FULL, SYSERR_OS_AGENT_OPENSTACK_UNINITIALIZED, SYSERR_OS_AGENT_OPENSTACK_ACCESSERR,", 
                        "SYSERR_OS_AGENT_OPENSTACK_RESOURCEERR, SYSERR_OS_AGENT_TENANT_ABSENT, SYSERR_OS_AGENT_INVALID_DATA, SYSERR_CC_SVC_Q_FULL,", 
                        "SYSERR_CC_AGENT_UNINITIALIZED, SYSERR_CC_AGENT_ACCESSERR, SYSERR_CC_AGENT_RESOURCEERR, SYSERR_CC_AGENT_TENANT_ACCESSERR,", 
                        "SYSERR_CC_AGENT_TENANT_ABSENT, SYSERR_CC_SVC_INVALID_DATA, SYSERR_CC_OS_AGENT_NEUTRON_HOST_ACCESSERR, SYSERR_CC_NO_FLAVOR, SYSERR_CC_AGENT_ABSENT,", 
                        "SYSERR_CC_AGENT_CONFIG_FAILURE, SYSERR_CC_AGENT_DECONFIG_FAILURE, SYSERR_CC_AGENT_NON_INFRA_SEVM, SYSERR_MESOS_DISCOVERY_DEPLOYMENT_FAIL,", 
                        "SYSERR_MESOS_DISCOVERY_TIMEOUT, SYSERR_MARATHON_APP_TERMINATED, SYSERR_MARATHON_INACCESSIBLE, SYSERR_FLEET_API_ERROR,", 
                        "SYSERR_MESOS_SSH_CMD_TIMEOUT, SYSERR_MESOS_SSH_ABORTED, SYSERR_MESOS_SSH_FAILURE, SYSERR_MESOS_SSH_NOTFOUND,", 
                        "SYSERR_CC_AGENT_VNIC_NO_IPS_AVAILABLE, SYSERR_CC_AGENT_VNIC_NO_SUBNETWORK, SYSERR_CC_AGENT_VNIC_FAILURE, SYSERR_CC_AGENT_SCALE_IN_FAILED,", 
                        "SYSERR_CC_AGENT_DS_FAILED, SYSERR_CC_AGENT_NOT_IMPLEMENTED, SYSERR_CC_AGENT_METHOD_NOT_IMPLEMENTED, SYSERR_CC_AGENT_GENERIC_FAILURE,", 
                        "SYSERR_RUM_TOOMANYSAMPLES, SYSERR_METRICS_TOO_MANY_MSG, SYSERR_METRICS_TOO_MANY_MSG_ACROSS_ENTITIES, SYSERR_ANOMALYZER_NOT_ENOUGH_SAMPLES,", 
                        "SYSERR_AUTOSCALE_REASON_INTELLIGENT_AUTOSCALE, SYSERR_AUTOSCALE_REASON_CONFIG_UPDATE, SYSERR_AUTOSCALE_REASON_POOL_STATE_CHANGE,", 
                        "SYSERR_AUTOSCALE_REASON_ALERT, SYSERR_AUTOSCALEIN_FAILED_LIMIT_EXCEEDED, SYSERR_AUTOSCALEOUT_FAILED_LIMIT_EXCEEDED,", 
                        "SYSERR_AUTOSCALE_IGNORED_AS_WITHIN_COOLDOWN, SYSERR_AUTOSCALE_ORCHESTRATION_TIMEOUT, SYSERR_AUTOSCALE_REASON_NOT_ENOUGH_SERVERS,", 
                        "SYSERR_AUTOSCALE_REASON_TOO_MANY_SERVERS, SYSERR_AUTOSCALE_REASON_ORCHESTRATION_FAILED, SYSERR_AUTOSCALE_REASON_MANUAL,", 
                        "SYSERR_AUTOSCALE_POLICY_NOT_FOUND, SYSERR_SEAGENT_OBJ_INACTIVE, SYSERR_SEAGENT_OBJ_AWAITING_DP_PROGRAMMING, SYSERR_SEAGENT_OBJ_ACTIVE,", 
                        "SYSERR_SEAGENT_OBJ_GRAPHDB_ERROR, SYSERR_SEAGENT_OBJ_DP_ERROR, SYSERR_SEAGENT_OBJ_DISABLED_RULE_POOL, SYSERR_SEAGENT_EASTWEST_VS_SUBNET_ERROR,", 
                        "SYSERR_GSLB_INVALID_MTYPE, SYSERR_GSLB_INVALID_SITE_CREDENTIALS, SYSERR_GSLB_OBJECT_NOT_FOUND, SYSERR_GSLB_INVALID_OPS,", 
                        "SYSERR_GSLB_PARTIAL_SUCCESS, SYSERR_GSLB_FQDN_CONFLICT, SYSERR_GSLB_CLEANUP_IN_PROGRESS, SYSERR_GSLB_METHOD_NOP,", 
                        "SYSERR_GSLB_API_NOT_SUPPORTED_FOR_UNFEDERATED_OBJECTS."
                    ]
                }
            }
        }, 
        "SeSubnetReachUpdReq": {
            "name": "SeSubnetReachUpdReq", 
            "properties": {
                "subnet_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "subnet_ip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "SeResourceAddReq": {
            "name": "SeResourceAddReq", 
            "properties": {
                "version": {
                    "default_value": "0.0.0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "version", 
                    "required": "False", 
                    "description": []
                }, 
                "container_mode": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "container_mode", 
                    "required": "False", 
                    "description": []
                }, 
                "gateway_up": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "gateway_up", 
                    "required": "False", 
                    "description": []
                }, 
                "container_type": {
                    "default_value": "CONTAINER_TYPE_HOST", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "container_type", 
                    "required": "False", 
                    "option_values": [
                        "CONTAINER_TYPE_BRIDGE", 
                        "CONTAINER_TYPE_HOST", 
                        "CONTAINER_TYPE_HOST_DPDK"
                    ], 
                    "description": [
                        "Enum options - CONTAINER_TYPE_BRIDGE, CONTAINER_TYPE_HOST, CONTAINER_TYPE_HOST_DPDK."
                    ]
                }, 
                "at_curr_ver": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "at_curr_ver", 
                    "required": "False", 
                    "description": []
                }, 
                "online": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "online", 
                    "required": "False", 
                    "description": []
                }, 
                "vnics": {
                    "doc_type": "SeResourceVnic", 
                    "py_type": "list", 
                    "name": "vnics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeResourceVnic", 
                    "description": []
                }, 
                "subnet_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "list", 
                    "name": "subnet_ip", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "UpdateDNSEntryReq": {
            "name": "UpdateDNSEntryReq", 
            "properties": {
                "oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "dns_info": {
                    "doc_type": "DnsInfo", 
                    "py_type": "list", 
                    "name": "dns_info", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DnsInfo", 
                    "description": []
                }
            }
        }
    }, 
    "disk_size": {
        "DiskUsage": {
            "name": "DiskUsage", 
            "properties": {
                "se_disk_free": {
                    "doc_type": "OverallInfo", 
                    "py_type": "list", 
                    "name": "se_disk_free", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "OverallInfo", 
                    "description": []
                }, 
                "cntlr_disk_usage": {
                    "doc_type": "PartitionInfo", 
                    "py_type": "list", 
                    "name": "cntlr_disk_usage", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "PartitionInfo", 
                    "description": []
                }, 
                "se_disk_usage": {
                    "doc_type": "PartitionInfo", 
                    "py_type": "list", 
                    "name": "se_disk_usage", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "PartitionInfo", 
                    "description": []
                }, 
                "cntlr_disk_free": {
                    "doc_type": "OverallInfo", 
                    "py_type": "list", 
                    "name": "cntlr_disk_free", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "OverallInfo", 
                    "description": []
                }
            }
        }
    }, 
    "fault_injection": {
        "FiuModuleExchange": {
            "name": "FiuModuleExchange", 
            "properties": {
                "seagent": {
                    "default_value": "fiu_mod_seagent_exchange", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "seagent", 
                    "required": "False", 
                    "description": []
                }, 
                "controller": {
                    "default_value": "fiu_mod_controller_exchange", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "controller", 
                    "required": "False", 
                    "description": []
                }, 
                "dp": {
                    "default_value": "fiu_mod_dataplane_exchange", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "dp", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "FiuConfigUpdateRsp": {
            "name": "FiuConfigUpdateRsp", 
            "properties": {
                "fiu_config_rsps": {
                    "doc_type": "FiuConfigRsp", 
                    "py_type": "list", 
                    "name": "fiu_config_rsps", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "FiuConfigRsp", 
                    "description": []
                }
            }
        }, 
        "FiuConfigUpdate": {
            "name": "FiuConfigUpdate", 
            "properties": {
                "fiu_configs": {
                    "doc_type": "FiuConfig", 
                    "py_type": "list", 
                    "name": "fiu_configs", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "FiuConfig", 
                    "description": []
                }
            }
        }, 
        "FiuConfig": {
            "name": "FiuConfig", 
            "properties": {
                "fiu_action": {
                    "default_value": "FIU_ACTION_NONE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "fiu_action", 
                    "required": "False", 
                    "option_values": [
                        "FIU_ACTION_NONE", 
                        "FIU_ACTION_EXIT", 
                        "FIU_ACTION_DELAY"
                    ], 
                    "description": [
                        "Enum options - FIU_ACTION_NONE, FIU_ACTION_EXIT, FIU_ACTION_DELAY."
                    ]
                }, 
                "enable": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enable", 
                    "required": "False", 
                    "description": []
                }, 
                "fiu_filters": {
                    "doc_type": "FiuFilter", 
                    "py_type": "list", 
                    "name": "fiu_filters", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "FiuFilter", 
                    "description": []
                }, 
                "probability": {
                    "default_value": 100, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "probability", 
                    "required": "False", 
                    "description": []
                }
            }
        }
    }, 
    "health_monitor": {
        "HealthMonitorHttp": {
            "name": "HealthMonitorHttp", 
            "properties": {
                "http_request": {
                    "default_value": "GET / HTTP/1.0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "http_request", 
                    "required": "False", 
                    "description": [
                        "Send an http request to the server.", 
                        "The default get / http/1.0 may be extended with additional headers or information.", 
                        "For instance, get /index.htm http/1.1 host  www.site.com connection  close."
                    ]
                }, 
                "ssl_attributes": {
                    "doc_type": "HealthMonitorSSLAttributes", 
                    "py_type": "HealthMonitorSSLAttributes", 
                    "name": "ssl_attributes", 
                    "required": "False", 
                    "ref_type": "HealthMonitorSSLAttributes", 
                    "description": [
                        "Ssl attributes for https health monitor.", 
                        "Field introduced in 17.1.1."
                    ]
                }, 
                "maintenance_code": {
                    "doc_type": "integer", 
                    "py_type": "list", 
                    "name": "maintenance_code", 
                    "required": "False", 
                    "range": "101-599", 
                    "array": true, 
                    "description": [
                        "Match or look for this http response code indicating server maintenance.", 
                        "A successful match results in the server being marked down.", 
                        "Allowed values are 101-599."
                    ]
                }
            }
        }, 
        "HealthMonitorDNS": {
            "name": "HealthMonitorDNS", 
            "properties": {
                "rcode": {
                    "default_value": "RCODE_NO_ERROR", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "rcode", 
                    "required": "False", 
                    "option_values": [
                        "RCODE_NO_ERROR", 
                        "RCODE_ANYTHING"
                    ], 
                    "description": [
                        "When no error is selected, a dns query will be marked failed is any error code is returned by the server.", 
                        "With any selected, the monitor ignores error code in the responses.", 
                        "Enum options - RCODE_NO_ERROR, RCODE_ANYTHING."
                    ]
                }, 
                "qtype": {
                    "default_value": "DNS_QUERY_TYPE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "qtype", 
                    "required": "False", 
                    "option_values": [
                        "DNS_QUERY_TYPE", 
                        "DNS_ANY_TYPE", 
                        "DNS_ANY_THING"
                    ], 
                    "description": [
                        "Query_type  response has atleast one answer of which      the resource record type matches the query type   any_type  response should contain", 
                        "atleast one answer  anything  an empty answer is enough.", 
                        "Enum options - DNS_QUERY_TYPE, DNS_ANY_TYPE, DNS_ANY_THING."
                    ]
                }
            }
        }, 
        "HealthMonitorTcp": {
            "name": "HealthMonitorTcp", 
            "properties": {
                "tcp_half_open": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "tcp_half_open", 
                    "required": "False", 
                    "description": [
                        "Configure tcp health monitor to use half-open tcp connections to monitor the health of backend servers thereby avoiding consumption of a full", 
                        "fledged server side connection and the overhead and logs associated with it.", 
                        "This method is light-weight as it makes use of listener in server's kernel layer to measure the health and a child socket or user thread is not", 
                        "created on the server side."
                    ]
                }
            }
        }, 
        "HealthMonitor": {
            "name": "HealthMonitor", 
            "properties": {
                "monitor_port": {
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "monitor_port", 
                    "required": "False", 
                    "range": "1-65535", 
                    "special_values": [
                        "'Use server port'"
                    ], 
                    "description": [
                        "Use this port instead of the port defined for the server in the pool.", 
                        "If the monitor succeeds to this port, the load balanced traffic will still be sent to the port of the server defined within the pool.", 
                        "Allowed values are 1-65535.", 
                        "Special values are 0 - 'use server port'."
                    ]
                }, 
                "https_monitor": {
                    "doc_type": "HealthMonitorHttp", 
                    "py_type": "HealthMonitorHttp", 
                    "name": "https_monitor", 
                    "required": "False", 
                    "ref_type": "HealthMonitorHttp", 
                    "description": []
                }, 
                "receive_timeout": {
                    "default_value": 4, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "receive_timeout", 
                    "required": "False", 
                    "range": "1-300", 
                    "description": [
                        "A valid response from the server is expected within the receive timeout window.", 
                        "This timeout must be less than the send interval.", 
                        "If server status is regularly flapping up and down, consider increasing this value.", 
                        "Allowed values are 1-300."
                    ]
                }, 
                "dns_monitor": {
                    "doc_type": "HealthMonitorDNS", 
                    "py_type": "HealthMonitorDNS", 
                    "name": "dns_monitor", 
                    "required": "False", 
                    "ref_type": "HealthMonitorDNS", 
                    "description": []
                }, 
                "is_federated": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_federated", 
                    "required": "False", 
                    "description": [
                        "This field describes the object's replication scope.", 
                        "If the field is set to false, then the object is visible within the controller-cluster and its associated service-engines.", 
                        "If the field is set to true, then the object is replicated across the federation.", 
                        "Field introduced in 17.1.3."
                    ]
                }, 
                "failed_checks": {
                    "default_value": 2, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "failed_checks", 
                    "required": "False", 
                    "range": "1-50", 
                    "description": [
                        "Number of continuous failed health checks before the server is marked down.", 
                        "Allowed values are 1-50."
                    ]
                }, 
                "tcp_monitor": {
                    "doc_type": "HealthMonitorTcp", 
                    "py_type": "HealthMonitorTcp", 
                    "name": "tcp_monitor", 
                    "required": "False", 
                    "ref_type": "HealthMonitorTcp", 
                    "description": []
                }, 
                "send_interval": {
                    "default_value": 10, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "send_interval", 
                    "required": "False", 
                    "range": "1-3600", 
                    "description": [
                        "Frequency, in seconds, that monitors are sent to a server.", 
                        "Allowed values are 1-3600."
                    ]
                }, 
                "udp_monitor": {
                    "doc_type": "HealthMonitorUdp", 
                    "py_type": "HealthMonitorUdp", 
                    "name": "udp_monitor", 
                    "required": "False", 
                    "ref_type": "HealthMonitorUdp", 
                    "description": []
                }, 
                "http_monitor": {
                    "doc_type": "HealthMonitorHttp", 
                    "py_type": "HealthMonitorHttp", 
                    "name": "http_monitor", 
                    "required": "False", 
                    "ref_type": "HealthMonitorHttp", 
                    "description": []
                }, 
                "external_monitor": {
                    "doc_type": "HealthMonitorExternal", 
                    "py_type": "HealthMonitorExternal", 
                    "name": "external_monitor", 
                    "required": "False", 
                    "ref_type": "HealthMonitorExternal", 
                    "description": []
                }, 
                "successful_checks": {
                    "default_value": 2, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "successful_checks", 
                    "required": "False", 
                    "range": "1-50", 
                    "description": [
                        "Number of continuous successful health checks before server is marked up.", 
                        "Allowed values are 1-50."
                    ]
                }
            }
        }
    }, 
    "analysis": {
        "VsSeOperationalAnalysis": {
            "name": "VsSeOperationalAnalysis", 
            "properties": {
                "vs_oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "vs_oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "pool": {
                    "doc_type": "PoolOperationalAnalysis", 
                    "py_type": "list", 
                    "name": "pool", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "PoolOperationalAnalysis", 
                    "description": []
                }, 
                "server": {
                    "doc_type": "ServerOperationalAnalysis", 
                    "py_type": "list", 
                    "name": "server", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerOperationalAnalysis", 
                    "description": []
                }
            }
        }, 
        "PoolOperationalAnalysis": {
            "name": "PoolOperationalAnalysis", 
            "properties": {
                "pool_oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "pool_oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }
            }
        }, 
        "SePlacementAnalysis": {
            "name": "SePlacementAnalysis", 
            "properties": {
                "vs_on_controller_not_on_se": {
                    "doc_type": "SeVsPlacementAnalysis", 
                    "py_type": "list", 
                    "name": "vs_on_controller_not_on_se", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeVsPlacementAnalysis", 
                    "description": []
                }, 
                "vs_on_se_not_on_controller": {
                    "doc_type": "SeVsPlacementAnalysis", 
                    "py_type": "list", 
                    "name": "vs_on_se_not_on_controller", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeVsPlacementAnalysis", 
                    "description": []
                }
            }
        }, 
        "SeVsPlacementAnalysis": {
            "name": "SeVsPlacementAnalysis", 
            "properties": {
                "east_west": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "east_west", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "VsPlacementAnalysis": {
            "name": "VsPlacementAnalysis", 
            "properties": {
                "se_placement_issues": {
                    "doc_type": "VsSePlacementAnalysis", 
                    "py_type": "list", 
                    "name": "se_placement_issues", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VsSePlacementAnalysis", 
                    "description": []
                }, 
                "vip_analysis": {
                    "doc_type": "VipPlacementAnalaysis", 
                    "py_type": "list", 
                    "name": "vip_analysis", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VipPlacementAnalaysis", 
                    "description": []
                }, 
                "east_west": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "east_west", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "ServiceEngineAnalysisSummary": {
            "name": "ServiceEngineAnalysisSummary", 
            "properties": {
                "se_placement_summary": {
                    "doc_type": "SePlacementAnalysisSummary", 
                    "py_type": "SePlacementAnalysisSummary", 
                    "name": "se_placement_summary", 
                    "required": "False", 
                    "ref_type": "SePlacementAnalysisSummary", 
                    "description": []
                }, 
                "se_config_summary": {
                    "doc_type": "SeConfigAnalysisSummary", 
                    "py_type": "SeConfigAnalysisSummary", 
                    "name": "se_config_summary", 
                    "required": "False", 
                    "ref_type": "SeConfigAnalysisSummary", 
                    "description": []
                }, 
                "se_operational_summary": {
                    "doc_type": "SeOperationalAnalysisSummary", 
                    "py_type": "SeOperationalAnalysisSummary", 
                    "name": "se_operational_summary", 
                    "required": "False", 
                    "ref_type": "SeOperationalAnalysisSummary", 
                    "description": []
                }
            }
        }, 
        "VsOperationalAnalysis": {
            "name": "VsOperationalAnalysis", 
            "properties": {
                "aggregate_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "aggregate_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "se_oper_issues": {
                    "doc_type": "VsSeOperationalAnalysis", 
                    "py_type": "list", 
                    "name": "se_oper_issues", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VsSeOperationalAnalysis", 
                    "description": []
                }
            }
        }, 
        "VirtualServiceAnalysis": {
            "name": "VirtualServiceAnalysis", 
            "properties": {
                "task": {
                    "doc_type": "VsAnalysisTask", 
                    "py_type": "list", 
                    "name": "task", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VsAnalysisTask", 
                    "description": []
                }
            }
        }, 
        "CloudSeAnalysis": {
            "name": "CloudSeAnalysis", 
            "properties": {
                "se_detail": {
                    "doc_type": "ServiceEngineRuntimeDetail", 
                    "py_type": "ServiceEngineRuntimeDetail", 
                    "name": "se_detail", 
                    "required": "False", 
                    "ref_type": "ServiceEngineRuntimeDetail", 
                    "description": []
                }
            }
        }, 
        "VirtualServiceAnalysisSummary": {
            "name": "VirtualServiceAnalysisSummary", 
            "properties": {
                "vs_placement_summary": {
                    "doc_type": "VsPlacementAnalysisSummary", 
                    "py_type": "VsPlacementAnalysisSummary", 
                    "name": "vs_placement_summary", 
                    "required": "False", 
                    "ref_type": "VsPlacementAnalysisSummary", 
                    "description": []
                }, 
                "vs_config_summary": {
                    "doc_type": "VsConfigAnalysisSummary", 
                    "py_type": "VsConfigAnalysisSummary", 
                    "name": "vs_config_summary", 
                    "required": "False", 
                    "ref_type": "VsConfigAnalysisSummary", 
                    "description": []
                }, 
                "vs_operational_summary": {
                    "doc_type": "VsOperationalAnalysisSummary", 
                    "py_type": "VsOperationalAnalysisSummary", 
                    "name": "vs_operational_summary", 
                    "required": "False", 
                    "ref_type": "VsOperationalAnalysisSummary", 
                    "description": []
                }
            }
        }, 
        "SeVsOperationalAnalysis": {
            "name": "SeVsOperationalAnalysis", 
            "properties": {
                "vs_oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "vs_oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "pool": {
                    "doc_type": "PoolOperationalAnalysis", 
                    "py_type": "list", 
                    "name": "pool", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "PoolOperationalAnalysis", 
                    "description": []
                }, 
                "server": {
                    "doc_type": "ServerOperationalAnalysis", 
                    "py_type": "list", 
                    "name": "server", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ServerOperationalAnalysis", 
                    "description": []
                }
            }
        }, 
        "VsMetricsAnalysis": {
            "name": "VsMetricsAnalysis", 
            "properties": {
                "se_metrics_issues": {
                    "doc_type": "VsSeMetricsAnalysis", 
                    "py_type": "list", 
                    "name": "se_metrics_issues", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VsSeMetricsAnalysis", 
                    "description": []
                }
            }
        }, 
        "ServerOperationalAnalysis": {
            "name": "ServerOperationalAnalysis", 
            "properties": {
                "server_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "server_ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }, 
                "server_oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "server_oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }
            }
        }, 
        "SeAnalysisTask": {
            "name": "SeAnalysisTask", 
            "properties": {
                "traffic": {
                    "doc_type": "SeTrafficAnalysis", 
                    "py_type": "SeTrafficAnalysis", 
                    "name": "traffic", 
                    "required": "False", 
                    "ref_type": "SeTrafficAnalysis", 
                    "description": []
                }, 
                "config": {
                    "doc_type": "ConfigAnalysis", 
                    "py_type": "ConfigAnalysis", 
                    "name": "config", 
                    "required": "False", 
                    "ref_type": "ConfigAnalysis", 
                    "description": []
                }, 
                "placement": {
                    "doc_type": "SePlacementAnalysis", 
                    "py_type": "SePlacementAnalysis", 
                    "name": "placement", 
                    "required": "False", 
                    "ref_type": "SePlacementAnalysis", 
                    "description": []
                }, 
                "operational": {
                    "doc_type": "SeOperationalAnalysis", 
                    "py_type": "SeOperationalAnalysis", 
                    "name": "operational", 
                    "required": "False", 
                    "ref_type": "SeOperationalAnalysis", 
                    "description": []
                }
            }
        }, 
        "CloudAnalysis": {
            "name": "CloudAnalysis", 
            "properties": {
                "host_issues": {
                    "doc_type": "CloudHostAnalysis", 
                    "py_type": "list", 
                    "name": "host_issues", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CloudHostAnalysis", 
                    "description": []
                }, 
                "se_issues": {
                    "doc_type": "CloudSeAnalysis", 
                    "py_type": "list", 
                    "name": "se_issues", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "CloudSeAnalysis", 
                    "description": []
                }
            }
        }, 
        "VsAnalysisTask": {
            "name": "VsAnalysisTask", 
            "properties": {
                "traffic": {
                    "doc_type": "VsTrafficAnalysis", 
                    "py_type": "VsTrafficAnalysis", 
                    "name": "traffic", 
                    "required": "False", 
                    "ref_type": "VsTrafficAnalysis", 
                    "description": []
                }, 
                "config": {
                    "doc_type": "ConfigAnalysis", 
                    "py_type": "ConfigAnalysis", 
                    "name": "config", 
                    "required": "False", 
                    "ref_type": "ConfigAnalysis", 
                    "description": []
                }, 
                "placement": {
                    "doc_type": "VsPlacementAnalysis", 
                    "py_type": "VsPlacementAnalysis", 
                    "name": "placement", 
                    "required": "False", 
                    "ref_type": "VsPlacementAnalysis", 
                    "description": []
                }, 
                "metrics": {
                    "doc_type": "VsMetricsAnalysis", 
                    "py_type": "VsMetricsAnalysis", 
                    "name": "metrics", 
                    "required": "False", 
                    "ref_type": "VsMetricsAnalysis", 
                    "description": []
                }, 
                "operational": {
                    "doc_type": "VsOperationalAnalysis", 
                    "py_type": "VsOperationalAnalysis", 
                    "name": "operational", 
                    "required": "False", 
                    "ref_type": "VsOperationalAnalysis", 
                    "description": []
                }
            }
        }, 
        "SeOperationalAnalysis": {
            "name": "SeOperationalAnalysis", 
            "properties": {
                "se_oper_status": {
                    "doc_type": "OperationalStatus", 
                    "py_type": "OperationalStatus", 
                    "name": "se_oper_status", 
                    "required": "False", 
                    "ref_type": "OperationalStatus", 
                    "description": []
                }, 
                "vs_oper_issues": {
                    "doc_type": "SeVsOperationalAnalysis", 
                    "py_type": "list", 
                    "name": "vs_oper_issues", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeVsOperationalAnalysis", 
                    "description": []
                }
            }
        }, 
        "ServiceEngineAnalysis": {
            "name": "ServiceEngineAnalysis", 
            "properties": {
                "task": {
                    "doc_type": "SeAnalysisTask", 
                    "py_type": "list", 
                    "name": "task", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SeAnalysisTask", 
                    "description": []
                }
            }
        }
    }, 
    "taskqueue": {
        "TaskBase": {
            "name": "TaskBase", 
            "properties": {
                "request": {
                    "doc_type": "TaskRequestBase", 
                    "py_type": "TaskRequestBase", 
                    "name": "request", 
                    "required": "False", 
                    "ref_type": "TaskRequestBase", 
                    "description": []
                }, 
                "response": {
                    "doc_type": "TaskResponseBase", 
                    "py_type": "TaskResponseBase", 
                    "name": "response", 
                    "required": "False", 
                    "ref_type": "TaskResponseBase", 
                    "description": []
                }, 
                "db_notification": {
                    "doc_type": "TaskDbNotificationBase", 
                    "py_type": "TaskDbNotificationBase", 
                    "name": "db_notification", 
                    "required": "False", 
                    "ref_type": "TaskDbNotificationBase", 
                    "description": []
                }
            }
        }
    }, 
    "secure_channel": {
        "SecureChannelToken": {
            "name": "SecureChannelToken", 
            "properties": {
                "metadata": {
                    "doc_type": "SecureChannelMetadata", 
                    "py_type": "list", 
                    "name": "metadata", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "SecureChannelMetadata", 
                    "description": []
                }
            }
        }, 
        "SecureChannelMapping": {
            "name": "SecureChannelMapping", 
            "properties": {
                "status": {
                    "default_value": "SECURE_CHANNEL_NONE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "status", 
                    "required": "False", 
                    "option_values": [
                        "SECURE_CHANNEL_NONE", 
                        "SECURE_CHANNEL_CONNECTED", 
                        "SECURE_CHANNEL_AUTH_SSH_SUCCESS", 
                        "SECURE_CHANNEL_AUTH_SSH_FAILED", 
                        "SECURE_CHANNEL_AUTH_TOKEN_SUCCESS", 
                        "SECURE_CHANNEL_AUTH_TOKEN_FAILED", 
                        "SECURE_CHANNEL_AUTH_ERRORS", 
                        "SECURE_CHANNEL_AUTH_IGNORED"
                    ], 
                    "description": [
                        "Enum options - SECURE_CHANNEL_NONE, SECURE_CHANNEL_CONNECTED, SECURE_CHANNEL_AUTH_SSH_SUCCESS, SECURE_CHANNEL_AUTH_SSH_FAILED,", 
                        "SECURE_CHANNEL_AUTH_TOKEN_SUCCESS, SECURE_CHANNEL_AUTH_TOKEN_FAILED, SECURE_CHANNEL_AUTH_ERRORS, SECURE_CHANNEL_AUTH_IGNORED."
                    ]
                }, 
                "is_controller": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_controller", 
                    "required": "False", 
                    "description": []
                }
            }
        }
    }, 
    "se": {
        "vNIC": {
            "name": "vNIC", 
            "properties": {
                "is_portchannel": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_portchannel", 
                    "required": "False", 
                    "description": []
                }, 
                "can_se_dp_takeover": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "can_se_dp_takeover", 
                    "required": "False", 
                    "description": []
                }, 
                "is_hsm": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_hsm", 
                    "required": "False", 
                    "description": []
                }, 
                "is_avi_internal_network": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_avi_internal_network", 
                    "required": "False", 
                    "description": []
                }, 
                "enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "enabled", 
                    "required": "False", 
                    "description": []
                }, 
                "dhcp_enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "dhcp_enabled", 
                    "required": "False", 
                    "description": []
                }, 
                "del_pending": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "del_pending", 
                    "required": "False", 
                    "description": []
                }, 
                "vlan_interfaces": {
                    "doc_type": "VlanInterface", 
                    "py_type": "list", 
                    "name": "vlan_interfaces", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "VlanInterface", 
                    "description": []
                }, 
                "is_mgmt": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_mgmt", 
                    "required": "False", 
                    "description": []
                }, 
                "members": {
                    "doc_type": "MemberInterface", 
                    "py_type": "list", 
                    "name": "members", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "MemberInterface", 
                    "description": []
                }, 
                "vnic_networks": {
                    "doc_type": "vNICNetwork", 
                    "py_type": "list", 
                    "name": "vnic_networks", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "vNICNetwork", 
                    "description": []
                }, 
                "vrf_id": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vrf_id", 
                    "required": "False", 
                    "description": []
                }, 
                "is_asm": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_asm", 
                    "required": "False", 
                    "description": []
                }, 
                "mtu": {
                    "default_value": 1500, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "mtu", 
                    "required": "False", 
                    "description": []
                }, 
                "vlan_id": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vlan_id", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "ConVip": {
            "name": "ConVip", 
            "properties": {
                "subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "list", 
                    "name": "subnet", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }, 
                "vip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "vip", 
                    "required": "False", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "ConServer": {
            "name": "ConServer", 
            "properties": {
                "subnet": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "list", 
                    "name": "subnet", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }, 
                "server_ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "server_ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "DefaultGateway": {
            "name": "DefaultGateway", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "MemberInterface": {
            "name": "MemberInterface", 
            "properties": {
                "active": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "active", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "ServiceEngineInternal": {
            "name": "ServiceEngineInternal", 
            "properties": {
                "default_gws": {
                    "doc_type": "DefaultGateway", 
                    "py_type": "list", 
                    "name": "default_gws", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "DefaultGateway", 
                    "description": []
                }, 
                "version": {
                    "default_value": "0.0.0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "version", 
                    "required": "False", 
                    "description": []
                }, 
                "data_vnics": {
                    "doc_type": "vNIC", 
                    "py_type": "list", 
                    "name": "data_vnics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "vNIC", 
                    "description": []
                }, 
                "resources": {
                    "doc_type": "SeResources", 
                    "py_type": "SeResources", 
                    "name": "resources", 
                    "required": "False", 
                    "ref_type": "SeResources", 
                    "description": []
                }, 
                "mgmt_vnic": {
                    "doc_type": "vNIC", 
                    "py_type": "vNIC", 
                    "name": "mgmt_vnic", 
                    "required": "False", 
                    "ref_type": "vNIC", 
                    "description": []
                }
            }
        }, 
        "PortGroup": {
            "name": "PortGroup", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddr", 
                    "py_type": "IpAddr", 
                    "name": "ip", 
                    "required": "True", 
                    "ref_type": "IpAddr", 
                    "description": []
                }
            }
        }, 
        "ServiceEngine": {
            "name": "ServiceEngine", 
            "properties": {
                "enable_state": {
                    "default_value": "SE_STATE_ENABLED", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "enable_state", 
                    "required": "False", 
                    "option_values": [
                        "SE_STATE_ENABLED", 
                        "SE_STATE_DISABLED_FOR_PLACEMENT", 
                        "SE_STATE_DISABLED"
                    ], 
                    "description": [
                        "Inorder to disable se set this field appropriately.", 
                        "Enum options - SE_STATE_ENABLED, SE_STATE_DISABLED_FOR_PLACEMENT, SE_STATE_DISABLED."
                    ]
                }, 
                "mgmt_vnic": {
                    "doc_type": "vNIC", 
                    "py_type": "vNIC", 
                    "name": "mgmt_vnic", 
                    "required": "False", 
                    "ref_type": "vNIC", 
                    "description": []
                }, 
                "name": {
                    "default_value": "VM name unknown", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "name", 
                    "required": "False", 
                    "description": []
                }, 
                "container_mode": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "container_mode", 
                    "required": "False", 
                    "description": []
                }, 
                "controller_created": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "controller_created", 
                    "required": "False", 
                    "description": []
                }, 
                "data_vnics": {
                    "doc_type": "vNIC", 
                    "py_type": "list", 
                    "name": "data_vnics", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "vNIC", 
                    "description": []
                }, 
                "container_type": {
                    "default_value": "CONTAINER_TYPE_HOST", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "container_type", 
                    "required": "False", 
                    "option_values": [
                        "CONTAINER_TYPE_BRIDGE", 
                        "CONTAINER_TYPE_HOST", 
                        "CONTAINER_TYPE_HOST_DPDK"
                    ], 
                    "description": [
                        "Enum options - CONTAINER_TYPE_BRIDGE, CONTAINER_TYPE_HOST, CONTAINER_TYPE_HOST_DPDK."
                    ]
                }, 
                "resources": {
                    "doc_type": "SeResources", 
                    "py_type": "SeResources", 
                    "name": "resources", 
                    "required": "False", 
                    "ref_type": "SeResources", 
                    "description": []
                }
            }
        }, 
        "VlanInterface": {
            "name": "VlanInterface", 
            "properties": {
                "vnic_networks": {
                    "doc_type": "vNICNetwork", 
                    "py_type": "list", 
                    "name": "vnic_networks", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "vNICNetwork", 
                    "description": []
                }, 
                "is_mgmt": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "is_mgmt", 
                    "required": "False", 
                    "description": []
                }, 
                "vlan_id": {
                    "default_value": 0, 
                    "doc_type": "integer", 
                    "py_type": "int", 
                    "name": "vlan_id", 
                    "required": "False", 
                    "description": []
                }, 
                "dhcp_enabled": {
                    "default_value": "True", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "dhcp_enabled", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "SeSwitchoverParams": {
            "name": "SeSwitchoverParams", 
            "properties": {
                "force": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "force", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "ConInfo": {
            "name": "ConInfo", 
            "properties": {
                "vip": {
                    "doc_type": "ConVip", 
                    "py_type": "ConVip", 
                    "name": "vip", 
                    "required": "True", 
                    "ref_type": "ConVip", 
                    "description": []
                }, 
                "servers": {
                    "doc_type": "ConServer", 
                    "py_type": "list", 
                    "name": "servers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ConServer", 
                    "description": []
                }
            }
        }, 
        "ServiceEngineDbExtension": {
            "name": "ServiceEngineDbExtension", 
            "properties": {
                "migrate_state": {
                    "default_value": "SE_MIGRATE_STATE_IDLE", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "migrate_state", 
                    "required": "False", 
                    "option_values": [
                        "SE_MIGRATE_STATE_IDLE", 
                        "SE_MIGRATE_STATE_STARTED", 
                        "SE_MIGRATE_STATE_FINISHED_WITH_FAILURE", 
                        "SE_MIGRATE_STATE_FINISHED"
                    ], 
                    "description": [
                        "Enum options - SE_MIGRATE_STATE_IDLE, SE_MIGRATE_STATE_STARTED, SE_MIGRATE_STATE_FINISHED_WITH_FAILURE, SE_MIGRATE_STATE_FINISHED."
                    ]
                }, 
                "consumers": {
                    "doc_type": "ConInfo", 
                    "py_type": "list", 
                    "name": "consumers", 
                    "required": "False", 
                    "array": true, 
                    "ref_type": "ConInfo", 
                    "description": []
                }, 
                "inband_mgmt": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "inband_mgmt", 
                    "required": "False", 
                    "description": []
                }, 
                "se_connected": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "se_connected", 
                    "required": "False", 
                    "description": []
                }, 
                "gcp_info": {
                    "doc_type": "GcpInfo", 
                    "py_type": "GcpInfo", 
                    "name": "gcp_info", 
                    "required": "False", 
                    "ref_type": "GcpInfo", 
                    "description": [
                        "Google cloud info for this se instance."
                    ]
                }, 
                "version": {
                    "default_value": "0.0.0", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "version", 
                    "required": "False", 
                    "description": []
                }, 
                "vinfra_discovered": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "vinfra_discovered", 
                    "required": "False", 
                    "description": []
                }, 
                "owned_by_controller": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "owned_by_controller", 
                    "required": "False", 
                    "description": []
                }
            }
        }, 
        "vNICNetwork": {
            "name": "vNICNetwork", 
            "properties": {
                "ip": {
                    "doc_type": "IpAddrPrefix", 
                    "py_type": "IpAddrPrefix", 
                    "name": "ip", 
                    "required": "True", 
                    "ref_type": "IpAddrPrefix", 
                    "description": []
                }, 
                "ctlr_alloc": {
                    "default_value": "False", 
                    "doc_type": "bool", 
                    "py_type": "bool", 
                    "name": "ctlr_alloc", 
                    "required": "False", 
                    "description": []
                }, 
                "mode": {
                    "default_value": "DHCP", 
                    "doc_type": "string", 
                    "py_type": "str", 
                    "name": "mode", 
                    "required": "True", 
                    "option_values": [
                        "DHCP", 
                        "STATIC", 
                        "VIP", 
                        "DOCKER_HOST"
                    ], 
                    "description": [
                        "Enum options - DHCP, STATIC, VIP, DOCKER_HOST."
                    ]
                }
            }
        }
    }
}